{"pageContext":{},"actionOnLoad":["@actions.initialData","@actions.isLunchBreakTrue"],"localPageContext":true,"jslib":{"isInvalidMinimumBreakDuration":"function(pageContext){return (typeof pageContext.invalidMinimumBreakDuration === 'undefined' || pageContext.invalidMinimumBreakDuration === true)}","isNotMultipleSchedule":"function(pageContext){return (!(pageContext.schedule === 'multiple' && pageContext.hours == 'customHours'));}","isSchedule2EndTimeDisabled":"function(pageContext){return (pageContext.hours == '24hours' || !pageContext.weeklyScheduleSchedule2StartTime);}","isHoursOff":"function(pageContext){return (pageContext.hours=='off' || typeof pageContext.hours=='undefined' || pageContext.hours=='' || (pageContext.hours==='customHours' && (typeof pageContext.schedule==='undefined' || pageContext.schedule==='')))}","isTimeDisabled":"function(pageContext){return (pageContext.hours == '24hours' || pageContext.hours == 'off' || typeof pageContext.hours=='undefined' || pageContext.hours=='')}","isSchedule1EndTimeDisabled":"function(pageContext){return (pageContext.hours == '24hours' || !pageContext.weeklyScheduleSchedule1StartTime);}","isMinDurationBannerHidden":"function(pageContext){return (pageContext.isAddBreak === false ||(pageContext.isAddBreak === true && pageContext.minimumBreakDuration <= pageContext.lunchBreakWindow))}","isSaveDisabled":"function(pageContext) { if (pageContext.hours === '' || typeof pageContext.hours === 'undefined' || (pageContext.hours === pageContext.initialHours && pageContext.hours !== 'customHours') && ((pageContext.isAddBreak === false && pageContext.isAddBreak === pageContext.initialIsAddBreak) || (pageContext.isAddBreak === true && (pageContext.breakEndTime === '' || typeof pageContext.breakEndTime === 'undefined' || pageContext.breakStartTime === '' || typeof pageContext.breakStartTime === 'undefined' || pageContext.minimumBreakDuration === '' || typeof pageContext.minimumBreakDuration === 'undefined' || pageContext.minimumBreakDuration <= 0 || (pageContext.breakEndTime === pageContext.initialBreakEndTime && pageContext.breakStartTime === pageContext.initialBreakStartTime && pageContext.initialMinimumBreakDuration === pageContext.minimumBreakDuration))))) { return true; } else if (pageContext.hours === 'customHours') { if (typeof pageContext.schedule !== 'undefined' && pageContext.schedule !== '') { return ((((pageContext.schedule == 'single' && ((pageContext.weeklyScheduleSchedule1StartTime == pageContext.initialWeeklyScheduleSchedule1StartTime && pageContext.weeklyScheduleSchedule1EndTime == pageContext.initialWeeklyScheduleSchedule1EndTime) || pageContext.weeklyScheduleSchedule1EndTime <= pageContext.weeklyScheduleSchedule1StartTime || !pageContext.weeklyScheduleSchedule1StartTime || !pageContext.weeklyScheduleSchedule1EndTime)) || ((pageContext.isAddBreak === true && (typeof pageContext.breakEndTime === 'undefined' || pageContext.breakEndTime === '' || typeof pageContext.breakStartTime === 'undefined' || pageContext.breakStartTime === '' || pageContext.minimumBreakDuration === '' || pageContext.minimumBreakDuration <= 0 || typeof pageContext.minimumBreakDuration === 'undefined' )))) || (pageContext.schedule == 'multiple' && ((pageContext.weeklyScheduleSchedule1StartTime == pageContext.initialWeeklyScheduleSchedule1StartTime && pageContext.weeklyScheduleSchedule1EndTime == pageContext.initialWeeklyScheduleSchedule1EndTime && pageContext.weeklyScheduleSchedule2StartTime == pageContext.initialWeeklyScheduleSchedule2StartTime && pageContext.weeklyScheduleSchedule2EndTime == pageContext.initialWeeklyScheduleSchedule2EndTime) || ((pageContext.weeklyScheduleSchedule2EndTime <= pageContext.weeklyScheduleSchedule2StartTime) || (pageContext.weeklyScheduleSchedule1EndTime > pageContext.weeklyScheduleSchedule2StartTime) || (pageContext.weeklyScheduleSchedule1EndTime <= pageContext.weeklyScheduleSchedule1StartTime)) || !pageContext.weeklyScheduleSchedule1StartTime || !pageContext.weeklyScheduleSchedule1EndTime || !pageContext.weeklyScheduleSchedule2StartTime || !pageContext.weeklyScheduleSchedule2EndTime))) && ((pageContext.isAddBreak === false && pageContext.isAddBreak === pageContext.initialIsAddBreak) || (pageContext.isAddBreak === true && (typeof pageContext.breakEndTime === 'undefined' || pageContext.breakEndTime === '' || typeof pageContext.breakStartTime === 'undefined' || pageContext.breakStartTime === '' || pageContext.minimumBreakDuration === '' || pageContext.minimumBreakDuration <= 0 || typeof pageContext.minimumBreakDuration === 'undefined' || (pageContext.breakEndTime === pageContext.initialBreakEndTime && pageContext.breakStartTime === pageContext.initialBreakStartTime && pageContext.initialMinimumBreakDuration == pageContext.minimumBreakDuration))))); } return true; } return false; }","isBannerHidden":"function(pageContext){if(pageContext.weeklyScheduleSchedule2StartTime!==''){if(pageContext.weeklyScheduleSchedule1EndTime>pageContext.weeklyScheduleSchedule2StartTime){return false;}else{return true;}}return true;}","validateOverlappingSchedule2":"function(pageContext){ if (pageContext.weeklyScheduleSchedule2StartTime < pageContext.weeklyScheduleSchedule2EndTime || pageContext.weeklyScheduleSchedule2StartTime=== '' || pageContext.weeklyScheduleSchedule2EndTime=== ''){return false;} else {return true;}}","isBreakWindowBannerHidden":"function(pageContext){return (pageContext.isAddBreak === false ||(pageContext.isAddBreak === true &&pageContext.schedule === 'single' && ( pageContext.weeklyScheduleSchedule1StartTime <= pageContext.breakStartTime && pageContext.weeklyScheduleSchedule1EndTime >= pageContext.breakEndTime )))}","lunchBreakTimingValidation":"function(pageContext){ if (pageContext.breakStartTime < pageContext.breakEndTime || pageContext.breakStartTime === '' || typeof pageContext.breakStartTime === 'undefined'|| pageContext.breakEndTime=== '' || typeof pageContext.breakEndTime === 'undefined'){ return false;} else {return true;}}","isInvalidLunchBreakWindow":"function(pageContext){return (typeof pageContext.invalidLunchBreakWindow === 'undefined' || pageContext.invalidLunchBreakWindow === true)}","isSchedule2StartTimeDisabled":"function(pageContext){return (pageContext.hours == '24hours' || !pageContext.weeklyScheduleSchedule1EndTime);}","validateActualQuantity":"function (pageContext) { return ((Number(pageContext.minimumBreakDuration) <= 0) || (Number(pageContext.minimumBreakDuration) % 1 !== 0)); }","bannerText":"function(pageContext){ return (pageContext.bannerText= '@lang.[\"stao\",\"Schedule timings are overlapping\"]');}","isAddBreak":"function(pageContext){return (!pageContext.isAddBreak);}","sectionLabel":"function(pageContext){ if (!(pageContext.schedule === 'multiple' && pageContext.hours == 'customHours')){return '@lang.[\"s19\",\"Schedule\"]'} return '@lang.[\"s33\",\"Schedule 1\"]'}","validateOverlappingSchedule1":"function(pageContext) { if (pageContext.weeklyScheduleSchedule1StartTime < pageContext.weeklyScheduleSchedule1EndTime || pageContext.weeklyScheduleSchedule1StartTime ==='' || pageContext.weeklyScheduleSchedule1EndTime=== '') {return false;} else {return true;}}"},"header":{"leftData":{"children":[{"name":"back","icon":"@iconlib.NavigationArrowBackGrey","actionOnClick":["@actions.openPreviousPanel","@actions.refreshDataGrid","@actions.clearData"],"type":"buttonIcon"}]},"children":[{"buttonType":"primary","actionOnClick":["@actions.isLunchBreakValid"],"disabled":"@jslib.isSaveDisabled","id":"submit","type":"button","title":"@lang.['s12','Save']"}],"title":"@lang.['es1','Edit Schedule']"},"body":{"children":[{"children":[{"alertMessage":"@jslib.bannerText","actionOnChange":"@actions.clearbannerType","onClose":"@actions.clearbannerType","alertType":"danger","hidden":"@jslib.isBannerHidden","id":"alertMessage","type":"alert","timeout":5000},{"alertMessage":"@lang.['tbfotstpatbtmsifitst','The break falls outside the shift timing. Please adjust the break to make sure it falls inside the shift timing.']","onClose":"@actions.clearLunchBreakBanner","alertType":"danger","hidden":"@jslib.isInvalidLunchBreakWindow","id":"alertMessageForBreakWindow","type":"alert","timeout":300000},{"alertMessage":"@lang.['mbdsbltoettbd','Miniumum break duration should be less than or equal to total break duration.']","onClose":"@actions.clearMinimumBreakDuration","alertType":"danger","hidden":"@jslib.isInvalidMinimumBreakDuration","id":"alertMessageForMinimumBreakDuration","type":"alert","timeout":300000},{"disabled":true,"id":"weeklyScheduleDay","label":"@lang.['d12','Day']","type":"input","value":"@pageContext.weeklyScheduleDay"},{"actionOnChange":"@actions.assignScheduleValues","options":[{"name":"@lang.['ch','Custom Hours']","id":"customHours"},{"name":"@lang.['2h','24 Hours']","id":"24hours"},{"name":"@lang.['o3','Off']","id":"off"}],"id":"hours","optTitleKey":"name","optValueKey":"id","type":"select","title":"@lang.['h','Hours']","value":"@pageContext.hours","placeHolder":"@lang.['sh','Select hours']"},{"actionOnChange":"@actions.assignScheduleValues","hidden":"@jslib.isTimeDisabled","options":[{"name":"@lang.['ss7','Single Shift']","id":"single"},{"name":"@lang.['ss8','Split Shift']","id":"multiple"}],"id":"schedule","optTitleKey":"name","optValueKey":"id","type":"select","title":"@lang.['s19','Schedule']","value":"@pageContext.schedule","placeHolder":"@lang.['ss4','Select schedule']"}],"label":"@lang.['d12','Day']","id":"day","type":"section"},{"hidden":"@jslib.isHoursOff","children":[{"isRequired":true,"errorText":"@lang.['stmbbtet','Start time must be before the end time']","enableTime":true,"validator":"@jslib.validateOverlappingSchedule1","disabled":"@jslib.isTimeDisabled","id":"schedule1StartTime","placeholder":"@lang.['st1','Select time']","title":"@lang.['st7','Start Time']","type":"absoluteTime","value":"@pageContext.weeklyScheduleSchedule1StartTime"},{"isRequired":true,"errorText":"@lang.['stmbbtet','Start time must be before the end time']","enableTime":true,"validator":"@jslib.validateOverlappingSchedule1","disabled":"@jslib.isSchedule1EndTimeDisabled","id":"schedule1EndTime","placeholder":"@lang.['st1','Select time']","title":"@lang.['et2','End Time']","type":"absoluteTime","value":"@pageContext.weeklyScheduleSchedule1EndTime"}],"label":"@jslib.sectionLabel","id":"schedule1","type":"section"},{"hidden":"@jslib.isNotMultipleSchedule","children":[{"isRequired":true,"errorText":"@lang.['stsbltet','Start Time should be less than End Time']","actionOnChange":["@actions.calculateMinBreakDuration"],"enableTime":true,"validator":"@jslib.validateOverlappingSchedule2","disabled":"@jslib.isSchedule2StartTimeDisabled","id":"schedule2StartTime","placeholder":"@lang.['st1','Select time']","title":"@lang.['st7','Start Time']","type":"absoluteTime","value":"@pageContext.weeklyScheduleSchedule2StartTime"},{"isRequired":true,"errorText":"@lang.['stsbltet','Start Time should be less than End Time']","enableTime":true,"validator":"@jslib.validateOverlappingSchedule2","disabled":"@jslib.isSchedule2EndTimeDisabled","id":"schedule2EndTime","placeholder":"@lang.['st1','Select time']","title":"@lang.['et2','End Time']","type":"absoluteTime","value":"@pageContext.weeklyScheduleSchedule2EndTime"}],"label":"@lang.['s26','Schedule 2']","id":"schedule2","type":"section"},{"hidden":"@jslib.isHoursOff","children":[{"actionOnChange":["@actions.setMinimumBreakDuration"],"data":"true","disabled":false,"id":"addBreak","placeholder":"@lang.['ab1','Add Break']","type":"switchComponent","value":"@pageContext.isAddBreak"},{"hidden":"@jslib.isAddBreak","children":[{"children":[{"errorText":"@lang.['stmbbtet','Start time must be before the end time']","actionOnChange":["@actions.setBreakStartDateTime","@actions.calculateMinBreakDuration"],"validator":"@jslib.lunchBreakTimingValidation","id":"breakStartTime","title":"@lang.['st7','Start Time']","type":"absoluteTime","value":"@pageContext.breakStartTime","placeHolder":"@lang.['est','Enter start time']"}],"flex":"3","type":"column"},{"children":[{"errorText":"@lang.['stmbbtet','Start time must be before the end time']","actionOnChange":["@actions.setBreakEndDateTime","@actions.calculateMinBreakDuration"],"validator":"@jslib.lunchBreakTimingValidation","id":"breakEndTime","title":"@lang.['endTime','End Time']","type":"absoluteTime","value":"@pageContext.breakEndTime","placeHolder":"@lang.['eet','Enter end time']"}],"flex":"3","type":"column"}],"id":"maintenanceDateRow","type":"row"},{"isRequired":true,"errorText":"@lang.['evmbdm','Enter valid minimum break duration (in minutes)']","hidden":"@jslib.isAddBreak","validator":"@jslib.validateActualQuantity","inputType":"number","id":"workOrderTaskEstimatedDuration","label":"@lang.['mbdm','Minimum Break Duration (in Minutes)']","placeholder":"@lang.['embd','Enter minimum break duration']","type":"input","value":"@pageContext.minimumBreakDuration"}],"label":"@lang.['b3','Break(Optional)']","id":"lunchBreak","type":"section"}]},"actions":[{"name":"openPreviousPanel","type":"backPanel"},{"name":"setSubActionUpsertWeeklySchedule","type":"script","actionDef":"function(pageContext){pageContext.subAction = 'upsertWeeklySchedule';}"},{"name":"assignScheduleValues","type":"script","actionDef":"function(pageContext){ var addMinutes = function (time, date) { return (new Date(date.getTime() + (time * 60000))).toISOString().replace('T', ' ').replace('Z', ''); }; if (pageContext.hours === 'off') { pageContext.weeklyScheduleIsOpen = false; pageContext.weeklyScheduleIsAllDay = false; pageContext.weeklyScheduleSchedule = []; pageContext.weeklyScheduleSchedule1StartTime = ''; pageContext.weeklyScheduleSchedule1EndTime = ''; pageContext.weeklyScheduleSchedule2StartTime = ''; pageContext.weeklyScheduleSchedule2EndTime = ''; } else if (pageContext.hours === '24hours') { pageContext.weeklyScheduleSchedule1EndTime = '23:59:59.000'; pageContext.weeklyScheduleSchedule1StartTime = '00:00:00.000'; pageContext.weeklyScheduleSchedule2StartTime = ''; pageContext.weeklyScheduleSchedule2EndTime = ''; pageContext.weeklyScheduleIsOpen = true; pageContext.weeklyScheduleIsAllDay = true; } else { pageContext.weeklyScheduleSchedule1StartTime = ''; pageContext.weeklyScheduleSchedule1EndTime = ''; pageContext.weeklyScheduleSchedule2StartTime = ''; pageContext.weeklyScheduleSchedule2EndTime = ''; pageContext.weeklyScheduleIsOpen = true; pageContext.weeklyScheduleIsAllDay = false; }}"},{"endPoint":"event/start","name":"fireProcessEvent","outputVarMap":{"data":"@pageContext.workFlowResult"},"type":"api","actionDef":{"data":[{"eventId":"settingsGeneralCalendarProcessEvent","contextVar":{"weeklySchedule":{"lunchBreakSchedule":"@pageContext.lunchBreakSchedule","schedule":"@pageContext.weeklyScheduleSchedule","isAllDay":"@pageContext.weeklyScheduleIsAllDay","isOpen":"@pageContext.weeklyScheduleIsOpen","calendarId":"@pageContext.calendarId","recver":"@pageContext.weeklyScheduleRecver","displayOrder":"@pageContext.weeklyScheduleDisplayOrder","isLunchBreak":"@pageContext.isAddBreak"},"subAction":"@pageContext.subAction"}}]}},{"name":"initialData","type":"script","actionDef":"function(pageContext) {function needToAppendMS(str){ if (str.includes('.')) { return str; } else { return str = str + '.000'; } } if (pageContext.weeklyScheduleIsOpen == false && pageContext.weeklyScheduleIsAllDay == false) { pageContext.hours = 'off'; } else if (pageContext.weeklyScheduleIsOpen == true && pageContext.weeklyScheduleIsAllDay == false) { pageContext.hours = 'customHours'; if (typeof pageContext.weeklyScheduleSchedule !== 'undefined' && typeof pageContext.weeklyScheduleSchedule.length !== 'undefined') { pageContext.schedule = (pageContext.weeklyScheduleSchedule.length > 1) ? 'multiple' : 'single'; pageContext.initialSchedule = pageContext.schedule; pageContext.initialWeeklyScheduleSchedule1StartTime = needToAppendMS(pageContext.weeklyScheduleSchedule1StartTime); pageContext.initialWeeklyScheduleSchedule1EndTime = needToAppendMS(pageContext.weeklyScheduleSchedule1EndTime); if (pageContext.weeklyScheduleSchedule.length == 2) { pageContext.initialWeeklyScheduleSchedule2StartTime = needToAppendMS(pageContext.weeklyScheduleSchedule2StartTime); pageContext.initialWeeklyScheduleSchedule2EndTime = needToAppendMS(pageContext.weeklyScheduleSchedule2EndTime); } } } else if (pageContext.weeklyScheduleIsOpen == true && pageContext.weeklyScheduleIsAllDay == true) { pageContext.hours = '24hours'; }; pageContext.initialHours = pageContext.hours; if (typeof pageContext.isAddBreak === 'undefined' || pageContext.isAddBreak === '') { pageContext.isAddBreak = false; } pageContext.initialIsAddBreak = pageContext.isAddBreak; if (pageContext.isAddBreak === true) { pageContext.initialBreakStartTime = pageContext.breakStartTime; pageContext.initialBreakEndTime = pageContext.breakEndTime; pageContext.initialMinimumBreakDuration = pageContext.minimumBreakDuration; }}"},{"name":"refreshDataGrid","type":"refreshDataGrid"},{"name":"setWeeklyScheduleSchedule","type":"script","actionDef":"function(pageContext){pageContext.weeklyScheduleSchedule = []; function needToAppendMS(str) { if (str.includes('.')) { return str; } else { return str = str + '.000'; } } if (pageContext.hours !== 'off') { if (typeof pageContext.weeklyScheduleSchedule !== 'undefined' && Array.isArray(pageContext.weeklyScheduleSchedule) && pageContext.weeklyScheduleSchedule.length > 0) { pageContext.weeklyScheduleSchedule[0].start = needToAppendMS(pageContext.weeklyScheduleSchedule1StartTime); pageContext.weeklyScheduleSchedule[0].end = needToAppendMS(pageContext.weeklyScheduleSchedule1EndTime); } else { pageContext.weeklyScheduleSchedule.push({ 'start': needToAppendMS(pageContext.weeklyScheduleSchedule1StartTime), 'end': needToAppendMS(pageContext.weeklyScheduleSchedule1EndTime) }); } if (pageContext.hours === 'customHours' && pageContext.schedule === 'multiple') { if (typeof pageContext.weeklyScheduleSchedule !== 'undefined' && Array.isArray(pageContext.weeklyScheduleSchedule) && pageContext.weeklyScheduleSchedule.length > 0) { pageContext.weeklyScheduleSchedule[0].start = needToAppendMS(pageContext.weeklyScheduleSchedule1StartTime); pageContext.weeklyScheduleSchedule[0].end = needToAppendMS(pageContext.weeklyScheduleSchedule1EndTime); pageContext.weeklyScheduleSchedule.push({ 'start': needToAppendMS(pageContext.weeklyScheduleSchedule2StartTime), 'end': needToAppendMS(pageContext.weeklyScheduleSchedule2EndTime) }); } else { pageContext.weeklyScheduleSchedule.push({ 'start': needToAppendMS(pageContext.weeklyScheduleSchedule2StartTime), 'end': needToAppendMS(pageContext.weeklyScheduleSchedule2EndTime) }); } } }}"},{"name":"clearData","type":"script","actionDef":"function(pageContext){pageContext.weeklyScheduleSchedule1StartTime = ''; pageContext.weeklyScheduleSchedule1EndTime = ''; pageContext.weeklyScheduleSchedule2StartTime = ''; pageContext.weeklyScheduleSchedule2EndTime = '';pageContext.isAddBreak = false;pageContext.breakStartTime = '';pageContext.breakEndTime = '';pageContext.minimumBreakDuration = 30;}"},{"name":"setBreakStartDateTime","type":"script","actionDef":"function(pageContext){const currentDate = new Date(); pageContext.breakStartDateTime = new Date(currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate() + ' ' + pageContext.breakStartTime).toISOString().replace(/T/, ' ').replace(/\\..+/, '').replace(/Z/, '');}"},{"name":"setBreakEndDateTime","type":"script","actionDef":"function(pageContext){const currentDate = new Date(); pageContext.breakEndDateTime = new Date(currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate() + ' ' + pageContext.breakEndTime).toISOString().replace(/T/, ' ').replace(/\\..+/, '').replace(/Z/, '');}"},{"name":"calculateMinBreakDuration","type":"script","actionDef":"function(pageContext){if(pageContext.breakStartTime !== '' && typeof pageContext.breakStartTime !== 'undefined' && pageContext.breakEndTime !== '' && typeof pageContext.breakEndTime !== 'undefined' && pageContext.breakStartTime < pageContext.breakEndTime){pageContext.lunchBreakWindow = Math.floor((new Date(pageContext.breakEndDateTime) - new Date(pageContext.breakStartDateTime)) / 1000)/60;pageContext.minimumBreakDuration = pageContext.lunchBreakWindow;}}"},{"name":"calculateLunchBreakWindow","type":"script","actionDef":"function(pageContext){if(pageContext.breakStartTime !== '' && typeof pageContext.breakStartTime !== 'undefined' && pageContext.breakEndTime !== '' && typeof pageContext.breakEndTime !== 'undefined' && pageContext.breakStartTime < pageContext.breakEndTime){pageContext.lunchBreakWindow = Math.floor((new Date(pageContext.breakEndDateTime) - new Date(pageContext.breakStartDateTime)) / 1000)/60;}}"},{"falseStep":["@actions.showInvalidLunchBreakAlert"],"trueStep":["@actions.setSubActionUpsertWeeklySchedule","@actions.setWeeklyScheduleSchedule","@actions.setLunchBreakSchedule","@actions.fireProcessEvent","@actions.openPreviousPanel","@actions.refreshDataGrid","@actions.clearData"],"name":"isLunchBreakValid","type":"decision","actionDef":"function(pageContext){if (pageContext.hours === 'customHours') { return (pageContext.isAddBreak === false || (pageContext.isAddBreak === true && ((pageContext.schedule === 'single' && pageContext.weeklyScheduleSchedule1StartTime <= pageContext.breakStartTime && pageContext.weeklyScheduleSchedule1EndTime >= pageContext.breakEndTime) || (pageContext.schedule === 'multiple' && ((pageContext.weeklyScheduleSchedule1StartTime <= pageContext.breakStartTime && pageContext.weeklyScheduleSchedule1EndTime >= pageContext.breakEndTime) || (pageContext.weeklyScheduleSchedule2StartTime <= pageContext.breakStartTime && pageContext.weeklyScheduleSchedule2EndTime >= pageContext.breakEndTime))))) && pageContext.minimumBreakDuration <= pageContext.lunchBreakWindow) } else if (pageContext.hours === '24hours' && pageContext.isAddBreak === true) { return (pageContext.minimumBreakDuration <= pageContext.lunchBreakWindow) } return true;}"},{"name":"showInvalidLunchBreakAlert","type":"script","actionDef":"function(pageContext){if (pageContext.hours === 'customHours') { if (pageContext.schedule === 'single') { if (pageContext.weeklyScheduleSchedule1StartTime >= pageContext.breakStartTime || pageContext.weeklyScheduleSchedule1EndTime <= pageContext.breakEndTime) { pageContext.invalidLunchBreakWindow = false; } else { pageContext.invalidLunchBreakWindow = true; } if (pageContext.minimumBreakDuration > pageContext.lunchBreakWindow) { pageContext.invalidMinimumBreakDuration = false; } else { pageContext.invalidMinimumBreakDuration = true; } } else { if ((pageContext.weeklyScheduleSchedule1StartTime <= pageContext.breakStartTime && pageContext.weeklyScheduleSchedule1EndTime >= pageContext.breakEndTime) || (pageContext.weeklyScheduleSchedule2StartTime <= pageContext.breakStartTime && pageContext.weeklyScheduleSchedule2EndTime >= pageContext.breakEndTime)) { pageContext.invalidLunchBreakWindow = true; } else { pageContext.invalidLunchBreakWindow = false; } if (pageContext.minimumBreakDuration > pageContext.lunchBreakWindow) { pageContext.invalidMinimumBreakDuration = false; } else { pageContext.invalidMinimumBreakDuration = true; } } }else if (pageContext.hours === '24hours') { if(pageContext.minimumBreakDuration > pageContext.lunchBreakWindow){ pageContext.invalidMinimumBreakDuration = false; }else{ pageContext.invalidMinimumBreakDuration = true; } }}"},{"name":"setLunchBreakSchedule","type":"script","actionDef":"function(pageContext){pageContext.lunchBreakSchedule = []; if (pageContext.isAddBreak === true && pageContext.hours !=='off' ) { pageContext.lunchBreakSchedule.push({ 'start': pageContext.breakStartTime , 'end': pageContext.breakEndTime , 'minimumBreakDuration': pageContext.minimumBreakDuration});  }}"},{"name":"clearLunchBreakBanner","type":"script","actionDef":"function(pageContext){pageContext.invalidLunchBreakWindow = true;}"},{"name":"clearMinimumBreakDuration","type":"script","actionDef":"function(pageContext){pageContext.invalidMinimumBreakDuration = true;}"},{"falseStep":[],"trueStep":["@actions.setBreakStartDateTime","@actions.setBreakEndDateTime","@actions.calculateLunchBreakWindow"],"name":"isLunchBreakTrue","type":"decision","actionDef":"function(pageContext){return (pageContext.isAddBreak === true)}"},{"name":"setMinimumBreakDuration","type":"script","actionDef":"function(pageContext) { if (pageContext.isAddBreak === true) { if(typeof pageContext.initialMinimumBreakDuration === 'undefined'){ pageContext.minimumBreakDuration = 30; pageContext.initialMinimumBreakDuration = 30; }else{ pageContext.minimumBreakDuration = pageContext.initialMinimumBreakDuration ; pageContext.breakStartTime = pageContext.initialBreakStartTime;pageContext.breakEndTime = pageContext.initialBreakEndTime; } } }"}]}