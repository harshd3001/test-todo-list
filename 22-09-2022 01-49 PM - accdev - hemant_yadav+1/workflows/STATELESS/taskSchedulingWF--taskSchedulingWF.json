{"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"contextChangePermitted":true,"name":"processData ","description":"process data for scheduling","processRule":"{ if (typeof contextVar.defaultInputContext !== 'undefined') { for (const key in contextVar.defaultInputContext) { contextVar[key] = contextVar.defaultInputContext[key]; } } contextVar.taskId = contextVar.data.id; contextVar.recommendedTechId = contextVar.data.assignedToUserId; contextVar.statusId = 'workOrderTaskScheduled'; }","nodeType":"PROCESS","jsEngine":"es6"},"isSchedulerCurrentStatusFailed":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"updateWorkOrderTask"}],"name":"isSchedulerCurrentStatusFailed","description":"isSchedulerCurrentStatusFailed","processRule":"{ !Array.isArray(contextVar.schedulerLogData) || contextVar.schedulerLogData[0].status === 'schedulerLogFailed'}","nodeType":"DECISION"},"workflowContext":{"featureName":"jitScheduler","extraMsg":"TASK SCHEDULING: taskSchedulingWF call"},"fetchWorkOrderTaskData":{"filter":"{$id}= {@taskId}","models":["workOrderTask","taskType","ZStatus","site","User"],"connectors":[{"exitPortType":"NextStep","nodeId":"processDataForSchedulerLog"}],"columns":{"taskTypeId":"workOrderTask.taskTypeId","assignedToUserId":"workOrderTask.assignedToUserId","statusId":"workOrderTask.statusId","statusName":"ZStatus.name","siteId":"workOrderTask.siteId","siteName":"site.name","scheduledDate":"workOrderTask.scheduledDate","id":"workOrderTask.id","taskTypeName":"taskType.name","userName":"User.name","statusNameColor":"ZStatus.colorCode"},"name":"fetchWorkOrderTaskData","description":"fetchWorkOrderTaskData","links":{"taskType":"workOrderTask","site":"workOrderTask","User":"workOrderTask","ZStatus":"workOrderTask"},"inputVarMap":{"taskId":"taskId"},"outputVarMap":{"data":"workOrderTaskData"},"nodeType":"QUERY"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processData"}],"name":"start","description":"Start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchSchedulerLogData"}],"processId":"featureLoggerWF","name":"logContextVar","description":"logContextVar","inputVarMap":{"featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"updateWorkOrderTask":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"fetchWorkOrderTaskData"}],"name":"updateWorkOrderTask","description":"update workOrderTask","inputVarMap":{"statusId":"statusId","recommendedTechId":"assignedToUserId","taskId":"id"},"outputVarMap":{"data":"data"},"nodeType":"MODEL","operation":4},"callSchedulerUpsertWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"schedulerLogModelWF","name":"callSchedulerUpsertWF","description":"callSchedulerUpsertWF","inputVarMap":{"schedulerLogData":"schedulerLog","schedulerSubAction":"subAction"},"nodeType":"WORKFLOW"},"fetchSchedulerLogData":{"filter":"{$schedulerLog.id} = {@currentSchedulerLogId}","models":["schedulerLog"],"connectors":[{"exitPortType":"NextStep","nodeId":"isSchedulerCurrentStatusFailed"}],"columns":{"result":"schedulerLog.result","id":"schedulerLog.id","status":"schedulerLog.status"},"name":"fetchSchedulerLogData","description":"fetchSchedulerLogData","inputVarMap":{"currentSchedulerLogId":"currentSchedulerLogId"},"outputVarMap":{"data":"schedulerLogData"},"nodeType":"QUERY"},"end":{"name":"end","description":"end","nodeType":"END"},"processDataForSchedulerLog":{"connectors":[{"exitPortType":"NextStep","nodeId":"callSchedulerUpsertWF"}],"contextChangePermitted":true,"name":"processDataForSchedulerLog ","description":"processDataForSchedulerLog","processRule":"{ contextVar.schedulerSubAction = 'upsertSchedulerLog'; if (typeof contextVar.schedulerLogData[0].result === 'undefined' || contextVar.schedulerLogData[0].result === '') { contextVar.schedulerLogData[0].result = []; } contextVar.schedulerLogData[0].result.push(contextVar.workOrderTaskData[0]); }","nodeType":"PROCESS"},"workflowNodes":["start","processData","logContextVar","fetchSchedulerLogData","isSchedulerCurrentStatusFailed","updateWorkOrderTask","fetchWorkOrderTaskData","processDataForSchedulerLog","callSchedulerUpsertWF","end"]}