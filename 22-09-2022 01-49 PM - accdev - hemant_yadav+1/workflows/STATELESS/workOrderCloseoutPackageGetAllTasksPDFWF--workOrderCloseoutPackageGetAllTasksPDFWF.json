{"loopThroughTasksList":{"connectors":[{"exitPortType":"TrueStep","nodeId":"forEachInstance"},{"exitPortType":"FalseStep","nodeId":"end"}],"data":"tasksList","name":"loopThroughTasksList","description":"loopThroughTasksList","inputVarMap":{},"outputVarMap":{},"nodeType":"FOREACHLOOP"},"forEachInstance":{"connectors":[{"exitPortType":"NextStep","nodeId":"createPdf"}],"contextChangePermitted":true,"name":"forEachInstance","description":"forEachInstance","processRule":"{ contextVar.taskId = contextVar.loopThroughTasksList_currentElement.taskId; contextVar.taskType = contextVar.loopThroughTasksList_currentElement.taskType; contextVar.scheduledDate = contextVar.loopThroughTasksList_currentElement.scheduledDate; contextVar.endDate = contextVar.loopThroughTasksList_currentElement.endDate; contextVar.technicianName = contextVar.loopThroughTasksList_currentElement.technicianName; contextVar.customerSignature = contextVar.loopThroughTasksList_currentElement.customerSignature; contextVar.beforeCaptureEvidencePhoto1 = ''; contextVar.beforeCaptureEvidencePhoto2 = ''; contextVar.beforeCaptureEvidencePhoto3 = ''; contextVar.afterCaptureEvidencePhoto1 = ''; contextVar.afterCaptureEvidencePhoto2 = ''; contextVar.afterCaptureEvidencePhoto3 = ''; if (contextVar.loopThroughTasksList_currentElement.result != undefined) { contextVar.allTasksData = ''; for (var j = 0; j < contextVar.loopThroughTasksList_currentElement.result.length; j++) { if (contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidence != undefined) { contextVar.beforeCaptureEvidencePhoto1 = contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidence.media; contextVar.beforeCaptureEvidenceComments1 = contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidence.comment; if(contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalFirst !== undefined ) { if(contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalFirst.media !== undefined && contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalFirst.media !== '') { contextVar.beforeCaptureEvidencePhoto2 = contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalFirst.media; } if (contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalFirst.comment !== undefined && contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalFirst.comment !== '') { contextVar.beforeCaptureEvidenceComments2 = contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalFirst.comment; } else { contextVar.beforeCaptureEvidenceComments2 = 'No comments available'; } } if(contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalSecond !== undefined ) { if(contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalSecond.media !== undefined && contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalSecond.media !== '') { contextVar.beforeCaptureEvidencePhoto3 = contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalSecond.media; } if (contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalSecond.comment !== undefined && contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalSecond.comment !== '') { contextVar.beforeCaptureEvidenceComments3 = contextVar.loopThroughTasksList_currentElement.result[j].beforeCaptureEvidenceOptionalSecond.comment; } else { contextVar.beforeCaptureEvidenceComments3 = 'No comments available'; } } if (contextVar.loopThroughTasksList_currentElement.result[j].beforeComments !== undefined && contextVar.loopThroughTasksList_currentElement.result[j].beforeComments !== '') { contextVar.beforeCaptureOverAllComments = contextVar.loopThroughTasksList_currentElement.result[j].beforeComments; } else { contextVar.beforeCaptureOverAllComments = 'No comments available'; } contextVar.afterCaptureEvidencePhoto1 = contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidence.media; contextVar.afterCaptureEvidenceComments1 = contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidence.comment; if(contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalFirst != undefined) { if(contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalFirst.media != undefined && contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalFirst.media != '') { contextVar.afterCaptureEvidencePhoto2 = contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalFirst.media; } if (contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalFirst.comment !== undefined && contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalFirst.comment !== '') { contextVar.afterCaptureEvidenceComments2 = contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalFirst.comment; } else { contextVar.afterCaptureEvidenceComments2 = 'No comments available'; } } if(contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalSecond != undefined) { if(contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalSecond.media != undefined && contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalSecond.media != '') { contextVar.afterCaptureEvidencePhoto3 = contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalSecond.media; } if (contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalSecond.comment !== undefined && contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalSecond.comment !== '') { contextVar.afterCaptureEvidenceComments3 = contextVar.loopThroughTasksList_currentElement.result[j].afterCaptureEvidenceOptionalSecond.comment; } else { contextVar.afterCaptureEvidenceComments3 = 'No comments available'; } } if (contextVar.loopThroughTasksList_currentElement.result[j].afterComments !== undefined && contextVar.loopThroughTasksList_currentElement.result[j].afterComments !== '') { contextVar.afterCaptureOverAllComments = contextVar.loopThroughTasksList_currentElement.result[j].afterComments; } else { contextVar.afterCaptureOverAllComments = 'No comments available'; } for (var k = 0; k < contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid.length; k++) { var appendBody = new String(contextVar.allTasksBody); appendBody = appendBody.replace('SERVICETYPE', contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].taskActivity[0].serviceName); if (contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].assets != undefined && contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].assets.length > 0) { appendBody = appendBody.replace('ASSET', contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].assets[0].catalogName); } else { appendBody = appendBody.replace('ASSET', 'NA'); } if (contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].barcode != undefined && contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].barcode != '') { appendBody = appendBody.replace('ASSETNO', contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].barcode); } else { appendBody = appendBody.replace('ASSETNO', 'NA'); } if (contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].activityComments !== undefined && contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].activityComments != '') { appendBody = appendBody.replace('SERVICECOMMENTS', contextVar.loopThroughTasksList_currentElement.result[j].activityDataGrid[k].activityComments); } else { appendBody = appendBody.replace('SERVICECOMMENTS', 'No comments available'); } contextVar.allTasksData = contextVar.allTasksData + appendBody; } } } } if (contextVar.beforeCaptureEvidencePhoto1 !== undefined && contextVar.beforeCaptureEvidencePhoto1 !== '') { contextVar.images.push(contextVar.beforeCaptureEvidencePhoto1); } if (contextVar.beforeCaptureEvidencePhoto2 !== undefined && contextVar.beforeCaptureEvidencePhoto2 !== '') { contextVar.images.push(contextVar.beforeCaptureEvidencePhoto2); } if (contextVar.beforeCaptureEvidencePhoto3 !== undefined && contextVar.beforeCaptureEvidencePhoto3 !== '') { contextVar.images.push(contextVar.beforeCaptureEvidencePhoto3); } if (contextVar.afterCaptureEvidencePhoto1 !== undefined && contextVar.afterCaptureEvidencePhoto1 !== '') { contextVar.images.push(contextVar.afterCaptureEvidencePhoto1); } if (contextVar.afterCaptureEvidencePhoto2 !== undefined && contextVar.afterCaptureEvidencePhoto2 !== '') { contextVar.images.push(contextVar.afterCaptureEvidencePhoto2); } if (contextVar.afterCaptureEvidencePhoto3 !== undefined && contextVar.afterCaptureEvidencePhoto3 !== '') { contextVar.images.push(contextVar.afterCaptureEvidencePhoto3); } if (contextVar.customerSignature !== undefined && contextVar.customerSignature !== '' && contextVar.customerSignature !== 'signature_unavailable') { contextVar.images.push(contextVar.customerSignature); } var allTaskDetails = { 'taskId': contextVar.taskId }; contextVar.taskDetailsWithUrl.push(allTaskDetails); }","nodeType":"PROCESS"},"updateTasksPDFURL":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"loopThroughTasksList"}],"name":"updateTasksPDFURL","description":"updateTasksPDFURL","inputVarMap":{"pdfUrl":"cop","taskId":"id"},"id":"updateTaskStatus","outputVarMap":{"data":"data"},"nodeType":"MODEL","operation":4},"workflowContext":{"allTasksData":"","images":[],"taskDetailsWithUrl":[],"allTasksBody":"<tr> <td colspan='2'> <div class='outer-border'> <table class='n-bordered'> <tbody> <tr> <td class='left-info-color'>Service Type<\/td> <td class='right-information'>SERVICETYPE<\/td> <\/tr> <tr> <td class='left-info-color'>Asset<\/td> <td class='right-information'>ASSET<\/td> <\/tr> <tr> <td class='left-info-color'>Asset No.<\/td> <td class='right-information'>ASSETNO<\/td> <\/tr> <tr> <td class='left-info-color'>Overall Comments<\/td> <td class='right-information'>SERVICECOMMENTS<\/td> <\/tr><\/tbody> <\/table> <\/div> <\/td> <\/tr> <tr> <td colspan='2'> &nbsp; <\/td> <\/tr>"},"getAllTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"loopThroughTasksList"}],"contextChangePermitted":true,"name":"getAllTasks","description":"Process All Tasks data","processRule":"{contextVar.tasksList = contextVar.workOrderData;}","id":"getAllTasks","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"getAllTasks"}],"name":"start","description":"Start","nodeType":"START"},"end":{"name":"end","description":"End","inputVarMap":{"images":"images"},"outputVarMap":{"images":"images"},"nodeType":"END"},"createPdf":{"async":false,"connectors":[{"exitPortType":"NextStep","nodeId":"updateTasksPDFURL"}],"name":"createPdf","publicFile":true,"description":"CloseOut package","inputVarMap":{"afterCaptureOverAllComments":"afterCaptureOverAllComments","beforeCaptureEvidenceComments1":"beforeCaptureEvidenceComments1","beforeCaptureOverAllComments":"beforeCaptureOverAllComments","customerSignature":"customerSignature","afterCaptureEvidencePhoto2":"afterCaptureEvidencePhoto2","afterCaptureEvidencePhoto1":"afterCaptureEvidencePhoto1","afterCaptureEvidencePhoto3":"afterCaptureEvidencePhoto3","beforeCaptureEvidencePhoto2":"beforeCaptureEvidencePhoto2","beforeCaptureEvidencePhoto3":"beforeCaptureEvidencePhoto3","allTasksData":"allTasksData","beforeCaptureEvidencePhoto1":"beforeCaptureEvidencePhoto1","beforeCaptureEvidenceComments2":"beforeCaptureEvidenceComments2","beforeCaptureEvidenceComments3":"beforeCaptureEvidenceComments3","afterCaptureEvidenceComments2":"afterCaptureEvidenceComments2","afterCaptureEvidenceComments1":"afterCaptureEvidenceComments1","afterCaptureEvidenceComments3":"afterCaptureEvidenceComments3"},"id":"createPdf","outputVarMap":{"pdfFile":"pdfUrl"},"nodeType":"PDF","templateId":"W0AC32AYES"},"workflowNodes":["start","getAllTasks","loopThroughTasksList","forEachInstance","createPdf","updateTasksPDFURL","end"]}