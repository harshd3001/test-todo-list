{"cancellationWorkOrderTaskExistsDecision":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processWorkOrderTaskCancellationData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"cancellationWorkOrderTaskExistsDecision","description":"Checked if the workOrderTasksData has tasks","processRule":"(contextVar.workOrderTasksData.length > 0)","nodeType":"DECISION"},"workflowContext":{"deactivateTechnicianStatuses":["workOrderTaskReopened","workOrderTaskScheduled","workOrderTaskDispatched","workOrderTaskInProgress","workOrderTaskInTransit","workOrderTaskDelayed","workOrderTaskIncident"]},"processWorkOrderTaskCancellationData":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertWorkOrderTask"}],"contextChangePermitted":true,"name":"processWorkOrderTaskCancellationData","description":"processWorkOrderTaskCancellationData","processRule":"{ if (typeof contextVar.workOrderTasksData !== 'undefined' && contextVar.workOrderTasksData !== '') { for (var i = 0; i < contextVar.workOrderTasksData.length; i++) { contextVar.workOrderTasksData[i].statusId = 'workOrderTaskOpen'; contextVar.workOrderTasksData[i].assignedToUserId = ''; contextVar.workOrderTasksData[i].assignedToCrewId = ''; } contextVar.jsonObj = contextVar.workOrderTasksData; } }","nodeType":"PROCESS"},"processWorkforceData":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTasksForCancellation"}],"contextChangePermitted":true,"name":"processWorkforceData","description":"processWorkforceData","processRule":"{contextVar.workforceUserId = contextVar.data.userId; contextVar.statusId = contextVar.data.statusId;}","nodeType":"PROCESS"},"upsertWorkOrderTask":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"multirecord":true,"name":"upsertWorkOrderTask","description":"Update the tasks after unassigning and changing their sttaus to open","inputVarMap":{"jsonObj":"data"},"outputVarMap":{"data":"data"},"nodeType":"MODEL","operation":4},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkforceData"}],"name":"Start","description":"Start","nodeType":"START"},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"workflowNodes":["start","processWorkforceData","fetchTasksForCancellation","cancellationWorkOrderTaskExistsDecision","processWorkOrderTaskCancellationData","upsertWorkOrderTask","end"],"fetchTasksForCancellation":{"filter":"{$assignedToUserId}={@workforceUserId} AND {$statusId} IN {@deactivateTechnicianStatuses} AND {$workforce.statusId} = 'workforceDeactivated'","models":["workOrderTask","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"cancellationWorkOrderTaskExistsDecision"}],"columns":{"assignedToUserId":"workOrderTask.assignedToUserId","statusId":"workOrderTask.statusId","id":"workOrderTask.id","assignedToCrewId":"workOrderTask.assignedToCrewId"},"name":"fetchTasksForCancellation","description":"Fetch tasks to be cancelled","links":{"workforce":"workOrderTask"},"inputVarMap":{"workforceUserId":"workforceUserId","deactivateTechnicianStatuses":"deactivateTechnicianStatuses"},"outputVarMap":{"data":"workOrderTasksData"},"nodeType":"QUERY"}}