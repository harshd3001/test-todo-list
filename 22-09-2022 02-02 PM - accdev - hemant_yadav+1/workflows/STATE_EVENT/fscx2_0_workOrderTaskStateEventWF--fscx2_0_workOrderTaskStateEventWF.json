{"notifyBoth":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"notifyBoth","description":"notifyBoth","inputVarMap":{"dataForNotify":"notificationData"},"targetType":"USER","outputVarMap":{},"nodeType":"NOTIFY"},"notifyNodeForSmsAndEmail":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"notifyNodeForSmsAndEmail","description":"notifyNodeForSmsAndEmail","inputVarMap":{"dataForNotify":"notificationData"},"targetType":"USER","outputVarMap":{},"nodeType":"NOTIFY"},"getAnalystName":{"models":["User","workOrderTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"TaskStatusCheckForEmailTemplate"}],"havingClause":"","inputs":{"id":""},"columns":{"wId":"workOrderTask.id","analyst":"User.name","id":"User.id","userId":"workOrderTask.assignedToUserId"},"description":"Provide some description for your query","outerJoinOnModel":"","orderBy":"","distinct":false,"inputVarMap":{"id":"workOrderTaskId"},"groupBy":"","nodeType":"QUERY","filter":"{$wId}={@workOrderTaskId}","name":"getAnalystName","links":{"workOrderTask":"User"},"id":"getAnalystName","outputVarMap":{"data":"analystData"},"subFilters":[],"selectColumns":[]},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"name":"start","description":"start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"processModelData"}],"name":"logContextVar","description":"logContextVar","inputVarMap":{"featureLoggerWF":"processId","featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"upsertCustomerPortalOrderDetailsData":{"connectors":[{"exitPortType":"NextStep","nodeId":"workOrderTaskStatusCheck"}],"processId":"fscx2_0_customerPortalOrderDetailsModelWF","ignoreSubContext":true,"name":"upsertCustomerPortalOrderDetailsData","description":"upsertCustomerPortalOrderDetailsData","inputVarMap":{"customerPortalOrderDetailsData":"customerPortalOrderDetails"},"outputVarMap":{},"nodeType":"WORKFLOW"},"workOrderTaskStatusCheck":{"connectors":[{"condition":"contextVar.statusId === 'workOrderTaskCancelled'","exitPortType":"NextStep","nodeId":"end"},{"condition":"contextVar.statusId === 'workOrderTaskCompleted' && contextVar.preferredNotification === 'SMS' && (typeof contextVar.sendCustomerNotifications != 'undefined' && contextVar.sendCustomerNotifications == true ) && (typeof contextVar.disableCompletedNotification === 'undefined'|| contextVar.disableCompletedNotification === false )","exitPortType":"NextStep","nodeId":"createDataForNotifyNode"},{"condition":"contextVar.statusId === 'completedInAnow' && contextVar.preferredNotification === 'SMS' && (typeof contextVar.sendCustomerNotifications != 'undefined' && contextVar.sendCustomerNotifications == true ) && (typeof contextVar.disableCompletedNotification === 'undefined'|| contextVar.disableCompletedNotification === false )","exitPortType":"NextStep","nodeId":"createDataForNotifyNode"},{"condition":"contextVar.statusId === 'workOrderTaskCompleted' && (contextVar.preferredNotification === 'EMAIL' || contextVar.preferredNotification === 'BOTH') && (typeof contextVar.sendCustomerNotifications != 'undefined' && contextVar.sendCustomerNotifications == true ) && (typeof contextVar.disableCompletedNotification === 'undefined'|| contextVar.disableCompletedNotification === false )","exitPortType":"NextStep","nodeId":"callTaskDataWF"},{"condition":"contextVar.statusId === 'completedInAnow' && (contextVar.preferredNotification === 'EMAIL' || contextVar.preferredNotification === 'BOTH') && (typeof contextVar.sendCustomerNotifications != 'undefined' && contextVar.sendCustomerNotifications == true ) && (typeof contextVar.disableCompletedNotification === 'undefined'|| contextVar.disableCompletedNotification === false )","exitPortType":"NextStep","nodeId":"callTaskDataWF"},{"DefaultStep":true,"condition":"contextVar.statusId===''","exitPortType":"NextStep","nodeId":"end"}],"name":"workOrderTaskStatusCheck","description":"workOrderTaskStatusCheck","nodeType":"MULTIDECISION"},"checkWorkOrderTaskStatus":{"connectors":[{"condition":"!Array.isArray(contextVar.customerPortalOrderDetailsData) || typeof contextVar.customerPortalOrderDetailsData[0].UID === 'undefined'","exitPortType":"NextStep","nodeId":"end"},{"condition":"contextVar.statusId === 'workOrderTaskInTransit' && contextVar.preferredNotification === 'SMS' && (typeof contextVar.sendCustomerNotifications != 'undefined' && contextVar.sendCustomerNotifications == true ) && (typeof contextVar.disableInTransitNotification === 'undefined'|| contextVar.disableInTransitNotification === false )","exitPortType":"NextStep","nodeId":"createDataForNotifyNode"},{"condition":"contextVar.statusId === 'workOrderTaskInTransit' && (typeof contextVar.disableInTransitNotification === 'undefined'|| contextVar.disableInTransitNotification === false )","exitPortType":"NextStep","nodeId":"callTaskDataWF"},{"condition":"(contextVar.statusId === 'workOrderTaskCompleted' && (typeof contextVar.disableCompletedNotification === 'undefined'|| contextVar.disableCompletedNotification === false )) || (contextVar.statusId === 'workOrderTaskCancelled' && contextVar.customerPortalOrderDetailsStatusId !== 'fscx2_0_bookingCancelled')","exitPortType":"NextStep","nodeId":"upsertCustomerPortalOrderDetailsData"},{"condition":"(contextVar.statusId === 'completedInAnow' && (typeof contextVar.disableCompletedNotification === 'undefined'|| contextVar.disableCompletedNotification === false )) || (contextVar.statusId === 'workOrderTaskCancelled' && contextVar.customerPortalOrderDetailsStatusId !== 'fscx2_0_bookingCancelled')","exitPortType":"NextStep","nodeId":"upsertCustomerPortalOrderDetailsData"},{"DefaultStep":true,"condition":"contextVar.statusId===''","exitPortType":"NextStep","nodeId":"end"}],"name":"checkWorkOrderTaskStatus","description":"checkWorkOrderTaskStatus","nodeType":"MULTIDECISION"},"setSendCustomerNotification":{"connectors":[{"exitPortType":"NextStep","nodeId":"callSiteDataWF"}],"contextChangePermitted":true,"name":"setSendCustomerNotification","description":"setSendCustomerNotification","processRule":"{if(typeof contextVar.customerPortalOrderDetailsData[0] != 'undefined' && typeof contextVar.customerPortalOrderDetailsData[0].sendCustomerNotifications != 'undefined'){ contextVar.sendCustomerNotifications = contextVar.customerPortalOrderDetailsData[0].sendCustomerNotifications; }}","nodeType":"PROCESS","jsEngine":"es6"},"callTaskDataWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processData"}],"ignoreSubContext":true,"name":"callTaskDataWF","description":"callTaskDataWF","inputVarMap":{"id":"workOrderTaskId","taskDataProcessId":"processId"},"outputVarMap":{"workOrderTaskData":"workOrderTaskData"},"nodeType":"WORKFLOW"},"TaskStatusCheckForEmailTemplate":{"connectors":[{"condition":"((contextVar.statusId === 'workOrderTaskCompleted' && (typeof contextVar.disableCompletedNotification === 'undefined' || contextVar.disableCompletedNotification === false )) || (contextVar.statusId === 'workOrderTaskInTransit' && (typeof contextVar.disableInTransitNotification === 'undefined'|| contextVar.disableInTransitNotification === false ))) && contextVar.preferredNotification === 'EMAIL' && (typeof contextVar.sendCustomerNotifications != 'undefined' && contextVar.sendCustomerNotifications == true )","exitPortType":"NextStep","nodeId":"createDataForNotifyNode"},{"condition":"((contextVar.statusId === 'workOrderTaskCompleted' && (typeof contextVar.disableCompletedNotification === 'undefined'|| contextVar.disableCompletedNotification === false )) || (contextVar.statusId === 'workOrderTaskInTransit' && (typeof contextVar.disableInTransitNotification === 'undefined'|| contextVar.disableInTransitNotification === false ))) && contextVar.preferredNotification === 'BOTH' && (typeof contextVar.sendCustomerNotifications != 'undefined' && contextVar.sendCustomerNotifications == true )","exitPortType":"NextStep","nodeId":"createDataForNotification"},{"DefaultStep":true,"condition":"contextVar.statusId===''","exitPortType":"NextStep","nodeId":"end"}],"name":"TaskStatusCheckForEmailTemplate","description":"TaskStatusCheckForEmailTemplate","nodeType":"MULTIDECISION"},"processSiteData":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkWorkOrderTaskStatus"}],"contextChangePermitted":true,"name":"processSiteData","description":"processSiteData","processRule":"{ if (Array.isArray(contextVar.siteData)) {for (let key in contextVar.siteData[0]) { contextVar[key] = contextVar.siteData[0][key]; } } if (Array.isArray(contextVar.entityConfigData)) { for (let value of contextVar.entityConfigData) { if (value.configKey === 'configurations') { value.configValue = JSON.parse(value.configValue); for (let key in value.configValue) { contextVar[key] = value.configValue[key]; } } } } if (Array.isArray(contextVar.customerPortalOrderDetailsData)) { contextVar.customerPortalOrderDetailsStatusId = contextVar.customerPortalOrderDetailsData[0].statusId; contextVar.UID = contextVar.customerPortalOrderDetailsData[0].UID; contextVar.customerPortalUrl = contextVar.customerPortalUrl + '?ref=' + contextVar.customerPortalOrderDetailsData[0].UID; if (contextVar.statusId === 'workOrderTaskCancelled') { contextVar.customerPortalOrderDetailsData[0].statusId = 'fscx2_0_bookingCancelled'; } else { contextVar.customerPortalOrderDetailsData[0].statusId = 'fscx2_0_bookingCompleted'; } } if (contextVar.brandingParams) { contextVar.clientLogo = contextVar.brandingParams.iconUrl; } }","nodeType":"PROCESS","jsEngine":"es6"},"workflowNodes":["start","logContextVar","processModelData","fetchEntityConfig","fetchOrderDetails","setSendCustomerNotification","callSiteDataWF","processSiteData","checkWorkOrderTaskStatus","callTaskDataWF","processData","TaskStatusCheckForEmailTemplate","createDataForNotification","notifyBoth","upsertCustomerPortalOrderDetailsData","workOrderTaskStatusCheck","createDataForNotifyNode","notifyNodeForSmsAndEmail","getAnalystName","end"],"callSiteDataWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processSiteData"}],"ignoreSubContext":true,"name":"callSiteDataWF","description":"callSiteDataWF","inputVarMap":{"siteDataProcessId":"processId","id":"id"},"outputVarMap":{"siteData":"siteData"},"nodeType":"WORKFLOW"},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getAnalystName"}],"contextChangePermitted":true,"name":"processData","description":"processData","processRule":"{ function toDateString(date) { var dateString = ''; function pad(number) { if (number < 10) { return '0' + number; } return number; } if (date instanceof Date) { dateString = date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + ' ' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + '.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5); } return dateString; } function trimToHourMinFormat(time) { let timeFormat = time.split(' ')[1].split(':'); return timeFormat[0] + '' + timeFormat[1]; } if (contextVar.workOrderTaskData) { let timezoneOffset = contextVar.workOrderTaskData.siteTimezoneOffset; contextVar.contactPhone = contextVar.workOrderTaskData.siteContactPhone; contextVar.contactEmail = contextVar.workOrderTaskData.siteContactEmail; contextVar.startDate = toDateString(new Date(new Date(contextVar.workOrderTaskData.workOrderTaskAppointmentWindowStartDate).getTime() - (timezoneOffset * 60000))); let startTime = trimToHourMinFormat(contextVar.startDate); contextVar.startDate = contextVar.startDate.split(' ')[0]; let endtime = toDateString(new Date(new Date(contextVar.workOrderTaskData.workOrderTaskAppointmentWindowEndDate).getTime() - (timezoneOffset * 60000))); endtime = trimToHourMinFormat(endtime); if (contextVar.preferredNotification === 'SMS') { contextVar.appointmentWindowForSMS = startTime + ' hrs' + ' - ' + endtime + ' hrs'; } else if (contextVar.preferredNotification === 'EMAIL') { contextVar.appointmentWindowForEmail = contextVar.startDate + ' / ' + startTime + ' hrs' + ' - ' + endtime + ' hrs'; } else { contextVar.appointmentWindowForSMS = startTime + ' hrs' + ' - ' + endtime + ' hrs'; contextVar.appointmentWindowForEmail = contextVar.startDate + ' / ' + startTime + ' hrs' + ' - ' + endtime + ' hrs'; } } }","nodeType":"PROCESS","jsEngine":"es6"},"workflowContext":{"featureLoggerWF":"featureLoggerWF","configScopeArray":["customerPortal"],"featureName":"customerPortal","extraMsg":"fscx2_0_workOrderTaskStateEventWF","siteDataProcessId":"fetchSiteCustomerTaskTypeDetails","taskDataProcessId":"FQJXQ58NSK"},"fetchOrderDetails":{"filter":"{$jobId} = {@id}","models":["customerPortalOrderDetails"],"connectors":[{"exitPortType":"NextStep","nodeId":"setSendCustomerNotification"}],"columns":{"UID":"UID","jobId":"jobId","statusId":"statusId","sendCustomerNotifications":"sendCustomerNotifications"},"name":"fetchOrderDetails","description":"fetchOrderDetails","inputVarMap":{"id":"id"},"outputVarMap":{"data":"customerPortalOrderDetailsData"},"nodeType":"QUERY"},"createDataForNotifyNode":{"connectors":[{"exitPortType":"NextStep","nodeId":"notifyNodeForSmsAndEmail"}],"contextChangePermitted":true,"name":"createDataForNotifyNode","description":"createDataForNotifyNode","processRule":"{ contextVar.dataForNotify = []; if (contextVar.statusId == 'workOrderTaskCompleted' && contextVar.preferredNotification == 'SMS') { contextVar.notificationInfo = 'Completed'; contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'templateId': 'fscx2_0taskCompletion', 'preferredNotification': 'sms', 'contactName':contextVar.contactPerson, 'taskType':contextVar.taskTypeName, 'appointmentWindow':contextVar.appointmentWindowForEmail, 'analystName':contextVar.analystData[0].analyst }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'templateId': 'fscx2_0taskCompletion', 'preferredNotification': 'sms', 'contactName':contextVar.contactPerson, 'taskType':contextVar.taskTypeName, 'appointmentWindow':contextVar.appointmentWindowForEmail, 'analystName':contextVar.analystData[0].analyst }); } } else if (contextVar.statusId == 'workOrderTaskInTransit' && contextVar.preferredNotification == 'SMS') { contextVar.notificationInfo = 'Technician On The Way'; contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'templateId': 'fscx2_0technicianOnTheWay', 'preferredNotification': 'sms', 'contactName':contextVar.contactPerson, 'taskType':contextVar.taskTypeName, 'appointmentWindow':contextVar.appointmentWindowForEmail, 'analystName':contextVar.analystData[0].analyst }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'templateId': 'fscx2_0technicianOnTheWay', 'preferredNotification': 'sms', 'contactName':contextVar.contactPerson, 'taskType':contextVar.taskTypeName, 'appointmentWindow':contextVar.appointmentWindowForEmail, 'analystName':contextVar.analystData[0].analyst }); } } else if (contextVar.statusId == 'workOrderTaskCompleted' && contextVar.preferredNotification == 'EMAIL') { contextVar.notificationInfo = 'Completed'; contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'emailId': contextVar.contactEmail, 'notificationType': 'email', 'templateId': 'fscx2_0_bookingCompletedEmail', 'preferredNotification': 'email', 'contactName':contextVar.contactPerson, 'taskType':contextVar.taskTypeName, 'appointmentWindow':contextVar.appointmentWindowForEmail, 'analystName':contextVar.analystData[0].analyst }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'emailId': contextVar.secondaryContactEmail, 'notificationType': 'email', 'templateId': 'fscx2_0_bookingCompletedEmail', 'preferredNotification': 'email', 'contactName':contextVar.contactPerson, 'taskType':contextVar.taskTypeName, 'appointmentWindow':contextVar.appointmentWindowForEmail, 'analystName':contextVar.analystData[0].analyst }); } } else if (contextVar.statusId == 'workOrderTaskInTransit' && contextVar.preferredNotification == 'EMAIL') { contextVar.notificationInfo = 'Technician On The Way'; contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'emailId': contextVar.contactEmail, 'notificationType': 'email', 'templateId': 'fscx2_0technicianOnTheWayEmail', 'preferredNotification': 'email', 'contactName':contextVar.contactPerson, 'taskType':contextVar.taskTypeName, 'appointmentWindow':contextVar.appointmentWindowForEmail, 'analystName':contextVar.analystData[0].analyst }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'emailId': contextVar.secondaryContactEmail, 'notificationType': 'email', 'templateId': 'fscx2_0technicianOnTheWayEmail', 'preferredNotification': 'email', 'contactName':contextVar.contactPerson, 'taskType':contextVar.taskTypeName, 'appointmentWindow':contextVar.appointmentWindowForEmail, 'analystName':contextVar.analystData[0].analyst }); } } } ","nodeType":"PROCESS","jsEngine":"es6"},"end":{"name":"end","description":"end","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"processModelData":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchEntityConfig"}],"contextChangePermitted":true,"name":"processModelData","description":"processModelData","processRule":"{ for (var key in contextVar.data) { contextVar[key] = contextVar.data[key]; } }","nodeType":"PROCESS"},"fetchEntityConfig":{"filter":"{$configScope} IN {@configScopeArray}","models":["EntityConfig"],"connectors":[{"exitPortType":"NextStep","nodeId":"fetchOrderDetails"}],"columns":{"configKey":"EntityConfig.configKey","valueType":"EntityConfig.valueType","configScope":"EntityConfig.configScope","configValue":"EntityConfig.configValue"},"name":"fetchEntityConfig","description":"fetchEntityConfig","inputVarMap":{"configScopeArray":"configScopeArray"},"outputVarMap":{"data":"entityConfigData"},"nodeType":"QUERY"},"createDataForNotification":{"connectors":[{"exitPortType":"NextStep","nodeId":"notifyBoth"}],"contextChangePermitted":true,"name":"createDataForNotification","description":"createDataForNotification","processRule":"{ contextVar.dataForNotify = []; if (contextVar.statusId == 'workOrderTaskCompleted') { contextVar.notificationInfo = 'Completed'; contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'templateId': 'fscx2_0taskCompletion', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'templateId': 'fscx2_0_bookingCompletedEmail', 'appointmentWindow': contextVar.appointmentWindowForEmail, 'preferredNotification': 'email', 'emailId': contextVar.contactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'analystName':contextVar.analystData[0].analyst, 'contactName':contextVar.siteData[0].contactPerson }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'templateId': 'fscx2_0taskCompletion', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'templateId': 'fscx2_0_bookingCompletedEmail', 'appointmentWindow': contextVar.appointmentWindowForEmail, 'preferredNotification': 'email', 'emailId': contextVar.secondaryContactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'analystName':contextVar.analystData[0].analyst, 'contactName':contextVar.siteData[0].contactPerson }); } } else if (contextVar.statusId == 'workOrderTaskInTransit') { contextVar.notificationInfo = 'Technician On The Way'; contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'templateId': 'fscx2_0technicianOnTheWay', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'templateId': 'fscx2_0technicianOnTheWayEmail', 'preferredNotification': 'email', 'emailId': contextVar.contactEmail, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'analystName':contextVar.analystData[0].analyst, 'contactName':contextVar.siteData[0].contactPerson }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'templateId': 'fscx2_0technicianOnTheWay', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'templateId': 'fscx2_0technicianOnTheWayEmail', 'preferredNotification': 'email', 'emailId': contextVar.secondaryContactEmail, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'analystName':contextVar.analystData[0].analyst, 'contactName':contextVar.siteData[0].contactPerson }); } } } ","nodeType":"PROCESS","jsEngine":"es6"}}