{"getWeeklyScheduleData":{"filter":"filter","models":["weeklySchedule"],"connectors":[{"exitPortType":"NextStep","nodeId":"isWeeklySchedulePresent"}],"columns":{"schedule":"weeklySchedule.schedule","calendarId":"weeklySchedule.calendarId","recver":"weeklySchedule.recver","displayOrder":"weeklySchedule.displayOrder"},"name":"getWeeklyScheduleData","description":"getWeeklyScheduleData","inputVarMap":{"customBatchSize":"batchSize","calendarId":"calendarId","calendarToFetch":"filter"},"outputVarMap":{"data":"weeklyScheduleData","count":"weeklyScheduleCount","batchNumber":"weeklyScheduleBatchNumber"},"batchSize":"batchSize","nodeType":"QUERY","getCount":true},"upsertWeeklySchedule":{"modelName":"weeklySchedule","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"multirecord":true,"name":"upsertWeeklySchedule","description":"upsertWeeklySchedule","inputVarMap":{"weeklyScheduleToUpDate":"data"},"outputVarMap":{"data":"data"},"nodeType":"MODEL","operation":4},"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreWeeklySchedulePresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"contextVar.noOfBatches = Math.ceil(contextVar.weeklyScheduleCount / contextVar.customBatchSize);contextVar.newBatchNumber = contextVar.weeklyScheduleBatchNumber + 1;","id":"findNumberOfBatches","nodeType":"PROCESS"},"appendWeeklySchedulePresent":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreWeeklySchedulePresent"}],"contextChangePermitted":true,"name":"appendWeeklySchedulePresent","description":"appendWeeklySchedulePresent","processRule":"{if (Array.isArray(contextVar.dataToAppend)) { contextVar.weeklyScheduleData = contextVar.weeklyScheduleData.concat(contextVar.dataToAppend); } contextVar.newBatchNumber = contextVar.newBatchNumber + 1;}","id":"appendWeeklySchedulePresent","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"isTimeZoneOffsetPresent"}],"name":"start","description":"Start","nodeType":"START"},"isWeeklyScheduleToUpdate":{"connectors":[{"exitPortType":"TrueStep","nodeId":"upsertWeeklySchedule"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isWeeklyScheduleToUpdate","description":"isWeeklyScheduleToUpdate","processRule":"typeof contextVar.weeklyScheduleToUpDate !== 'undefined' && contextVar.weeklyScheduleToUpDate !== '' && Array.isArray(contextVar.weeklyScheduleToUpDate) && contextVar.weeklyScheduleToUpDate.length > 0","id":"isWeeklyScheduleToUpdate","nodeType":"DECISION"},"createFilter":{"connectors":[{"exitPortType":"NextStep","nodeId":"getWeeklyScheduleData"}],"contextChangePermitted":true,"name":"createFilter","description":"createFilter","processRule":"{ if(typeof contextVar.calendarId != 'undefined' && contextVar.calendarId !== '' &&Array.isArray(contextVar.calendarId) && contextVar.calendarId.length > 0){ contextVar.calendarToFetch = '({$weeklySchedule.calendarId} IN {@calendarId})' } }","nodeType":"PROCESS"},"areMoreWeeklySchedulePresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchWeeklySchedulePresent"},{"exitPortType":"FalseStep","nodeId":"processData"}],"name":"areMoreWeeklySchedulePresent","description":"areMoreWeeklySchedulePresent","processRule":"contextVar.noOfBatches >= 2 && contextVar.noOfBatches >= contextVar.newBatchNumber","id":"areMoreWeeklySchedulePresent","nodeType":"DECISION"},"workflowNodes":["start","isTimeZoneOffsetPresent","createFilter","getWeeklyScheduleData","isWeeklySchedulePresent","findNumberOfBatches","areMoreWeeklySchedulePresent","fetchWeeklySchedulePresent","appendWeeklySchedulePresent","processData","isWeeklyScheduleToUpdate","upsertWeeklySchedule","end"],"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isWeeklyScheduleToUpdate"}],"contextChangePermitted":true,"name":"processData","description":"Use this for processing data in workflow","processRule":"{ function toDateString(date) { var dateString = ''; function pad(number) { if (number < 10) { return '0' + number; } return number; } if (date instanceof Date) { dateString = date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + ' ' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + '.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5); } return dateString; } { function convertUTCDateToLocalDate(date, offset) { var newDate = new Date(date); var minutes = newDate.getMinutes(); newDate.setMinutes(minutes - offset); newDate = toDateString(new Date(newDate)); return newDate.split(' ')[1]; } contextVar.weeklyScheduleToUpDate = []; contextVar.weeklyScheduleData.forEach(function (element) { element.schedule.forEach(function (data) { if (data.startTime && data.startTime) { data['start'] = convertUTCDateToLocalDate(data.startTime, contextVar.timezoneOffset); data['end'] = convertUTCDateToLocalDate(data.endTime, contextVar.timezoneOffset); delete data.startTime; delete data.endTime; } }); contextVar.weeklyScheduleToUpDate.push(element); }); } }","id":"processData","nodeType":"PROCESS","jsEngine":"es6"},"workflowContext":{"customBatchSize":1000},"isTimeZoneOffsetPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"createFilter"}],"name":"isTimeZoneOffsetPresent","description":"isTimeZoneOffsetPresent","processRule":"typeof contextVar.timezoneOffset === 'undefined' || contextVar.timezoneOffset === '' ","id":"isTimeZoneOffsetPresent","nodeType":"DECISION"},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"isWeeklySchedulePresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"findNumberOfBatches"}],"name":"isWeeklySchedulePresent","description":"isWeeklySchedulePresent","processRule":"typeof contextVar.weeklyScheduleData === 'undefined' || contextVar.weeklyScheduleData === '' ","id":"isWeeklySchedulePresent","nodeType":"DECISION"},"fetchWeeklySchedulePresent":{"models":["weeklySchedule"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendWeeklySchedulePresent"}],"columns":{"schedule":"weeklySchedule.schedule","calendarId":"weeklySchedule.calendarId"},"description":"Fetch Task Details","distinct":true,"inputVarMap":{"customBatchSize":"batchSize","calendarId":"calendarId","newBatchNumber":"batchNumber"},"nodeType":"QUERY","filter":"filter","name":"fetchWeeklySchedulePresent","id":"fetchWeeklySchedulePresent","outputVarMap":{"data":"dataToAppend"},"batchSize":"batchSize","getCount":true,"batchNumber":"batchNumber"}}