{"workflowContext":{"eventType":["assetInstallation","assetOthers","assetRemoval","assetReplacement","assetServicing"],"mobileActionServerEventMapping":{"installed":"assetInstalled","removed":"assetDecommissioned","serviced":"assetServiced","others":"assetServiced"}},"updateWorkOrderTaskInstalledBase":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"workOrderTaskInstalledBaseWF","name":"updateWorkOrderTaskInstalledBase","description":"updateWorkOrderTaskInstalledBase","inputVarMap":{"workOrderTaskInstalledBaseSubAction":"subAction","workOrderTaskInstalledBase":"workOrderTaskInstalledBase"},"outputVarMap":{"data":"installedBaseDataOutput"},"nodeType":"WORKFLOW"},"processInstalledBaseOutputData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isWorkOrderTaskInstalledBaseToBeUpdated"}],"contextChangePermitted":true,"name":"processInstalledBaseOutputData","description":"processInstalledBaseOutputData","processRule":"{contextVar.workOrderTaskInstalledBase.forEach((asset) => { contextVar.installedBaseDataOutput.some((installedBaseAsset) => { if (asset.catalogId === installedBaseAsset.catalogId && asset.serialNo === installedBaseAsset.serialNo && (typeof asset.installedBaseId === 'undefined' || asset.installedBaseId === '')) { asset.installedBaseId = installedBaseAsset.id; return true; } }); });}","nodeType":"PROCESS","jsEngine":"es6"},"isWorkOrderTaskInstalledBaseToBeUpdated":{"connectors":[{"exitPortType":"TrueStep","nodeId":"updateWorkOrderTaskInstalledBase"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isWorkOrderTaskInstalledBaseToBeUpdated","description":"isWorkOrderTaskInstalledBaseToBeUpdated","processRule":"(contextVar.workOrderTaskInstalledBase.length > 0)","nodeType":"DECISION"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkOrderTaskResultForInstalledBase"}],"name":"Start","description":"Start","nodeType":"START"},"processWorkOrderTaskResultForInstalledBase":{"connectors":[{"exitPortType":"NextStep","nodeId":"isInstalledBaseToBeUpdated"}],"contextChangePermitted":true,"name":"processWorkOrderTaskResultForInstalledBase","description":"processWorkOrderTaskResultForInstalledBase","processRule":"{ var installedBase = []; var workOrderTaskInstalledBase = []; if (typeof contextVar.workOrderTaskResult !== 'undefined' && contextVar.workOrderTaskResult !== '' && Array.isArray(contextVar.workOrderTaskResult) && contextVar.workOrderTaskResult.length > 0) { var result = contextVar.workOrderTaskResult[contextVar.workOrderTaskResult.length - 1]; for (var object in result) { if (object === 'serviceGridWrapper') { result[object].forEach((serviceMode, index) => { for (var action in serviceMode) { if (contextVar.eventType.indexOf(action) > -1) { for (var i in serviceMode[action]) { if (contextVar.mobileActionServerEventMapping.hasOwnProperty(i) && (typeof serviceMode[action][i] != 'undefined' && typeof serviceMode[action][i].catalogId != 'undefined' && serviceMode[action][i].catalogId != '')) { createInstalledBaseJSON(serviceMode[action][i], serviceMode['updatedOn'], i); createWorkOrderTaskInstalledBaseJSON(serviceMode[action][i], i); } } } } }) } } } function createInstalledBaseJSON(assetDetails, updatedOn, action) { var assetObject = {}; assetObject['id'] = assetDetails.assetId; assetObject['catalogId'] = assetDetails.catalogId; assetObject['serialNo'] = assetDetails.serialNumber; switch (action) { case 'installed': assetObject['installedDate'] = assetDetails.installedTime; assetObject['statusId'] = 'installedBaseActive'; break; case 'removed': assetObject['decommDate'] = assetDetails.installedTime; assetObject['statusId'] = 'installedBaseDecommissioned'; break; default: break; } assetObject['lastVisitedDate'] = assetDetails.installedTime; assetObject['notes'] = updatedOn.notes; assetObject['siteId'] = contextVar.workOrderTaskSiteId; assetObject['statusTargetModel'] = 'installedBase'; installedBase.push(assetObject); } function createWorkOrderTaskInstalledBaseJSON(assetDetails, action) { var assetObject = {}; assetObject['eventType'] = contextVar.mobileActionServerEventMapping[action]; assetObject['installedBaseId'] = assetDetails.assetId; assetObject['workOrderTaskId'] = contextVar.workOrderTaskId; assetObject['catalogId'] = assetDetails.catalogId; assetObject['serialNo'] = assetDetails.serialNumber; workOrderTaskInstalledBase.push(assetObject); } contextVar.installedBase = installedBase; contextVar.workOrderTaskInstalledBase = workOrderTaskInstalledBase; contextVar.installedBaseSubAction = 'upsertInstalledBase'; contextVar.workOrderTaskInstalledBaseSubAction = 'upsertWorkOrderTaskInstalledBase'; }","nodeType":"PROCESS","jsEngine":"es6"},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"insertIntoInstalledBase":{"connectors":[{"exitPortType":"NextStep","nodeId":"processInstalledBaseOutputData"}],"processId":"HFI2JU77JV","name":"insertIntoInstalledBase","description":"insertIntoInstalledBase","inputVarMap":{"installedBase":"installedBase","installedBaseSubAction":"subAction"},"outputVarMap":{"data":"installedBaseDataOutput"},"nodeType":"WORKFLOW"},"isInstalledBaseToBeUpdated":{"connectors":[{"exitPortType":"TrueStep","nodeId":"insertIntoInstalledBase"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isInstalledBaseToBeUpdated","description":"isInstalledBaseToBeUpdated","processRule":"(contextVar.installedBase.length > 0)","nodeType":"DECISION"},"workflowNodes":["start","processWorkOrderTaskResultForInstalledBase","isInstalledBaseToBeUpdated","insertIntoInstalledBase","processInstalledBaseOutputData","isWorkOrderTaskInstalledBaseToBeUpdated","updateWorkOrderTaskInstalledBase","end"]}