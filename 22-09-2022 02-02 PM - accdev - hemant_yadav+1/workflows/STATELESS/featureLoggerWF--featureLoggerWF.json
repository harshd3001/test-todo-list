{"isFeaturePresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"queryFeatureLog"}],"name":"isFeaturePresent","description":"isFeaturePresent","processRule":"typeof contextVar === 'undefined' || typeof contextVar.featureName === 'undefined' || contextVar.featureName === '' || contextVar.featureName === null","id":"isFeaturePresent","nodeType":"DECISION"},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"logger"}],"contextChangePermitted":true,"name":"processData","description":"Processing details","processRule":"function checkNull(a) { return (typeof a === 'undefined' || a === '' || a === null); } try { contextVar.ll = contextVar.featureData[0].logMode; let mm = ''; let feature = contextVar.featureName; let extraMsg = checkNull(contextVar.extraMsg) ? '' : contextVar.extraMsg; let printVar = contextVar.featureData[0].printVar; if (!checkNull(printVar)) { printVar = JSON.parse(printVar); } mm = mm + 'Feature = ' + feature + ' , Extra Msg = ' + extraMsg + ' ,'; if (checkNull(printVar) || (checkNull(printVar.data) || !(Array.isArray(printVar.data) && printVar.data.length > 0))) { mm = mm + 'contextVar = ' + JSON.stringify(contextVar); } else { let cObj = {}; printVar.data.forEach(obj => { if (!checkNull(contextVar[obj])) { cObj[obj] = contextVar[obj]; } }); mm = mm + 'Specific contextVar = ' + JSON.stringify(cObj); } contextVar.mm = mm; } catch (e) { contextVar.mm = 'Error in processing : ' + e; contextVar.ll = 'INFO'; }","id":"processData","nodeType":"PROCESS","jsEngine":"es6"},"queryFeatureLog":{"filter":"{$feature} = {@featureName}","models":["featureLogger"],"connectors":[{"exitPortType":"NextStep","nodeId":"isFeatureDataPresent"}],"columns":{"printVar":"printVar","feature":"feature","active":"active","logMode":"logMode"},"name":"queryFeatureLog","description":"queryFeatureLog","inputVarMap":{"featureName":"featureName"},"outputVarMap":{"data":"featureData"},"id":"queryFeatureLog","batchSize":"1","nodeType":"QUERY"},"logger":{"connectors":[{"exitPortType":"NextStep","nodeId":"clearDetails"}],"name":"logger","description":"Provide some description for your logger node","inputVarMap":{"ll":"logLevel","mm":"message"},"id":"logger","nodeType":"LOGGER"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"isFeaturePresent"}],"name":"start","description":"Start","nodeType":"START"},"clearDetails":{"esEngine":"js6","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"clearDetails","description":"Clear details","processRule":"contextVar.mm = '';contextVar.ll = ''; contextVar.featureData = '';contextVar.featureName = '';contextVar.extraMsg = '';","id":"clearDetails","nodeType":"PROCESS"},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"isFeatureDataPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isFeatureDataPresent","description":"isFeatureDataPresent","processRule":"typeof contextVar.featureData !== 'undefined' && contextVar.featureData !== '' && Array.isArray(contextVar.featureData) && contextVar.featureData.length > 0 && contextVar.featureData[0].active === true","id":"isFeatureDataPresent","nodeType":"DECISION"},"workflowNodes":["start","isFeaturePresent","queryFeatureLog","isFeatureDataPresent","processData","logger","clearDetails","end"]}