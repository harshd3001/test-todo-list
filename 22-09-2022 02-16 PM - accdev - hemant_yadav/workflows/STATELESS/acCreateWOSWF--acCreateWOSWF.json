{"processWOData":{"connectors":[{"exitPortType":"NextStep","nodeId":"callUpsertWOWf"}],"contextChangePermitted":true,"name":"processWOData","description":"Use this for processing data in workflow","processRule":"{ contextVar.workOrder = []; function calculateDateInSiteTZ(date, offset) { var givenDate = new Date(date); var timeInUtc = givenDate.getTime() + (givenDate.getTimezoneOffset() * 60000); var dateInSiteTZ = new Date(timeInUtc - 1000 * offset).toISOString().replace(/T/, ' ').replace(/\\..+/, '').replace(/Z/, ''); return dateInSiteTZ; } contextVar.dealineDate = contextVar.recData.dueDate?calculateDateInSiteTZ(contextVar.recData.dueDate, contextVar.tzOffsetInSeconds):''; contextVar.anowOrderedDate = contextVar.recData.orderDate?calculateDateInSiteTZ(contextVar.recData.orderDate, contextVar.tzOffsetInSeconds):''; contextVar.workOrder.push({ 'calendarId': contextVar.serviceWindowCalendarId, 'contractId': contextVar.finalContractId, 'acLenderId': contextVar.lenderId, 'workOrderTypeId': contextVar.woLinkDetails[0].woTypeId, 'acIsImported': true, 'acContractValue': contextVar.recData.contractValue, 'acTagHistorical': contextVar.tagHistoricalValue, 'priorityTargetModel': 'workOrder', 'priorityPriority': '20', 'recver': contextVar.recData.workOrderRecver, 'customerId': contextVar.customerId, 'id': contextVar.workOrderId, 'requestedDate': contextVar.anowOrderedDate, 'acTagGla': contextVar.tagGlaValue, 'deadline': contextVar.dealineDate, 'acPrimaryAppraiserId': contextVar.appraiserDetails.id, 'acReportType': contextVar.recData.reportType, 'statusTargetModel': 'workOrder', 'acTagRural': contextVar.tagRuralValue, 'statusId': 'workOrderOpen', 'isTemplate': false, 'acTagComplex': contextVar.tagComplexityValue, 'acTags': contextVar.recData.tags, 'acLoanType': contextVar.recData.loanType }); contextVar.workOrderSubAction = 'upsertWorkOrder'; contextVar.workOrderTemplateId = ''; }","id":"processWOData","nodeType":"PROCESS"},"fetchWOId":{"models":["workOrderType"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWOData"}],"havingClause":"","columns":{"woTypeId":"workOrderType.id"},"description":"Provide some description for your query","orderBy":"","inputVarMap":{"siteId":"siteId","woTypeToBeCreated":"woTypeName"},"groupBy":"","nodeType":"QUERY","filter":"{$workOrderType.name} = {@woTypeName}","name":"fetchWOId","links":{},"id":"fetchWOId","outputVarMap":{"data":"woLinkDetails"},"distinctFilter":false},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchWOId"}],"name":"start","description":"Start","id":"start","position":{"x":-29,"y":-45},"nodeType":"START"},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"id":"end","position":{"x":419,"y":-55},"nodeType":"END"},"workflowNodes":["start","end","fetchWOId","processWOData","callUpsertWOWf"],"callUpsertWOWf":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"L2ASIL7VSK","name":"callUpsertWOWf","description":"Provide some description for your workflow node","inputVarMap":{"workOrder":"workOrder","workOrderSubAction":"subAction"},"id":"callUpsertWOWf","outputVarMap":{"data":"workorderDetailsCreated"},"nodeType":"WORKFLOW"}}