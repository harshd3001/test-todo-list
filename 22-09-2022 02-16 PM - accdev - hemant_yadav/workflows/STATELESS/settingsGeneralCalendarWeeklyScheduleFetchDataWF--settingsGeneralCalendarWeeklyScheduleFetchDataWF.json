{"fetchCalendar":{"filter":"{$id} = {@id}","models":["weeklySchedule","calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"fetchLocalizedKeys"}],"columns":{"weeklyScheduleLunchBreakSchedule":"weeklySchedule.lunchBreakSchedule","weeklyScheduleDay":"weeklySchedule.day","weeklyScheduleIsLunchBreak":"weeklySchedule.isLunchBreak","weeklyScheduleHours":"IF(({$weeklySchedule.openingTime} AND {$weeklySchedule.closingTime}) IS NULL,'-',IF((timestampdiff(MINUTE,{$weeklySchedule.openingTime},{$weeklySchedule.closingTime}))>1415,'24hrs',CONCAT(floor((timestampdiff(MINUTE,{$weeklySchedule.openingTime},{$weeklySchedule.closingTime}))/60),'hrs ',((timestampdiff(MINUTE,{$weeklySchedule.openingTime},{$weeklySchedule.closingTime}))%60),'mins')))","weeklyScheduleIsAllDay":"weeklySchedule.isAllDay","weeklyScheduleOpeningTime":"weeklySchedule.openingTime","weeklyScheduleSchedule":"weeklySchedule.schedule","weeklyScheduleId":"weeklySchedule.calendarId","weeklyScheduleDisplayOrder":"weeklySchedule.displayOrder","weeklyScheduleRecver":"weeklySchedule.recver","id":"calendar.id","weeklyScheduleIsOpen":"weeklySchedule.isOpen","weeklyScheduleClosingTime":"weeklySchedule.closingTime"},"name":"fetchCalendar","orderBy":"weeklyScheduleDisplayOrder","description":"fetchCalendar","inputVarMap":{"id":"id"},"outputVarMap":{"data":"calendarData","count":"count"},"nodeType":"QUERY","getCount":true},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processData","description":"processData","processRule":"{for (var i = 0; i < contextVar.calendarData.length; i++) { var localizedKeys = {}; if (typeof contextVar.localizedData !== 'undefined' && contextVar.localizedData !== '') { contextVar.localizedData.forEach(function (element) { localizedKeys[element.listOptionAnswerId] = element.listOptionAnswerAnswerOptionText; }); } if (contextVar.calendarData[i].weeklyScheduleDay === 'mon') { contextVar.calendarData[i].weeklyScheduleDay = typeof localizedKeys['mondayWS'] !== 'undefined' ? localizedKeys['mondayWS'] : 'Monday'; } if (contextVar.calendarData[i].weeklyScheduleDay == 'tue') { contextVar.calendarData[i].weeklyScheduleDay = typeof localizedKeys['tuesdayWS'] !== 'undefined' ? localizedKeys['tuesdayWS'] : 'Tuesday'; }; if (contextVar.calendarData[i].weeklyScheduleDay == 'wed') { contextVar.calendarData[i].weeklyScheduleDay = typeof localizedKeys['wednesdayWS'] !== 'undefined' ? localizedKeys['wednesdayWS'] : 'Wednesday'; }; if (contextVar.calendarData[i].weeklyScheduleDay == 'thu') { contextVar.calendarData[i].weeklyScheduleDay = typeof localizedKeys['thursdayWS'] !== 'undefined' ? localizedKeys['thursdayWS'] : 'Thursday'; }; if (contextVar.calendarData[i].weeklyScheduleDay == 'fri') { contextVar.calendarData[i].weeklyScheduleDay = typeof localizedKeys['fridayWS'] !== 'undefined' ? localizedKeys['fridayWS'] : 'Friday'; }; if (contextVar.calendarData[i].weeklyScheduleDay == 'sat') { contextVar.calendarData[i].weeklyScheduleDay = typeof localizedKeys['saturdayWS'] !== 'undefined' ? localizedKeys['saturdayWS'] : 'Saturday'; }; if (contextVar.calendarData[i].weeklyScheduleDay == 'sun') { contextVar.calendarData[i].weeklyScheduleDay = typeof localizedKeys['sundayWS'] !== 'undefined' ? localizedKeys['sundayWS'] : 'Sunday'; }; if (contextVar.calendarData[i].weeklyScheduleIsOpen == true) { contextVar.calendarData[i].shiftWeeklyScheduleIsOpen = typeof localizedKeys.availableShift !== 'undefined' ? localizedKeys.availableShift : 'Available'; contextVar.calendarData[i].serviceWindowWeeklyScheduleIsOpen = typeof localizedKeys.openSW !== 'undefined' ? localizedKeys.openSW : 'Open'; if (typeof contextVar.calendarData[i].weeklyScheduleSchedule != 'undefined') { var formattedStartTime, formattedEndTime, timings = '', len = contextVar.calendarData[i].weeklyScheduleSchedule.length, hours = 0, minutes = 0, timeDiff = 0; for (var index = 0; index < len; index++) { var propertyStartTime = 'weeklyScheduleSchedule' + (index + 1) + 'StartTime', propertyEndTime = 'weeklyScheduleSchedule' + (index + 1) + 'EndTime'; contextVar.calendarData[i][propertyStartTime] = contextVar.calendarData[i].weeklyScheduleSchedule[index].start; contextVar.calendarData[i][propertyEndTime] = contextVar.calendarData[i].weeklyScheduleSchedule[index].end; var start, end; start = contextVar.calendarData[i].weeklyScheduleSchedule[index].start; end = contextVar.calendarData[i].weeklyScheduleSchedule[index].end; timings = contextVar.calendarData[i].weeklyScheduleSchedule; var currentStartDate = new Date(); currentStartDate.setHours((start.split(':'))[0]); currentStartDate.setMinutes((start.split(':'))[1]); var currentEndDate = new Date(); currentEndDate.setHours((end.split(':'))[0]); currentEndDate.setMinutes((end.split(':'))[1]); timeDiff += Math.abs((currentStartDate.getTime() - currentEndDate.getTime()) / 1000); } hours = Math.floor(timeDiff / 3600); minutes = Math.floor((timeDiff % 3600) / 60); contextVar.calendarData[i].weeklyScheduleTimings = timings; if (typeof localizedKeys.hoursTD !== 'undefined' && typeof localizedKeys.minutesTD !== 'undefined') { contextVar.calendarData[i].weeklyScheduleTotalHours = (contextVar.calendarData[i].weeklyScheduleIsAllDay === true) ? '24' + localizedKeys.hoursTD : ((minutes === 0) ? (hours + localizedKeys.hoursTD) : (hours + localizedKeys.hoursTD + ' ' + minutes + localizedKeys.minutesTD)); } else { contextVar.calendarData[i].weeklyScheduleTotalHours = (contextVar.calendarData[i].weeklyScheduleIsAllDay === true) ? '24h' : ((minutes === 0) ? (hours + 'h') : (hours + 'h ' + minutes + 'm')); } } } else { contextVar.calendarData[i].shiftWeeklyScheduleIsOpen = typeof localizedKeys.offShift !== 'undefined' ? localizedKeys.offShift : 'Off'; contextVar.calendarData[i].serviceWindowWeeklyScheduleIsOpen = typeof localizedKeys.closedSW !== 'undefined' ? localizedKeys.closedSW : 'Closed'; contextVar.calendarData[i].weeklyScheduleOpeningTime = ''; contextVar.calendarData[i].weeklyScheduleClosingTime = ''; contextVar.calendarData[i].weeklyScheduleHours = '-'; contextVar.calendarData[i].weeklyScheduleTimings = '-'; contextVar.calendarData[i].weeklyScheduleTotalHours = '-'; } if(typeof contextVar.calendarData[i].weeklyScheduleLunchBreakSchedule != 'undefined' && contextVar.calendarData[i].weeklyScheduleLunchBreakSchedule.length > 0) { contextVar.calendarData[i]['breakStartTime'] = contextVar.calendarData[i].weeklyScheduleLunchBreakSchedule[0].start; contextVar.calendarData[i]['breakEndTime'] = contextVar.calendarData[i].weeklyScheduleLunchBreakSchedule[0].end; contextVar.calendarData[i]['minimumBreakDuration'] = Number(contextVar.calendarData[i].weeklyScheduleLunchBreakSchedule[0].minimumBreakDuration);contextVar.calendarData[i]['isAddBreak']= contextVar.calendarData[i].weeklyScheduleIsLunchBreak } }}","nodeType":"PROCESS"},"fetchLocalizedKeys":{"filter":"{$listOptionAnswer.listOptionId}='calendarStatus' || {$listOptionAnswer.listOptionId}='timeDuration'|| {$listOptionAnswer.listOptionId}='weeklyScheduleWeekDay'","models":["listOptionAnswer"],"connectors":[{"exitPortType":"NextStep","nodeId":"processData"}],"columns":{"listOptionAnswerId":"listOptionAnswer.id","listOptionAnswerAnswerOptionText":"listOptionAnswer.answerOptionText"},"name":"fetchLocalizedKeys","description":"fetchLocalizedKeys","outputVarMap":{"data":"localizedData"},"nodeType":"QUERY","translate":true},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchCalendar"}],"name":"start","description":"Start","nodeType":"START"},"end":{"name":"End","description":"end","inputVarMap":{"count":"count","calendarData":"calendarData"},"outputVarMap":{"count":"count","calendarData":"calendarData"},"nodeType":"END"},"workflowNodes":["start","fetchCalendar","fetchLocalizedKeys","processData","end"]}