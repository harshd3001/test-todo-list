{"forEachContract":{"connectors":[{"exitPortType":"TrueStep","nodeId":"callCustomerContractWF"},{"exitPortType":"FalseStep","nodeId":"end"}],"data":"contractsToBeCreated","name":"forEachContract","description":"Provide some description for your for each node","inputVarMap":{},"id":"forEachContract","outputVarMap":{},"nodeType":"FOREACHLOOP"},"processServiceWindowDetails":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processServiceWindowDetails","description":"Use this for processing data in workflow","processRule":"{contextVar.serviceWindowCalendarId=contextVar.existingContractDetails[0].serviceWindowId; contextVar.finalContractId = contextVar.existingContractDetails[0].id;}","id":"processServiceWindowDetails","nodeType":"PROCESS"},"fetchContractForCustomer":{"models":["contract"],"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfContractDetailsExists"}],"havingClause":"","inputs":{"id":""},"columns":{"id":"contract.id","serviceWindowId":"contract.calendarId"},"description":"Provide some description for your query","outerJoinOnModel":"","orderBy":"","distinct":false,"inputVarMap":{"contractToBeAssociated":"customerContractName","customerId":"customer"},"groupBy":"","nodeType":"QUERY","filter":"{$contract.contractNumber}={@customerContractName} AND {$contract.customerId}={@customer}","name":"fetchContractForCustomer","links":{},"id":"fetchContractForCustomer","outputVarMap":{"data":"existingContractDetails"}},"fetchCalenderData":{"models":["calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"processServiceWindowData"}],"havingClause":"","inputs":{"id":""},"columns":{"isDefault":"calendar.defaultCalendar","calendarType":"calendar.calendarType","name":"calendar.name","id":"calendar.id"},"description":"Provide some description for your query","outerJoinOnModel":"","orderBy":"","distinct":false,"inputVarMap":{},"groupBy":"","nodeType":"QUERY","filter":"{$calendarType}='serviceWindow'","name":"fetchCalenderData","links":{},"id":"fetchCalenderData","outputVarMap":{"data":"serviceWindowData"}},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchCalenderData"}],"nodeSource":"./static/media/start.018acd1a.svg","name":"start","description":"Start","id":"start","position":{"x":88,"y":90.5},"nodeType":"START"},"end":{"nodeSource":"./static/media/end.5c5273bd.svg","name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"id":"end","position":{"x":2160,"y":110},"nodeType":"END"},"checkIfContractDetailsExists":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processServiceWindowDetails"},{"exitPortType":"FalseStep","nodeId":"forEachContract"}],"name":"checkIfContractDetailsExists","description":"Use this for decision in workflow","processRule":"(contextVar.existingContractDetails.length>0 && contextVar.existingContractDetails[0].id!='' && contextVar.existingContractDetails[0].serviceWindowId!='')","id":"checkIfContractDetailsExists","nodeType":"DECISION"},"processContractId":{"connectors":[{"exitPortType":"NextStep","nodeId":"forEachContract"}],"contextChangePermitted":true,"name":"processContractId","description":"Use this for processing data in workflow","processRule":"{if(contextVar.contractToBeAssociated==contextVar.forEachContract_currentElement[0].contractNumber){contextVar.finalContractId=contextVar.contractId;}}","id":"processContractId","nodeType":"PROCESS"},"processServiceWindowData":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchContractForCustomer"}],"contextChangePermitted":true,"name":"processServiceWindowData","description":"Use this for processing data in workflow","processRule":"contextVar.serviceWindows = []; contextVar.contractSubAction = 'upsertContract'; for(var i=0;i<contextVar.serviceWindowData.length;i++){contextVar.serviceWindows[contextVar.serviceWindowData[i]['name']]=contextVar.serviceWindowData[i]['id'];} var contracts = {'ET Contract': 'Default ET Service Window','CT Contract': 'Default CT Service Window','MT Contract': 'Default MT Service Window','PT Contract': 'Default PT Service Window'}; contextVar.contractToServiceWindowId = []; for(var contract in contracts){contextVar.contractToServiceWindowId[contract]=contextVar.serviceWindows[contracts[contract]];} var calendars = { 'Central Standard Time': 'Default CT Service Window', 'Eastern Standard Time': 'Default ET Service Window', 'Pacific Standard Time': 'Default PT Service Window', 'Mountain Standard Time': 'Default MT Service Window', 'Central Daylight Time': 'Default CT Service Window', 'Eastern Daylight Time': 'Default ET Service Window', 'Pacific Daylight Time': 'Default PT Service Window', 'Mountain Daylight Time': 'Default MT Service Window' }; contextVar.calendarToServiceWindowId = []; for(var calendar in calendars){contextVar.calendarToServiceWindowId[calendar]=contextVar.serviceWindows[calendars[calendar]];} contextVar.serviceWindowCalendarId = contextVar.calendarToServiceWindowId[contextVar.acTimeZoneName]; contextVar.customerContracts = ['ET Contract','CT Contract','MT Contract','PT Contract']; contextVar.contractsToBeCreated = []; for(var i=0;i<contextVar.customerContracts.length;i++){contextVar.contractsToBeCreated[contextVar.customerContracts[i]]=[{'calendarId': contextVar.contractToServiceWindowId[contextVar.customerContracts[i]], 'statusTargetModel': 'contract', 'statusId': 'contractActive', 'customerId': contextVar.customerId, 'contractNumber': contextVar.customerContracts[i], 'description': contextVar.customerContracts[i]}]};var calendarsToContract = { 'Central Standard Time': 'CT Contract', 'Eastern Standard Time': 'ET Contract', 'Pacific Standard Time': 'PT Contract', 'Mountain Standard Time': 'MT Contract', 'Central Daylight Time': 'CT Contract', 'Eastern Daylight Time': 'ET Contract', 'Pacific Daylight Time': 'PT Contract', 'Mountain Daylight Time': 'MT Contract'}; contextVar.contractToBeAssociated = calendarsToContract[contextVar.acTimeZoneName];","id":"processServiceWindowData","nodeType":"PROCESS"},"callCustomerContractWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processContractId"}],"processId":"customerContractWF","name":"callCustomerContractWF","description":"Provide some description for your workflow node","inputVarMap":{"contractSubAction":"subAction","forEachContract_currentElement":"contract"},"id":"callCustomerContractWF","outputVarMap":{"data":"outContractId"},"nodeType":"WORKFLOW"},"workflowNodes":["start","end","processServiceWindowData","fetchCalenderData","forEachContract","callCustomerContractWF","processContractId","fetchContractForCustomer","checkIfContractDetailsExists","processServiceWindowDetails"]}