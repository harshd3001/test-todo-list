{"processTechnicianTaskDetails":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTechnicianData"}],"contextChangePermitted":true,"name":"processTechnicianTaskDetails","description":"processTechnicianTaskDetails","processRule":"{ var compareDates = function (techTaskStartTime, techTaskEndTime, existingTaskEndTime) { return (new Date(techTaskStartTime) >= new Date(existingTaskEndTime) && techTaskEndTime <= contextVar.taskStartTime); }; if (typeof contextVar.technicianTaskLocationDetailsData !== 'undefined' && contextVar.technicianTaskLocationDetailsData !== '' && contextVar.technicianTaskLocationDetailsData.length > 0) { contextVar.technicianId = []; contextVar.technicianTaskLocation = {}; for (var location in contextVar.technicianTaskLocationDetailsData) { if (typeof contextVar.technicianTaskLocation[contextVar.technicianTaskLocationDetailsData[location].userId] === 'undefined' || contextVar.technicianTaskLocation[contextVar.technicianTaskLocationDetailsData[location].userId] === '') { if (new Date(contextVar.taskStartTime).getDate() === new Date(contextVar.technicianTaskLocationDetailsData[location].endTime).getDate() && new Date(contextVar.taskStartTime) >= new Date(contextVar.technicianTaskLocationDetailsData[location].endTime)) { contextVar.technicianTaskLocation[contextVar.technicianTaskLocationDetailsData[location].userId] = contextVar.technicianTaskLocationDetailsData[location]; contextVar.technicianId.push(contextVar.technicianTaskLocationDetailsData[location].userId); } } else { var newTaskStartTime = contextVar.technicianTaskLocationDetailsData[location].startTime; var newTaskEndTime = contextVar.technicianTaskLocationDetailsData[location].endTime; var userId = contextVar.technicianTaskLocationDetailsData[location].userId; if (compareDates(newTaskStartTime, newTaskEndTime, contextVar.technicianTaskLocation[userId].endTime)) { contextVar.technicianTaskLocation[userId] = contextVar.technicianTaskLocationDetailsData[location]; } } } } if (typeof contextVar.technicianId !== 'undefined' && contextVar.technicianId.length > 0) { contextVar.loopArray = contextVar.loopArray.filter(function (val) { return contextVar.technicianId.indexOf(val) === -1; }); } }","nodeType":"PROCESS"},"processDistance":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processDistance","description":"processDistance","processRule":"{ contextVar.proximityScoreData ={}; if (typeof contextVar.distanceData !== 'undefined' && contextVar.distanceData !== '') { var distance = typeof contextVar.distanceData.rows !== 'undefined' && contextVar.distanceData.rows != '' && contextVar.distanceData.rows.length > 0 ? contextVar.distanceData.rows : {}; var index = -1; distance.forEach(function (row) { index = distance.indexOf(row); if (row.elements[0].status == 'OK') { contextVar.validTechList[index].duration = row.elements[0].duration.text; contextVar.validTechList[index].distance = row.elements[0].distance.text; contextVar.validTechList[index].distanceValue = row.elements[0].distance.value; contextVar.validTechList[index].durationValue = row.elements[0].duration.value; } else if (row.elements[0].status == 'ZERO_RESULTS') { return; } }); var validTechListData = contextVar.validTechList; if (typeof contextVar.validTechList != 'undefined' && contextVar.validTechList != '') { var jsonData = {}; for (var i = 0; i < validTechListData.length; i++) { jsonData[validTechListData[i].id] = { 'text': validTechListData[i].duration, 'value': validTechListData[i].durationValue, 'distanceValue': validTechListData[i].distanceValue }; } } contextVar.proximityScoreData = jsonData; } }","nodeType":"PROCESS"},"fetchMoreTasks":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchTechsTaskData"},{"exitPortType":"FalseStep","nodeId":"processTechnicianTaskDetails"}],"data":"technicianTaskLocationDetailsData","name":"fetchMoreTasks","description":"fetchMoreTasks","inputVarMap":{},"processRule":"contextVar.noOfBatchesTask >= contextVar.newTechnicianTaskLocationBatchNumber","id":"fetchMoreTasks","outputVarMap":{},"nodeType":"WHILELOOP"},"appendTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTasksPresent"}],"contextChangePermitted":true,"name":"appendTasks","description":"appendTasks","processRule":"if (Array.isArray(contextVar.appendTechnicianTaskLocationDetailsData)) { contextVar.technicianTaskLocationDetailsData = contextVar.technicianTaskLocationDetailsData.concat(contextVar.appendTechnicianTaskLocationDetailsData)} contextVar.newTechnicianTaskLocationBatchNumber = contextVar.newTechnicianTaskLocationBatchNumber + 1;","id":"appendTasks","nodeType":"PROCESS"},"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTechsPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"{contextVar.noOfBatches = Math.ceil(contextVar.proximityTechArray.length / contextVar.customBatchSize);contextVar.newBatchNumber = contextVar.techBatchNumber + 1;contextVar.originalProximityTechArray = JSON.parse(JSON.stringify(contextVar.proximityTechArray));}","id":"findNumberOfBatches","nodeType":"PROCESS"},"areMoreTechsPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"technicianProcessData"},{"exitPortType":"FalseStep","nodeId":"formGoogleApiData"}],"name":"areMoreTechsPresent","description":"areMoreTechsPresent","processRule":"contextVar.originalProximityTechArray.length > 0","id":"areMoreTechsPresent","nodeType":"DECISION"},"areMoreTasksPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchMoreTasks"},{"exitPortType":"FalseStep","nodeId":"processTechnicianTaskDetails"}],"name":"areMoreTasksPresent","description":"areMoreTasksPresent","processRule":"contextVar.noOfBatchesTask >= 2","id":"areMoreTasksPresent","nodeType":"DECISION"},"getTechnicianTaskDetails":{"models":["User","workOrderTask","workforce","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfTaskBatches"}],"columns":{"workOrderTaskStatusId":"workOrderTask.statusId","latitude":"site.latitude","workOrderTaskId":"workOrderTask.id","startTime":"workOrderTask.scheduledDate","endTime":"workOrderTask.dueDate","userName":"User.name","userId":"workforce.userId","estimatedDuration":"workOrderTask.estimatedDuration","longitude":"site.longitude"},"description":"getTechnicianTaskDetails","orderBy":"endTime DESC","inputVarMap":{"customBatchSize":"batchSize","workOrderTaskStatusId":"workOrderTaskStatusId","startDateFilter":"startDateFilter","endDateFilter":"endDateFilter","loopArray":"loopArray","workOrderTaskId":"workOrderTaskId"},"nodeType":"QUERY","filter":"{$userId} in {@loopArray} AND (({$startTime} BETWEEN {@startDateFilter} AND  {@endDateFilter}) OR ({$endTime} BETWEEN {@startDateFilter} AND  {@endDateFilter})) AND {$workOrderTaskStatusId} not in {@workOrderTaskStatusId} AND {$workOrderTask.id} != {@workOrderTaskId}","name":"getTechnicianTaskDetails","links":{"workOrderTask":"workforce","site":"workOrderTask","workforce":"User"},"outputVarMap":{"data":"technicianTaskLocationDetailsData","count":"technicianTaskLocationDetailsCount","batchNumber":"technicianTaskLocationDetailsBatchNumber"},"batchSize":"batchSize","getCount":true},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"isValidTechList"}],"name":"start","description":"Start","nodeType":"START"},"fetchTechnicianData":{"filter":"{$id} in {@loopArray}","models":["User","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTechnicians"}],"columns":{"latitude":"workforce.latitude","id":"User.id","userName":"User.name","longitude":"workforce.longitude"},"name":"fetchTechniciansData","outerJoinOnModel":"User","distinct":true,"inputVarMap":{"loopArray":"loopArray","batchSize":"batchSize"},"outputVarMap":{"data":"technicianData"},"batchSize":"batchSize","nodeType":"QUERY","getCount":true},"isValidTechList":{"connectors":[{"exitPortType":"FalseStep","nodeId":"findNumberOfBatches"},{"exitPortType":"TrueStep","nodeId":"formGoogleApiData"}],"name":"isValidTechList","description":"isValidTechList","processRule":"(typeof contextVar.validTechList !== 'undefined'  &&  contextVar.validTechList !== '' && contextVar.validTechList.length > 0 )","nodeType":"DECISION"},"googleAPIWFCall":{"connectors":[{"exitPortType":"NextStep","nodeId":"processDistance"}],"processId":"loopOverGoogleDistanceAPI","name":"googleAPIWFCall","description":"googleAPIWFCall","inputVarMap":{"localize":"localize","destinations":"destinations","origins":"origins","travelMode":"travelMode"},"outputVarMap":{"googleDistanceData":"distanceData"},"nodeType":"WORKFLOW"},"findNumberOfTaskBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTasksPresent"}],"contextChangePermitted":true,"name":"findNumberOfTaskBatches","description":"findNumberOfTaskBatches","processRule":"contextVar.noOfBatchesTask = Math.ceil(contextVar.technicianTaskLocationDetailsCount / contextVar.customBatchSize); contextVar.newTechnicianTaskLocationBatchNumber = contextVar.technicianTaskLocationDetailsBatchNumber + 1;","id":"findNumberOfTaskBatches","nodeType":"PROCESS"},"workflowNodes":["start","isValidTechList","findNumberOfBatches","areMoreTechsPresent","technicianProcessData","checkIfCalledFromCrew","getTechnicianTaskDetails","findNumberOfTaskBatches","areMoreTasksPresent","fetchMoreTasks","fetchTechsTaskData","appendTasks","processTechnicianTaskDetails","fetchTechnicianData","processTechnicians","formGoogleApiData","proximityCall","haversineFormulaWFCall","googleAPIWFCall","processDistance","end"],"checkIfCalledFromCrew":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchTechnicianData"},{"exitPortType":"FalseStep","nodeId":"getTechnicianTaskDetails"}],"name":"checkIfCalledFromCrew","description":"checkIfCalledFromCrew","processRule":"contextVar.proximityCall === 'crew'","nodeType":"DECISION"},"processTechnicians":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTechsPresent"}],"contextChangePermitted":true,"name":"processTechnicians","description":"processTechnicians","processRule":"{ if (Array.isArray(contextVar.technicianId)) { contextVar.technicianId.forEach(function (element) { var obj = {}; obj = { 'latitude': contextVar.technicianTaskLocation[element].latitude, 'id': contextVar.technicianTaskLocation[element].userId, 'userName': contextVar.technicianTaskLocation[element].userName, 'longitude': contextVar.technicianTaskLocation[element].longitude }; contextVar.validTechList.push(obj); }); } if (Array.isArray(contextVar.technicianData)) { contextVar.validTechList = contextVar.validTechList.concat(contextVar.technicianData); } }","nodeType":"PROCESS"},"formGoogleApiData":{"connectors":[{"exitPortType":"NextStep","nodeId":"proximityCall"}],"contextChangePermitted":true,"name":"formGoogleApiData","description":"formGoogleApiData","processRule":"{contextVar.localize = contextVar.localize || 'en'; var arrayList = []; if (Array.isArray(contextVar.proximityTechArray) && contextVar.proximityTechArray.length > 0  && Array.isArray(contextVar.validTechList) && contextVar.validTechList.length ) { contextVar.proximityTechArray.forEach(function (tech) { contextVar.validTechList.forEach(function (validTech) { if (tech === validTech.id) { contextVar.origins += validTech.latitude + ',' + validTech.longitude + '|'; arrayList.push(validTech); } }); }); } contextVar.validTechList = []; contextVar.validTechList = JSON.parse(JSON.stringify(arrayList));}","nodeType":"PROCESS"},"workflowContext":{"validTechList":[],"customBatchSize":1000,"workOrderTaskStatusId":["workOrderTaskCompleted","workOrderTaskCancelled"],"techBatchNumber":0,"origins":"","travelMode":"driving"},"technicianProcessData":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfCalledFromCrew"}],"contextChangePermitted":true,"name":"technicianProcessData","description":"technicianProcessData","processRule":"{contextVar.loopArray = [];contextVar.loopArray = contextVar.originalProximityTechArray.splice(0,contextVar.customBatchSize);}","nodeType":"PROCESS"},"fetchTechsTaskData":{"models":["User","workOrderTask","workforce","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendTasks"}],"columns":{"workOrderTaskStatusId":"workOrderTask.statusId","latitude":"site.latitude","workOrderTaskId":"workOrderTask.id","startTime":"workOrderTask.scheduledDate","endTime":"workOrderTask.dueDate","userName":"User.name","userId":"workforce.userId","estimatedDuration":"workOrderTask.estimatedDuration","longitude":"site.longitude"},"description":"fetchTechsTaskData","orderBy":"endTime DESC","distinct":true,"inputVarMap":{"customBatchSize":"batchSize","workOrderTaskStatusId":"workOrderTaskStatusId","startDateFilter":"startDateFilter","endDateFilter":"endDateFilter","loopArray":"loopArray","workOrderTaskId":"workOrderTaskId","newTechnicianTaskLocationBatchNumber":"batchNumber"},"nodeType":"QUERY","filter":"{$userId} in {@loopArray} AND (({$startTime} BETWEEN {@startDateFilter} AND  {@endDateFilter}) OR ({$endTime} BETWEEN {@startDateFilter} AND  {@endDateFilter})) AND {$workOrderTaskStatusId} not in {@workOrderTaskStatusId} AND {$workOrderTask.id} != {@workOrderTaskId}","name":"fetchTechsTaskData","links":{"workOrderTask":"workforce","site":"workOrderTask","workforce":"User"},"outputVarMap":{"data":"appendTechnicianTaskLocationDetailsData"},"batchSize":"batchSize","getCount":true,"batchNumber":"batchNumber"},"haversineFormulaWFCall":{"connectors":[{"exitPortType":"NextStep","nodeId":"processDistance"}],"processId":"haversineFormulaForDistanceCalculationWF","name":"haversineFormulaWFCall","description":"haversineFormulaWFCall","inputVarMap":{"destinations":"destinations","origins":"origins"},"outputVarMap":{"crowDistanceData":"distanceData"},"nodeType":"WORKFLOW"},"end":{"name":"End","description":"end","inputVarMap":{"validTechList":"validTechList","destinations":"destinations","proximityScoreData":"proximityScoreData"},"outputVarMap":{"validTechList":"validTechList","destinations":"destinations","proximityScoreData":"proximityScoreData"},"nodeType":"END"},"proximityCall":{"connectors":[{"exitPortType":"TrueStep","nodeId":"haversineFormulaWFCall"},{"exitPortType":"FalseStep","nodeId":"googleAPIWFCall"}],"name":"proximityCall","description":"proximityCall","processRule":"(contextVar.proximityCall === 'base' || contextVar.proximityCall === 'crew')","nodeType":"DECISION"}}