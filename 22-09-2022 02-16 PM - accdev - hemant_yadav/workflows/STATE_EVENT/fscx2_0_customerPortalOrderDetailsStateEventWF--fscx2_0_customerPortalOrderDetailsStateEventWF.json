{"callTaskDataWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processData"}],"ignoreSubContext":true,"name":"callTaskDataWF","description":"callTaskDataWF","inputVarMap":{"jobId":"workOrderTaskId","taskDataProcessId":"processId"},"outputVarMap":{"workOrderTaskData":"workOrderTaskData"},"nodeType":"WORKFLOW"},"getLenderName":{"models":["workOrder","workOrderTask","accLender"],"connectors":[{"exitPortType":"NextStep","nodeId":"checkCustomerPortalOrderDetailsStatus"}],"havingClause":"","inputs":{"id":""},"columns":{"lenderName":"accLender.lenderName","id":"workOrderTask.id","workOrderId":"workOrderTask.workOrderId"},"description":"Provide some description for your query","outerJoinOnModel":"workOrder","orderBy":"","distinct":false,"inputVarMap":{"jobId":"taskId"},"groupBy":"","nodeType":"QUERY","filter":"{$id}={@taskId}","name":"getLenderName","links":{"workOrder":"accLender","workOrderTask":"workOrder"},"id":"getLenderName","outputVarMap":{"data":"lenderData"},"subFilters":[],"selectColumns":[]},"createDataForUserConfirmationNotification":{"connectors":[{"exitPortType":"NextStep","nodeId":"notifyNodeUserBookingConfirmation"}],"contextChangePermitted":true,"name":"createDataForUserConfirmationNotification","description":"createDataForUserConfirmationNotification","processRule":"{ contextVar.dataForNotify = []; contextVar.notificationInfo = 'Pre Booking'; if (typeof contextVar.preferredNotification != 'undefined' && contextVar.preferredNotification != '' && contextVar.preferredNotification == 'EMAIL' && contextVar.smsOpt == false) { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'templateId': 'fscx2_0_userConfrimationEmail', 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.contactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'customerName': contextVar.siteData[0].contactPerson, 'lenderName': contextVar.lenderData[0].lenderName }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'templateId': 'fscx2_0_userConfrimationEmail', 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.secondaryContactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'customerName': contextVar.siteData[0].contactPerson, 'lenderName': contextVar.lenderData[0].lenderName }); } } else if (typeof contextVar.preferredNotification != 'undefined' && contextVar.preferredNotification != '' && contextVar.preferredNotification == 'EMAIL' && contextVar.smsOpt == true) { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'phoneNumber': contextVar.contactPhone, 'scheduledDate': contextVar.startDate, 'appointmentWindow': contextVar.appointmentWindowForSMS, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0userBookingConfimrationSms', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms2', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'templateId': 'fscx2_0_userConfrimationEmail', 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.contactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'customerName': contextVar.siteData[0].contactPerson, 'lenderName': contextVar.lenderData[0].lenderName }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'phoneNumber': contextVar.secondaryContactPhone, 'scheduledDate': contextVar.startDate, 'appointmentWindow': contextVar.appointmentWindowForSMS, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0userBookingConfimrationSms', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms2', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'templateId': 'fscx2_0_userConfrimationEmail', 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.secondaryContactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'customerName': contextVar.siteData[0].contactPerson, 'lenderName': contextVar.lenderData[0].lenderName }); } } } ","nodeType":"PROCESS","jsEngine":"es6"},"checkStatusId":{"connectors":[{"exitPortType":"TrueStep","nodeId":"updateApptConfirmed"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"checkStatusId","description":"Use this for decision in workflow","processRule":"contextVar.statusId === 'fscx2_0_additionalInformationSubmitted'","id":"checkStatusId","nodeType":"DECISION"},"workflowContext":{"featureLoggerWF":"featureLoggerWF","configScopeArray":["customerPortal"],"featureName":"customerPortal","workOrderTaskModelWF":"workOrderTaskModelWF","extraMsg":"fscx2_0_customerPortalOrderDetailsStateEventWF","siteDataProcessId":"fetchSiteCustomerTaskTypeDetails","taskDataProcessId":"FQJXQ58NSK"},"checkCustomerPortalOrderDetailsStatus":{"connectors":[{"condition":"contextVar.statusId === 'fscx2_0_bookingCreated' && (typeof contextVar.disableBookingCreatedNotification === 'undefined'|| contextVar.disableBookingCreatedNotification === false )","exitPortType":"NextStep","nodeId":"createDataForRequestNotification"},{"condition":"contextVar.statusId === 'fscx2_0_bookingCancelled' && contextVar.workOrderTaskStatusId !=='workOrderTaskCancelled'","exitPortType":"NextStep","nodeId":"callWorkOrderTaskModelWF"},{"condition":"contextVar.statusId === 'fscx2_0_bookingConfirmed' || contextVar.statusId === 'fscx2_0_additionalInformationSubmitted'  || contextVar.statusId === 'fscx2_0_bookingRescheduled' || contextVar.statusId === 'fscx2_0_userBookingConfirmed' || contextVar.statusId === 'fscx2_0_userBookingUnconfirmed' || contextVar.statusId === 'fscx2_0_additionalInformationNotSubmitted'","exitPortType":"NextStep","nodeId":"callTaskDataWF"},{"DefaultStep":true,"condition":"contextVar.statusId===''","exitPortType":"NextStep","nodeId":"end"}],"name":"checkCustomerPortalOrderDetailsStatus","description":"checkCustomerPortalOrderDetailsStatus","nodeType":"MULTIDECISION"},"createDataForConfirmationNotification":{"connectors":[{"exitPortType":"NextStep","nodeId":"notifyNodeBookingConfirmation"}],"contextChangePermitted":true,"name":"createDataForConfirmationNotification","description":"createDataForConfirmationNotification","processRule":"{ contextVar.dataForNotify = []; contextVar.notificationInfo = 'Booking Confirm'; if (contextVar.statusId === 'fscx2_0_bookingRescheduled') { contextVar.notificationInfo = 'Rescheduled'; } contextVar.acIsApptConfirmed = true; contextVar.additionalText = ' We will have an appraiser in your area on ' + contextVar.dateTime + '.If you are available for an appointment with an arrival time between ' + contextVar.startTime + ' and ' + contextVar.endtime + ' , please confirm via our Customer Portal.'; contextVar.additionalText1 = 'If you are not available, please visit the Customer Portal to select a new date and time: '; contextVar.headerText = 'Confirm Your Appointment'; if (contextVar.statusId === 'fscx2_0_additionalInformationNotSubmitted' || contextVar.statusId === 'fscx2_0_bookingConfirmed') { contextVar.templateId = 'fscx2_0_bookingRequestEmail'; } else { contextVar.templateId = 'fscx2_0_bookingConfrimationEmail' } if (typeof contextVar.preferredNotification != 'undefined' && contextVar.preferredNotification != '' && contextVar.preferredNotification == 'SMS') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.contactPhone, 'scheduledDate': contextVar.startDate, 'appointmentWindow': contextVar.appointmentWindowForSMS, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms1', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms2', 'preferredNotification': 'sms' }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.secondaryContactPhone, 'scheduledDate': contextVar.startDate, 'appointmentWindow': contextVar.appointmentWindowForSMS, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms1', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms2', 'preferredNotification': 'sms' }); } } else if (typeof contextVar.preferredNotification != 'undefined' && contextVar.preferredNotification != '' && contextVar.preferredNotification == 'EMAIL' && contextVar.smsOpt == false) { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'templateId': contextVar.templateId, 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.contactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'dateTime': contextVar.dateTime, 'startTime': contextVar.startTime, 'endTime': contextVar.endtime, 'additionalText': contextVar.additionalText, 'additionalText1': contextVar.additionalText1, 'headerText': contextVar.headerText, 'lenderName':contextVar.lenderData[0].lenderName }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'templateId': contextVar.templateId, 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.secondaryContactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'dateTime': contextVar.dateTime, 'startTime': contextVar.startTime, 'endTime': contextVar.endtime, 'additionalText': contextVar.additionalText, 'additionalText1': contextVar.additionalText1, 'headerText': contextVar.headerText, 'lenderName':contextVar.lenderData[0].lenderName }); } } else { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.contactPhone, 'scheduledDate': contextVar.startDate, 'appointmentWindow': contextVar.appointmentWindowForSMS, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms1', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms2', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'templateId': contextVar.templateId, 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.contactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'dateTime': contextVar.dateTime, 'startTime': contextVar.startTime, 'endTime': contextVar.endtime, 'additionalText': contextVar.additionalText, 'additionalText1': contextVar.additionalText1, 'headerText': contextVar.headerText, 'lenderName':contextVar.lenderData[0].lenderName }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.secondaryContactPhone, 'scheduledDate': contextVar.startDate, 'appointmentWindow': contextVar.appointmentWindowForSMS, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms1', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms2', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'templateId': contextVar.templateId, 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.secondaryContactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'dateTime': contextVar.dateTime, 'startTime': contextVar.startTime, 'endTime': contextVar.endtime, 'additionalText': contextVar.additionalText, 'additionalText1': contextVar.additionalText1, 'headerText': contextVar.headerText, 'lenderName':contextVar.lenderData[0].lenderName }); } } } ","nodeType":"PROCESS","jsEngine":"es6"},"flowDecision":{"connectors":[{"condition":"contextVar.statusId === 'fscx2_0_userBookingConfirmed' && (typeof contextVar.disableUserConfirmedNotification === 'undefined'|| contextVar.disableUserConfirmedNotification === false )","exitPortType":"NextStep","nodeId":"createDataForUserConfirmationNotification"},{"condition":"contextVar.statusId === 'fscx2_0_userBookingUnconfirmed' && (typeof contextVar.disableUserUnconfirmedNotification === 'undefined'|| contextVar.disableUserUnconfirmedNotification === false )","exitPortType":"NextStep","nodeId":"createDataForUserUnconfirmedNotification"},{"condition":"(contextVar.statusId === 'fscx2_0_bookingConfirmed' || contextVar.statusId === 'fscx2_0_additionalInformationSubmitted'   || contextVar.statusId === 'fscx2_0_additionalInformationNotSubmitted' || contextVar.statusId === 'fscx2_0_bookingRescheduled') && (typeof contextVar.disableConfirmedNotification === 'undefined'|| contextVar.disableConfirmedNotification === false )","exitPortType":"NextStep","nodeId":"createDataForConfirmationNotification"},{"DefaultStep":true,"condition":"contextVar.statusId===''","exitPortType":"NextStep","nodeId":"end"}],"name":"flowDecision","description":"flowDecision","nodeType":"MULTIDECISION"},"end":{"name":"end","description":"end","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"notifyNodeUserBookingConfirmation":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"notifyNodeUserBookingConfirmation","description":"notifyNodeUserBookingConfirmation","inputVarMap":{"dataForNotify":"notificationData"},"targetType":"USER","outputVarMap":{},"nodeType":"NOTIFY"},"insertWorkOrderTaskData":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"flowDecision"}],"name":"insertWorkOrderTaskData","description":"insertWorkOrderTaskData","inputVarMap":{"jobId":"id","smsOpt":"smsOpt"},"outputVarMap":{"data":"insertDataResult"},"nodeType":"MODEL","displayPositionX":225,"operation":4,"displayPositionY":34},"callWorkOrderTaskModelWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"ignoreSubContext":true,"name":"callWorkOrderTaskModelWF","description":"callWorkOrderTaskModelWF","inputVarMap":{"workOrderTaskJsonObj":"workOrderTask","workOrderTaskModelWF":"processId"},"outputVarMap":{},"nodeType":"WORKFLOW"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"name":"start","description":"start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"processInitialData"}],"name":"logContextVar","description":"logContextVar","inputVarMap":{"featureLoggerWF":"processId","featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"checkSendCustomerNotification":{"connectors":[{"exitPortType":"TrueStep","nodeId":"publishEvent"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"checkSendCustomerNotification","description":"checkSendCustomerNotification","processRule":"(typeof contextVar.sendCustomerNotifications != 'undefined' && contextVar.sendCustomerNotifications == true)","nodeType":"DECISION"},"processSiteData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getLenderName"}],"contextChangePermitted":true,"name":"processSiteData","description":"processSiteData","processRule":"{ if (Array.isArray(contextVar.siteData)) { for (let key in contextVar.siteData[0]) { contextVar[key] = contextVar.siteData[0][key]; } } if (Array.isArray(contextVar.entityConfigData)) { for (let value of contextVar.entityConfigData) { if (value.configKey === 'configurations') { value.configValue = JSON.parse(value.configValue); for (let key in value.configValue) { contextVar[key] = value.configValue[key]; } } } } contextVar.workOrderTaskJsonObj = []; contextVar.workOrderTaskJsonObj.push({ 'id': contextVar.jobId, 'statusId': 'workOrderTaskCancelled' }); contextVar.customerPortalUrl = contextVar.customerPortalUrl + '?ref=' + contextVar.UID; if (contextVar.brandingParams) { contextVar.clientLogo = contextVar.brandingParams.iconUrl; } contextVar.contactPhone = contextVar.contactPhone.replace(' ', '').replace('-', ''); }","nodeType":"PROCESS","jsEngine":"es6"},"workflowNodes":["start","logContextVar","processInitialData","insertWorkOrderTaskData","checkSendCustomerNotification","publishEvent","fetchEntityConfig","callSiteDataWF","processSiteData","checkCustomerPortalOrderDetailsStatus","createDataForRequestNotification","notifyNodeBookingRequest","callWorkOrderTaskModelWF","callTaskDataWF","processData","flowDecision","createDataForUserConfirmationNotification","notifyNodeUserBookingConfirmation","createDataForUserUnconfirmedNotification","notifyNodeUserBookingUnconfirmed","createDataForConfirmationNotification","notifyNodeBookingConfirmation","getLenderName","checkStatusId","updateApptConfirmed","end"],"createDataForUserUnconfirmedNotification":{"connectors":[{"exitPortType":"NextStep","nodeId":"notifyNodeUserBookingUnconfirmed"}],"contextChangePermitted":true,"name":"createDataForUserUnconfirmedNotification","description":"createDataForUserUnconfirmedNotification","processRule":"{ contextVar.dataForNotify = []; contextVar.notificationInfo = 'Pre Booking'; if (typeof contextVar.preferredNotification != 'undefined' && contextVar.preferredNotification != '' && contextVar.preferredNotification == 'EMAIL' && contextVar.smsOpt == false) { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'templateId': 'fscx2_0_userUnConfirmedEmail', 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.contactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'templateId': 'fscx2_0_userUnConfirmedEmail', 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.secondaryContactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo }); } } if (typeof contextVar.preferredNotification != 'undefined' && contextVar.preferredNotification != '' && contextVar.smsOpt == true){ contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'phoneNumber': contextVar.contactPhone, 'scheduledDate': contextVar.startDate, 'appointmentWindow': contextVar.appointmentWindowForSMS, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0userBookingUnconfimredSms', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms2', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'templateId': 'fscx2_0_userUnConfirmedEmail', 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.contactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'phoneNumber': contextVar.secondaryContactPhone, 'scheduledDate': contextVar.startDate, 'appointmentWindow': contextVar.appointmentWindowForSMS, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0userBookingUnconfimredSms', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0bookingConfimrationSms2', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.customerName, 'templateId': 'fscx2_0_userUnConfirmedEmail', 'preferredNotification': 'email', 'scheduledDate': contextVar.startDate, 'emailId': contextVar.secondaryContactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'appointmentWindow': contextVar.appointmentWindowForEmail, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo }); } } }","nodeType":"PROCESS","jsEngine":"es6"},"notifyNodeBookingRequest":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"notifyNodeBookingRequest","description":"notifyNodeBookingRequest","inputVarMap":{"dataForNotify":"notificationData"},"targetType":"USER","outputVarMap":{},"nodeType":"NOTIFY"},"callSiteDataWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processSiteData"}],"ignoreSubContext":true,"name":"callSiteDataWF","description":"callSiteDataWF","inputVarMap":{"jobId":"id","siteDataProcessId":"processId"},"outputVarMap":{"siteData":"siteData"},"nodeType":"WORKFLOW"},"createDataForRequestNotification":{"connectors":[{"exitPortType":"NextStep","nodeId":"notifyNodeBookingRequest"}],"contextChangePermitted":true,"name":"createDataForRequestNotification","description":"createDataForRequestNotification","processRule":"{ contextVar.dataForNotify = []; contextVar.notificationInfo = 'New Booking'; contextVar.headerText = 'Book Your Appointment'; if (typeof contextVar.preferredNotification != 'undefined' && contextVar.preferredNotification != '' && contextVar.preferredNotification == 'SMS') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0_bookingRequestSMS', 'preferredNotification': 'sms' }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0_bookingRequestSMS', 'preferredNotification': 'sms' }); } } else if (typeof contextVar.preferredNotification != 'undefined' && contextVar.preferredNotification != '' && contextVar.preferredNotification == 'EMAIL') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'templateId': 'fscx2_0_bookingRequestEmail', 'preferredNotification': 'email', 'emailId': contextVar.contactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'siteAddress': contextVar.siteData[0].siteAddress, 'lenderName': contextVar.lenderData[0].lenderName, 'headerText': contextVar.headerText }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'templateId': 'fscx2_0_bookingRequestEmail', 'preferredNotification': 'email', 'emailId': contextVar.secondaryContactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'siteAddress': contextVar.siteData[0].siteAddress, 'lenderName': contextVar.lenderData[0].lenderName, 'headerText': contextVar.headerText }); } } else { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.contactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0_bookingRequestSMS', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'templateId': 'fscx2_0_bookingRequestEmail', 'preferredNotification': 'email', 'emailId': contextVar.contactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'siteAddress': contextVar.siteData[0].siteAddress, 'lenderName': contextVar.lenderData[0].lenderName, 'headerText': contextVar.headerText }); if (typeof contextVar.secondaryContactEmail != 'undefined' && contextVar.secondaryContactEmail != '' && typeof contextVar.secondaryContactPhone != 'undefined' && contextVar.secondaryContactPhone != '') { contextVar.dataForNotify.push({ 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'phoneNumber': contextVar.secondaryContactPhone, 'notificationType': 'sms', 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'templateId': 'fscx2_0_bookingRequestSMS', 'preferredNotification': 'sms' }, { 'customerPortalUrl': contextVar.customerPortalUrl, 'customerName': contextVar.siteData[0].contactPerson, 'templateId': 'fscx2_0_bookingRequestEmail', 'preferredNotification': 'email', 'emailId': contextVar.secondaryContactEmail, 'UID': contextVar.UID, 'notificationInfo': contextVar.notificationInfo, 'notificationType': 'email', 'taskType': contextVar.taskTypeName, 'clientLogo': contextVar.clientLogo, 'siteAddress': contextVar.siteData[0].siteAddress, 'lenderName': contextVar.lenderData[0].lenderName, 'headerText': contextVar.headerText }); } } } ","nodeType":"PROCESS","jsEngine":"es6"},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"insertWorkOrderTaskData"}],"contextChangePermitted":true,"name":"processData","description":"processData","processRule":"{ function toDateString(date) { var dateString = ''; function pad(number) { if (number < 10) { return '0' + number; } return number; } if (date instanceof Date) { dateString = date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + ' ' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + '.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5); } return dateString; } function trimToHourMinFormat(time) { let timeFormat = time.split(' ')[1].split(':'); return timeFormat[0] + ':' + timeFormat[1]; } if (contextVar.workOrderTaskData) { let timezoneOffset = contextVar.workOrderTaskData.siteTimezoneOffset; contextVar.contactPhone = contextVar.workOrderTaskData.siteContactPhone; contextVar.smsOpt = contextVar.workOrderTaskData.smsOpt; contextVar.contactEmail = contextVar.workOrderTaskData.siteContactEmail; contextVar.startDate = toDateString(new Date(new Date(contextVar.workOrderTaskData.workOrderTaskAppointmentWindowStartDate).getTime() - (timezoneOffset * 60000))); contextVar.startTime = trimToHourMinFormat(contextVar.startDate); contextVar.startDate = contextVar.startDate.split(' ')[0]; contextVar.endtime = toDateString(new Date(new Date(contextVar.workOrderTaskData.workOrderTaskAppointmentWindowEndDate).getTime() - (timezoneOffset * 60000))); contextVar.endtime = trimToHourMinFormat(contextVar.endtime); if (contextVar.preferredNotification === 'SMS') { contextVar.appointmentWindowForSMS = contextVar.startTime + ' hrs' + ' - ' + contextVar.endtime + ' hrs'; } else if (contextVar.preferredNotification === 'EMAIL') { contextVar.appointmentWindowForEmail = contextVar.startDate + ' / ' + contextVar.startTime + ' hrs' + ' - ' + contextVar.endtime + ' hrs'; } else { contextVar.appointmentWindowForSMS = contextVar.startTime + ' hrs' + ' - ' + contextVar.endtime + ' hrs'; contextVar.appointmentWindowForEmail = contextVar.startDate + ' / ' + contextVar.startTime + ' hrs' + ' - ' + contextVar.endtime + ' hrs'; } } let tempDate = new Date(contextVar.startDate); if (tempDate.getDay() === 0) { contextVar.dateTime = 'Sunday' + ',' + contextVar.startDate } else if (tempDate.getDay() === 1) { contextVar.dateTime = 'Monday' + ',' + contextVar.startDate } else if (tempDate.getDay() === 2) { contextVar.dateTime = 'Tuesday' + ',' + contextVar.startDate } else if (tempDate.getDay() === 3) { contextVar.dateTime = 'Wednesday' + ',' + contextVar.startDate } else if (tempDate.getDay() === 4) { contextVar.dateTime = 'Thursday' + ',' + contextVar.startDate } else if (tempDate.getDay() === 5) { contextVar.dateTime = 'Friday' + ',' + contextVar.startDate } else if (tempDate.getDay() === 6) { contextVar.dateTime = 'Saturday' + ',' + contextVar.startDate } else { contextVar.dateTime = '' } }","nodeType":"PROCESS","jsEngine":"es6"},"publishEvent":{"eventId":"fscx_2_0_customerPortalLogProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"fetchEntityConfig"}],"contextChangePermitted":true,"name":"publishEvent","description":"publishEvent","inputVarMap":{"customerPortalLog":"customerPortalLog"},"outputVarMap":{},"nodeType":"PUBLISH"},"updateApptConfirmed":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"updateApptConfirmed","description":"Provide some description for your model node","inputVarMap":{"jobId":"id","acIsApptConfirmed":"acIsApptConfirmed"},"id":"updateApptConfirmed","outputVarMap":{},"nodeType":"MODEL","operation":2},"notifyNodeUserBookingUnconfirmed":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"notifyNodeUserBookingUnconfirmed","description":"notifyNodeUserBookingUnconfirmed","inputVarMap":{"dataForNotify":"notificationData"},"targetType":"USER","outputVarMap":{},"nodeType":"NOTIFY"},"fetchEntityConfig":{"filter":"{$configScope} IN {@configScopeArray}","models":["EntityConfig"],"connectors":[{"exitPortType":"NextStep","nodeId":"callSiteDataWF"}],"columns":{"configKey":"EntityConfig.configKey","valueType":"EntityConfig.valueType","configScope":"EntityConfig.configScope","configValue":"EntityConfig.configValue"},"name":"fetchEntityConfig","description":"fetchEntityConfig","inputVarMap":{"configScopeArray":"configScopeArray"},"outputVarMap":{"data":"entityConfigData"},"nodeType":"QUERY"},"processInitialData":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkSendCustomerNotification"}],"contextChangePermitted":true,"name":"processInitialData","description":"processInitialData","processRule":"{ contextVar.customerPortalLog = []; contextVar.customerPortalLog.push({ 'UID': contextVar.data.UID, 'action': contextVar.data.statusId, 'zRequestId': new Date().getTime() + '', 'requestPayload': JSON.parse(JSON.stringify(contextVar)) }); for (var key in contextVar.data) { contextVar[key] = contextVar.data[key]; } }","nodeType":"PROCESS","jsEngine":"es6"},"notifyNodeBookingConfirmation":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkStatusId"}],"name":"notifyNodeBookingConfirmation","description":"notifyNodeBookingConfirmation","inputVarMap":{"dataForNotify":"notificationData"},"targetType":"USER","outputVarMap":{},"nodeType":"NOTIFY"}}