{"fetchCrewAttendanceForNoAccess":{"filter":" {$workOrderTaskId}={@workOrderTaskId} AND {$crewMemberStatus} = 'workforceCrewOnCrew'","models":["workOrderTask","crewAttendance","User","workforce","crew","workforceCrew"],"connectors":[{"exitPortType":"NextStep","nodeId":"processCrewAttendanceForCheckOut"}],"columns":{"workOrderTaskId":"crewAttendance.workOrderTaskId","crewMemberStatus":"workforceCrew.statusId","workforceUserId":"crewAttendance.workforceUserId","attendance":"crewAttendance.attendance"},"name":"fetchCrewAttendance","description":"fetchCrewAttendance","links":{"User":"workforce","crewAttendance":"workOrderTask","workforce":"crewAttendance","crew":"workOrderTask","workforceCrew":"crew"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"id":"fetchCrewAttendance","outputVarMap":{"data":"fetchCrewAttendanceData"},"nodeType":"QUERY","translate":true},"callCrewCheckoutWFForAll":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"autoCheckOutCrewMembersWF","name":"callCrewCheckoutWFForAll","description":"callCrewCheckoutWFForAll","inputVarMap":{"workOrderTaskId":"workOrderTaskId","reportIssueCapturedTime":"checkOutTime"},"id":"callCrewCheckoutWFForAll","outputVarMap":{},"nodeType":"WORKFLOW"},"logger":{"connectors":[{"exitPortType":"NextStep","nodeId":"multiDecision"}],"name":"logger","description":"Provide some description for your logger node","inputVarMap":{"logLevel":"logLevel","message":"message"},"id":"logger","nodeType":"LOGGER"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"multiDecision"}],"name":"start","description":" Start","id":"start","nodeType":"START"},"processCrewAttendanceForSingleTech":{"connectors":[{"exitPortType":"NextStep","nodeId":"callCrewAttendanceWF"}],"contextChangePermitted":true,"name":"processCrewAttendanceForSingleTech","description":"processCrewAttendanceForSingleTech","processRule":"contextVar.crewAttendanceDetailsDataGrid = []; var crewSingleTechObj = {}; if (contextVar.endTravelDate || contextVar.checkInTime) { crewSingleTechObj['attendanceCheckIn'] = contextVar.endTravelDate || contextVar.checkInTime; } if (contextVar.submitType == 'endTask') { if (contextVar.submitTaskTime) { crewSingleTechObj['attendanceCheckOut'] = contextVar.submitTaskTime; } } else { if (contextVar.checkOutCheckBoxForSubmitCapturedTime) { crewSingleTechObj['attendanceCheckOut'] = contextVar.checkOutCheckBoxForSubmitCapturedTime; } } if (contextVar.assignedToUserId) { crewSingleTechObj['workforceCrewWorkforceUserId'] = contextVar.assignedToUserId; } if (contextVar.endTravelLocationCoordinates) { crewSingleTechObj['siteChangeLatLong'] = contextVar.endTravelLocationCoordinates; } if (contextVar.siteChangeAddress) { crewSingleTechObj['siteChangeAddress'] = contextVar.siteChangeAddress; } if (contextVar.incorrectAddress) { crewSingleTechObj['manualCheckIn'] = contextVar.incorrectAddress; } if (contextVar.reasonOfwrongSite) { crewSingleTechObj['reason'] = contextVar.reasonOfwrongSite; } if (contextVar.newLocationPhoto) { crewSingleTechObj['photo'] = contextVar.newLocationPhoto; } if (contextVar.incorrectSiteComments) { crewSingleTechObj['notes'] = contextVar.incorrectSiteComments; } crewSingleTechObj['workOrderTaskId'] = contextVar.workOrderTaskId; if (contextVar.userName) { crewSingleTechObj['crewMemberName'] = contextVar.userName; } contextVar.crewAttendanceDetailsDataGrid.push(crewSingleTechObj);","id":"processCrewAttendanceForSingleTech","nodeType":"PROCESS"},"callCrewAttendanceWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"mdtCrewAttendanceUpdateWF","name":"callCrewAttendanceWF","description":"call the crew Attendance update wf to update the crew attedance","inputVarMap":{"crewAttendanceDetailsDataGrid":"crewAttendanceDetailsDataGrid","fetchCrewAttendanceData":"fetchCrewAttendanceData"},"id":"callCrewAttendanceWF","outputVarMap":{},"nodeType":"WORKFLOW"},"processCrewAttendanceForPartialTech":{"connectors":[{"exitPortType":"NextStep","nodeId":"callCrewAttendanceWF"}],"contextChangePermitted":true,"name":"processCrewAttendanceForPartialTech","description":"processCrewAttendanceForPartialTech","processRule":"contextVar.leadUserId = Array.isArray(contextVar.leadDetails) ? contextVar.leadDetails[0].leadUserId : contextVar.leadUserId; contextVar.crewName = Array.isArray(contextVar.crewAttendanceDetailsDataGrid) ? contextVar.crewAttendanceDetailsDataGrid[0].crewName : contextVar.crewName; contextVar.assignedToUserId = contextVar.assignedToUserId ? contextVar.assignedToUserId : contextVar['__sys__loggedIn_UserId']; contextVar.workforceCrewWorkforceUserId = contextVar.assignedToUserId; contextVar.crewAttendanceDetailsDataGrid = []; var crewPartialTechObj = {}; if (contextVar.checkInTime) { crewPartialTechObj['attendanceCheckIn'] = contextVar.checkInTime; } else if (contextVar.endTravelDate) { crewPartialTechObj['attendanceCheckIn'] = contextVar.endTravelDate; } if (contextVar.submitType == 'endTask') { if (contextVar.submitTaskTime) { crewPartialTechObj['attendanceCheckOut'] = contextVar.submitTaskTime; } } else { if (contextVar.checkOutCheckBoxForSubmitCapturedTime) { crewPartialTechObj['attendanceCheckOut'] = contextVar.checkOutCheckBoxForSubmitCapturedTime; } } if (contextVar.assignedToUserId) { crewPartialTechObj['workforceCrewWorkforceUserId'] = contextVar.assignedToUserId; } if (contextVar.endTravelLocationCoordinates) { crewPartialTechObj['siteChangeLatLong'] = contextVar.endTravelLocationCoordinates; } if (contextVar.siteChangeAddress) { crewPartialTechObj['siteChangeAddress'] = contextVar.siteChangeAddress; } if (contextVar.incorrectAddress) { crewPartialTechObj['manualCheckIn'] = contextVar.incorrectAddress; } if (contextVar['__sys__loggedIn_UserId'] == contextVar.leadUserId) { crewPartialTechObj['crewRole'] = 'Lead'; } else { crewPartialTechObj['crewRole'] = 'Member'; } if (contextVar.reasonOfwrongSite) { crewPartialTechObj['reason'] = contextVar.reasonOfwrongSite; } if (contextVar.newLocationPhoto) { crewPartialTechObj['photo'] = contextVar.newLocationPhoto; } if (contextVar.incorrectSiteComments) { crewPartialTechObj['notes'] = contextVar.incorrectSiteComments; } crewPartialTechObj['workforceCrewWorkforceUserId'] = contextVar.workforceCrewWorkforceUserId; crewPartialTechObj['crewName'] = contextVar.crewName; crewPartialTechObj['leadUserId'] = contextVar.leadUserId; crewPartialTechObj['workOrderTaskId'] = contextVar.workOrderTaskId; crewPartialTechObj['crewMemberName'] = contextVar['__sys__loggedIn_UserName']; contextVar.crewAttendanceDetailsDataGrid.push(crewPartialTechObj);","id":"processCrewAttendanceForPartialTech","nodeType":"PROCESS"},"workflowNodes":["start","processData1","logger","multiDecision","processCrewAttendanceForSingleTech","processCrewAttendanceForPartialTech","fetchCrewAttendanceForNoAccess","processCrewAttendanceForCheckOut","callCrewAttendanceWF","callCrewCheckoutWFForAll","end"],"processData1":{"connectors":[{"exitPortType":"NextStep","nodeId":"logger"}],"contextChangePermitted":true,"name":"processData1","description":"Processing site data and task details","processRule":"contextVar.logLevel = 'INFO'; contextVar.message='contextVar for crewcheckout = '+ JSON.stringify(contextVar);","id":"processData1","nodeType":"PROCESS"},"multiDecision":{"connectors":[{"condition":"((contextVar.submitType=='checkIn' || contextVar.submitType=='endTask') && contextVar.crewMobileAccess=='noAccess')","exitPortType":"NextStep","nodeId":"callCrewAttendanceWF"},{"condition":"((typeof contextVar.checkOutCheckBoxForSubmitCapturedTime != 'undefined' && contextVar.checkOutCheckBoxForSubmitCapturedTime !== '') && (contextVar.isCrewTask == true && contextVar.crewMobileAccess=='noAccess'))","exitPortType":"NextStep","nodeId":"fetchCrewAttendanceForNoAccess"},{"condition":"(contextVar.statusId == 'workOrderTaskDiscontinued')","exitPortType":"NextStep","nodeId":"callCrewCheckoutWFForAll"},{"condition":"(!contextVar.isCrewTask)","exitPortType":"NextStep","nodeId":"processCrewAttendanceForSingleTech"},{"condition":"(contextVar.crewMobileAccess=='partialAccess')","exitPortType":"NextStep","nodeId":"processCrewAttendanceForPartialTech"}],"name":"multiDecision","description":"MultiDecision","nodeType":"MULTIDECISION"},"workflowContext":{},"processCrewAttendanceForCheckOut":{"connectors":[{"exitPortType":"NextStep","nodeId":"callCrewAttendanceWF"}],"contextChangePermitted":true,"name":"processCrewAttendanceForCheckOut","description":"Process services","processRule":"if (Array.isArray(contextVar.fetchCrewAttendanceData) ) { contextVar.checkOutCheckBoxForSubmitCapturedTime = contextVar.checkOutCheckBoxForSubmitCapturedTime ? contextVar.checkOutCheckBoxForSubmitCapturedTime : new Date().toISOString().replace('T', ' ').replace('Z', ''); contextVar.fetchCrewAttendanceData.forEach(function (element) { if (Array.isArray(element.attendance) && element.attendance.length > 0) { element.attendance.forEach(function (crewElement) { if (crewElement.checkInTime && (typeof crewElement.checkOutTime == 'undefined' || crewElement.checkOutTime == '')) { crewElement.checkOutTime = contextVar.checkOutCheckBoxForSubmitCapturedTime; } if (crewElement.checkInTime  && crewElement.checkOutTime && (new Date(crewElement.checkInTime).getTime() > new Date(crewElement.checkOutTime).getTime())) { crewElement.checkOutTime = contextVar.checkOutCheckBoxForSubmitCapturedTime; } }); } }); }","id":"processCrewAttendanceForCheckOut","nodeType":"PROCESS"},"end":{"name":"end","description":"end","inputVarMap":{},"outputVarMap":{},"id":"end","nodeType":"END"}}