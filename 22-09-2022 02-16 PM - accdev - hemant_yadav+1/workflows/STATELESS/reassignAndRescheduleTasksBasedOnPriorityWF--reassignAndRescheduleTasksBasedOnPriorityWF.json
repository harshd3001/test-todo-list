{"isSecondRecommendationListPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processSecondRecommendationList"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isSecondRecommendationListPresent","description":"isSecondRecommendationListPresent","processRule":"(Array.isArray(contextVar.secondRecommendationList) && contextVar.secondRecommendationList.length > 0)","nodeType":"DECISION"},"areThereAnyTasksToUnassign":{"connectors":[{"condition":"contextVar.dispatchedBumpedOutJobs.length > 0","exitPortType":"NextStep","nodeId":"recallDispatchedTasks"},{"condition":"contextVar.scheduledBumpedOutJobs.length > 0","exitPortType":"NextStep","nodeId":"unassignScheduledJobs"},{"DefaultStep":true,"condition":"contextVar.scheduledBumpedOutJobs.length === 0","exitPortType":"NextStep","nodeId":"end"}],"name":"areThereAnyTasksToUnassign","description":"areThereAnyTasksToUnassign","nodeType":"MULTIDECISION"},"callSchedulerUpsertWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"schedulerLogModelWF","name":"callSchedulerUpsertWF","description":"callSchedulerUpsertWF","inputVarMap":{"schedulerLog":"schedulerLog"},"nodeType":"WORKFLOW"},"isFirstRecommendationListPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processFirstRecommendationList"},{"exitPortType":"FalseStep","nodeId":"recommendationCallToConsiderOnlyHighPriorityTasks"}],"name":"isFirstRecommendationListPresent","description":"isFirstRecommendationListPresent","processRule":"(Array.isArray(contextVar.firstRecommendationList) && contextVar.firstRecommendationList.length > 0)","nodeType":"DECISION"},"fetchTasksOfSelectedTech":{"filter":"((({$techCalendarV2.startTime} >= {@taskStartDate} AND {$techCalendarV2.startTime} <= {@taskEndDate}) OR ({$techCalendarV2.endTime} >= {@taskStartDate} AND {$techCalendarV2.endTime} <= {@taskEndDate}) OR ({@taskStartDate} >= {$techCalendarV2.startTime} AND {@taskStartDate} <= {$techCalendarV2.endTime}) OR ({@taskEndDate} >= {$techCalendarV2.startTime} AND {@taskEndDate} <={$techCalendarV2.endTime})) AND {$techCalendarV2.userId} = {@assignedToUserId} AND {$workOrderTask.statusId} IN {@workOrderTaskStatusesToUnassign} AND {$workOrderTaskId}!={@workOrderTaskId} AND {$workOrder.priorityPriority}>10)","models":["techCalendarV2","taskScheduleBreakdown","workOrderTask","site","workOrder"],"connectors":[{"exitPortType":"NextStep","nodeId":"areConflictingTasksPresent"}],"columns":{"workOrderTaskDueDate":"workOrderTask.dueDate","workOrderTaskTypeId":"workOrderTask.taskTypeId","statusId":"workOrderTask.statusId","timezoneOffset":"site.timezoneOffset","slaDeadline":"workOrder.deadline","taskScheduleBreakdownCount":"COUNT({$taskScheduleBreakdown.id})","workOrderTaskId":"workOrderTask.id","workOrderTaskRegionId":"site.regionId","workOrderTaskCustomerId":"workOrder.customerId","workOrderTaskWorkOrderTypeId":"workOrder.workOrderTypeId"},"name":"fetchTasksOfSelectedTech","distinct":true,"description":"fetchTasksOfSelectedTech","links":{"workOrder":"workOrderTask","site":"workOrderTask","taskScheduleBreakdown":"workOrderTask","techCalendarV2":"workOrderTask"},"inputVarMap":{"workOrderTaskDueDate":"taskEndDate","mainTaskIdToSchedule":"workOrderTaskId","workOrderTaskScheduledDate":"taskStartDate","criticalTaskAssignedToUserId":"assignedToUserId","workOrderTaskStatusesToUnassign":"workOrderTaskStatusesToUnassign"},"groupBy":"workOrderTaskId","outputVarMap":{"data":"lowPriorityTasksList"},"nodeType":"QUERY"},"areConflictingTasksPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"setDataForLowPriorityTasks"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"areConflictingTasksPresent","description":"areConflictingTasksPresent","processRule":"contextVar.lowPriorityTasksList.length>0","nodeType":"DECISION"},"processSecondRecommendationList":{"connectors":[{"exitPortType":"NextStep","nodeId":"scheduleAndAssignTaskAfterSecondRecommendationCall"}],"contextChangePermitted":true,"name":"processSecondRecommendationList","description":"processSecondRecommendationList","processRule":"{ contextVar.criticalTaskJsonObj = [{ id: contextVar.mainTaskIdToSchedule, assignedToUserId: contextVar.secondRecommendationList[0].workforceUserId, statusId: 'workOrderTaskScheduled', eventType: 'workOrderTaskScheduled' }]; contextVar.criticalTaskAssignedToUserId = contextVar.secondRecommendationList[0].workforceUserId; contextVar.criticalTaskAssigneeName = contextVar.secondRecommendationList[0].userName; contextVar.criticalTaskAssignedToUserId = contextVar.secondRecommendationList[0].workforceUserId; }","nodeType":"PROCESS"},"workflowContext":{"considerOnlyHighPriorityTasksTrue":true,"dispatchedBumpedOutJobs":[],"statusTargetModel":"schedulerLog","lowPriorityMinusMultiDayTasksList":[],"workflowCall":"recommendTechnician","leaveRecommendationConfig":{"schedulerId":"XBX010O9UN","schedulerType":"technicianLeaveTasks"},"currentTasksIndex":0,"isCriticalPriorityTask":false,"workOrderTaskDataToAutoSchedule":[],"totalTasksToBeLooped":0,"considerOnlyHighPriorityTasksFalse":false,"criticalTaskConfig":{"schedulerId":"TGIZ00OMES","schedulerType":"criticalTasksBumpedOutTasks"},"workOrderTaskStatusesToUnassign":["workOrderTaskScheduled","workOrderTaskDispatched"],"modelName":"BatchScheduler","bumpedTaskToCriticalTaskMap":{},"noOfDaysSchedulerWillSearch":3,"scheduledBumpedOutJobs":[],"schedulerLog":[],"status":"schedulerLogQueued"},"checkIfTechnicianFound":{"connectors":[{"exitPortType":"TrueStep","nodeId":"scheduleAndAssignLowPriorityTask"},{"exitPortType":"FalseStep","nodeId":"checkIfMoreRecordsToLoop"}],"name":"checkIfTechnicianFound","description":"Check if a technician found after recommendation","processRule":"contextVar.lowPriorityTaskJsonObj.length>0","nodeType":"DECISION"},"end":{"name":"end","description":"end","inputVarMap":{"criticalTaskAssigneeName":"criticalTaskAssigneeName","workOrderTaskScheduledDate":"workOrderTaskScheduledDate"},"outputVarMap":{"criticalTaskAssigneeName":"criticalTaskAssigneeName","workOrderTaskScheduledDate":"workOrderTaskScheduledDate"},"nodeType":"END"},"checkIfMoreRecordsToLoop":{"connectors":[{"exitPortType":"TrueStep","nodeId":"setCurrentRecordsData"},{"exitPortType":"FalseStep","nodeId":"areThereAnyTasksToUnassign"}],"name":"checkIfMoreRecordsToLoop","description":"Check if more records are to be looped","processRule":"(contextVar.currentTasksIndex < contextVar.totalTasksToBeLooped)","nodeType":"DECISION"},"recommendationCallToConsiderAllPriorityTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"isFirstRecommendationListPresent"}],"processId":"NBO7KO8B9T","ignoreSubContext":true,"name":"recommendationCallToConsiderAllPriorityTasks","description":"fetch recommendation list","inputVarMap":{"timezoneOffset":"timezoneOffset","workflowCall":"workflowCall","mainTaskIdToSchedule":"workOrderTaskId","considerOnlyHighPriorityTasksFalse":"considerOnlyHighPriorityTasks"},"outputVarMap":{"technicianList":"firstRecommendationList"},"nodeType":"WORKFLOW"},"processFirstRecommendationList":{"connectors":[{"exitPortType":"NextStep","nodeId":"scheduleAndAssignTask"}],"contextChangePermitted":true,"name":"processFirstRecommendationList","description":"processFirstRecommendationList","processRule":"{ contextVar.criticalTaskJsonObj = [{ id: contextVar.mainTaskIdToSchedule, assignedToUserId: contextVar.firstRecommendationList[0].workforceUserId, statusId: 'workOrderTaskScheduled', eventType: 'workOrderTaskScheduled' }]; contextVar.criticalTaskAssigneeName = contextVar.firstRecommendationList[0].userName; contextVar.criticalTaskAssignedToUserId = contextVar.firstRecommendationList[0].workforceUserId; }","nodeType":"PROCESS"},"callRecommendationWFForLowPriorityTask":{"connectors":[{"exitPortType":"NextStep","nodeId":"processLowPriorityTasksRecommendationData"}],"processId":"NBO7KO8B9T","ignoreSubContext":true,"name":"callRecommendationWFForLowPriorityTask","description":"fetch recommendation list","inputVarMap":{"lowPriorityTasktimezoneOffset":"timezoneOffset","workflowCall":"workflowCall","lowPriorityTaskworkOrderTaskId":"workOrderTaskId","considerOnlyHighPriorityTasksFalse":"considerOnlyHighPriorityTasks"},"outputVarMap":{"technicianList":"lowPriorityTaskRecommendationList"},"nodeType":"WORKFLOW"},"isCriticalPriorityTask":{"connectors":[{"exitPortType":"TrueStep","nodeId":"recommendationCallToConsiderAllPriorityTasks"},{"exitPortType":"FalseStep","nodeId":"setDataForLowPriorityTasks"}],"name":"isCriticalPriorityTask","description":"isCriticalPriorityTask","processRule":"contextVar.isCriticalPriorityTask","nodeType":"DECISION"},"processLowPriorityTasksRecommendationData":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfTechnicianFound"}],"contextChangePermitted":true,"name":"processLowPriorityTasksRecommendationData","description":"processLowPriorityTasksRecommendationData","processRule":"{ var technicianToRecommend; if (typeof contextVar.lowPriorityTaskRecommendationList !== 'undefined' && contextVar.lowPriorityTaskRecommendationList.length > 0) { for (let i = 0; i < contextVar.lowPriorityTaskRecommendationList.length; i++) { if (contextVar.lowPriorityTaskRecommendationList[i].workforceUserId !== contextVar.criticalTaskAssignedToUserId) { technicianToRecommend = contextVar.lowPriorityTaskRecommendationList[i]; break; } } } if (typeof technicianToRecommend === 'object') { contextVar.lowPriorityTaskJsonObj = [{ id: contextVar.lowPriorityTaskworkOrderTaskId, assignedToUserId: technicianToRecommend.workforceUserId, statusId: 'workOrderTaskScheduled', eventType: 'workOrderTaskScheduled' }]; } else { contextVar.lowPriorityTaskJsonObj = []; let job = contextVar.lowPriorityMinusMultiDayTasksList[contextVar.currentTasksIndex]; contextVar.workOrderTaskDataToAutoSchedule.push(job); if (job.statusId === 'workOrderTaskDispatched' || job.statusId === 'workOrderTaskScheduled') { if (job.statusId === 'workOrderTaskDispatched') { contextVar.dispatchedBumpedOutJobs.push({ 'statusId': 'workOrderTaskScheduled', 'eventType': 'workOrderTaskRecalled', 'id': job.workOrderTaskId }) } contextVar.scheduledBumpedOutJobs.push({ 'statusId': 'workOrderTaskOpen', 'eventType': 'workOrderTaskOpen', 'id': job.workOrderTaskId, 'assignedToUserId': '' }); } if (typeof contextVar.isCriticalPriorityTask !== 'undefined' && contextVar.isCriticalPriorityTask === true) { contextVar.bumpedTaskToCriticalTaskMap[contextVar.lowPriorityTaskworkOrderTaskId] = contextVar.mainTaskIdToSchedule; } } contextVar.currentTasksIndex++; }","nodeType":"PROCESS","jsEngine":"es6"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"setSchedulerData"}],"name":"start","description":"start","nodeType":"START"},"isRescheduleConflictingTasksOfTechCall":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchTasksOfSelectedTech"},{"exitPortType":"FalseStep","nodeId":"fetchTaskDetails"}],"name":"isRescheduleConflictingTasksOfTechCall","description":"isRescheduleConflictingTasksOfTechCall","processRule":"typeof contextVar.rescheduleConflictingTasksOfTech !== 'undefined' && contextVar.rescheduleConflictingTasksOfTech === true","nodeType":"DECISION"},"setSchedulerLogData":{"connectors":[{"exitPortType":"NextStep","nodeId":"callSchedulerUpsertWF"}],"contextChangePermitted":true,"name":"setSchedulerLogData","description":"setSchedulerLogData","processRule":"@S8LLK1O3B5","nodeType":"PROCESS","jsEngine":"es6"},"setCurrentRecordsData":{"connectors":[{"exitPortType":"NextStep","nodeId":"callRecommendationWFForLowPriorityTask"}],"contextChangePermitted":true,"name":"setCurrentRecordsData","description":"set the current record to be looped","processRule":"{ for (var key in contextVar.lowPriorityMinusMultiDayTasksList[contextVar.currentTasksIndex]) { contextVar['lowPriorityTask' + key] = contextVar.lowPriorityMinusMultiDayTasksList[contextVar.currentTasksIndex][key]; }} ","nodeType":"PROCESS","jsEngine":"es6"},"recommendationCallToConsiderOnlyHighPriorityTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"isSecondRecommendationListPresent"}],"processId":"NBO7KO8B9T","ignoreSubContext":true,"name":"recommendationCallToConsiderOnlyHighPriorityTasks","description":"fetch recommendation list","inputVarMap":{"considerOnlyHighPriorityTasksTrue":"considerOnlyHighPriorityTasks","timezoneOffset":"timezoneOffset","workflowCall":"workflowCall","mainTaskIdToSchedule":"workOrderTaskId"},"outputVarMap":{"technicianList":"secondRecommendationList"},"nodeType":"WORKFLOW"},"scheduleAndAssignLowPriorityTask":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfMoreRecordsToLoop"}],"processId":"workOrderTaskModelWF","name":"scheduleAndAssignLowPriorityTask","description":"scheduleAndAssignLowPriorityTask","inputVarMap":{"lowPriorityTaskJsonObj":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"},"workflowNodes":["start","setSchedulerData","isRescheduleConflictingTasksOfTechCall","fetchTaskDetails","processData","isCriticalPriorityTask","recommendationCallToConsiderAllPriorityTasks","isFirstRecommendationListPresent","processFirstRecommendationList","scheduleAndAssignTask","recommendationCallToConsiderOnlyHighPriorityTasks","isSecondRecommendationListPresent","processSecondRecommendationList","scheduleAndAssignTaskAfterSecondRecommendationCall","fetchTasksOfSelectedTech","areConflictingTasksPresent","setDataForLowPriorityTasks","checkIfMoreRecordsToLoop","checkIfAnyLowPriorityTasksToBeLooped","setCurrentRecordsData","callRecommendationWFForLowPriorityTask","processLowPriorityTasksRecommendationData","checkIfTechnicianFound","scheduleAndAssignLowPriorityTask","areThereAnyTasksToUnassign","recallDispatchedTasks","unassignScheduledJobs","areThereAnyTasksToAutoSchedule","setSchedulerLogData","callSchedulerUpsertWF","end"],"setSchedulerData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isRescheduleConflictingTasksOfTechCall"}],"contextChangePermitted":true,"name":"setSchedulerData","description":"setSchedulerData","processRule":"{ if (typeof contextVar.leaveRecommendation !== 'undefined' && contextVar.leaveRecommendation !== '' && contextVar.leaveRecommendation) { for (var key in contextVar.leaveRecommendationConfig) { contextVar[key] = contextVar.leaveRecommendationConfig[key]; } } else { for (var key in contextVar.criticalTaskConfig) { contextVar[key] = contextVar.criticalTaskConfig[key]; } } }","nodeType":"PROCESS"},"unassignScheduledJobs":{"connectors":[{"exitPortType":"NextStep","nodeId":"areThereAnyTasksToAutoSchedule"}],"processId":"workOrderTaskModelWF","name":"unassignScheduledJobs","description":"unassignScheduledJobs","inputVarMap":{"scheduledBumpedOutJobs":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"},"fetchTaskDetails":{"models":["taskScheduleBreakdown","workOrderTask","workOrder","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"processData"}],"columns":{"workOrderTaskDueDate":"workOrderTask.dueDate","workOrderTaskTypeId":"workOrderTask.taskTypeId","statusId":"workOrderTask.statusId","timezoneOffset":"site.timezoneOffset","slaDeadline":"workOrder.deadline","taskScheduleBreakdownCount":"COUNT({$taskScheduleBreakdown.id})","workOrderTaskId":"workOrderTask.id","workOrderTaskScheduledDate":"workOrderTask.scheduledDate","priority":"workOrder.priorityPriority","workOrderTaskRegionId":"site.regionId","workOrderTaskCustomerId":"workOrder.customerId","workOrderTaskWorkOrderTypeId":"workOrder.workOrderTypeId"},"distinct":true,"description":"fetchTaskDetails","inputVarMap":{"mainTaskIdToSchedule":"workOrderTaskId"},"groupBy":"workOrderTaskId","nodeType":"QUERY","filter":"{$workOrderTaskId}={@workOrderTaskId}","name":"fetchTaskDetails","links":{"workOrderTask":"workOrder","site":"workOrderTask","taskScheduleBreakdown":"workOrderTask"},"outputVarMap":{"data":"mainWorkOrderTaskData"},"getCount":true},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isCriticalPriorityTask"}],"contextChangePermitted":true,"name":"processData","description":"processData","processRule":"{ if (typeof contextVar.mainWorkOrderTaskData !== 'undefined' && contextVar.mainWorkOrderTaskData.length > 0) { for (const key in contextVar.mainWorkOrderTaskData[0]) { contextVar[key] = contextVar.mainWorkOrderTaskData[0][key]; } contextVar.isCriticalPriorityTask = parseInt(contextVar.priority) === 0 ? true : false; if (!contextVar.isCriticalPriorityTask) { contextVar.lowPriorityTasksList = JSON.parse(JSON.stringify(contextVar.mainWorkOrderTaskData)); } } }","nodeType":"PROCESS","jsEngine":"es6"},"recallDispatchedTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"unassignScheduledJobs"}],"processId":"workOrderTaskModelWF","name":"recallDispatchedTasks","description":"recallDispatchedTasks","inputVarMap":{"dispatchedBumpedOutJobs":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"},"setDataForLowPriorityTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfAnyLowPriorityTasksToBeLooped"}],"contextChangePermitted":true,"name":"setDataForLowPriorityTasks","description":"setDataForLowPriorityTasks","processRule":"{ /* Directly sending any multi-day tasks to get unassigned as they can't be sent for recommendation or to the scheduler */ contextVar.lowPriorityTasksList.forEach(function (task) { if (task.taskScheduleBreakdownCount > 1) { if (task.statusId === 'workOrderTaskDispatched') { contextVar.dispatchedBumpedOutJobs.push({ 'statusId': 'workOrderTaskScheduled', 'eventType': 'workOrderTaskRecalled', 'id': task.workOrderTaskId }) } contextVar.scheduledBumpedOutJobs.push({ 'statusId': 'workOrderTaskOpen', 'eventType': 'workOrderTaskOpen', 'id': task.workOrderTaskId, 'assignedToUserId': '' }); } else { contextVar.lowPriorityMinusMultiDayTasksList.push(task); } }); contextVar.totalTasksToBeLooped = contextVar.lowPriorityMinusMultiDayTasksList.length; }","nodeType":"PROCESS"},"scheduleAndAssignTaskAfterSecondRecommendationCall":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTasksOfSelectedTech"}],"processId":"workOrderTaskModelWF","name":"scheduleAndAssignTaskAfterSecondRecommendationCall","description":"scheduleAndAssignTaskAfterSecondRecommendationCall","inputVarMap":{"criticalTaskJsonObj":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"},"checkIfAnyLowPriorityTasksToBeLooped":{"connectors":[{"exitPortType":"TrueStep","nodeId":"setCurrentRecordsData"},{"exitPortType":"FalseStep","nodeId":"areThereAnyTasksToUnassign"}],"name":"checkIfAnyLowPriorityTasksToBeLooped","description":"checkIfAnyLowPriorityTasksToBeLooped","processRule":"contextVar.lowPriorityMinusMultiDayTasksList.length>0","nodeType":"DECISION"},"areThereAnyTasksToAutoSchedule":{"connectors":[{"exitPortType":"TrueStep","nodeId":"setSchedulerLogData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"areThereAnyTasksToAutoSchedule","description":"areThereAnyTasksToAutoSchedule","processRule":"contextVar.workOrderTaskDataToAutoSchedule.length>0","nodeType":"DECISION"},"scheduleAndAssignTask":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"workOrderTaskModelWF","name":"scheduleAndAssignTask","description":"scheduleAndAssignTask","inputVarMap":{"criticalTaskJsonObj":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"}}