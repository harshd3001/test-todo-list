{"areMoreJobsPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"jobsProcessData"},{"exitPortType":"FalseStep","nodeId":"areJobsNotEmpty"}],"name":"areMoreJobsPresent","description":"areMoreJobsPresent","processRule":"typeof contextVar.taskIdList !== 'undefined' && contextVar.taskIdList.length > 0","id":"areMoreJobsPresent","nodeType":"DECISION"},"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreJobsPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"{ contextVar.noOfBatches = Math.ceil(contextVar.taskIdList.length / contextVar.customBatchSize); }","id":"findNumberOfBatches","nodeType":"PROCESS"},"appendJobs":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreJobsPresent"}],"contextChangePermitted":true,"name":"appendJobs","description":"appendJobs","processRule":"{ if (Array.isArray(contextVar.appendJobs)) { contextVar.jobs = contextVar.jobs.concat(contextVar.appendJobs); for (const key of contextVar.appendJobs) { if (!contextVar.calendarIdArray.includes(key.calendarId)) { contextVar.calendarIdArray.push(key.calendarId); } } } }","id":"appendJobs","nodeType":"PROCESS","jsEngine":"es6"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"name":"start","description":"start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"getLoggedInUser"}],"processId":"featureLoggerWF","name":"logContextVar","description":"logContextVar","inputVarMap":{"featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"processUserData":{"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfBatches"}],"contextChangePermitted":true,"name":"processUserId","description":"processUserId","processRule":"if (typeof contextVar.currentUserDetail !=='undefined') { contextVar.currentUserId = contextVar.currentUserDetail[0].userId; };","nodeType":"PROCESS"},"upsertIntoSchedulerLog":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"processId":"schedulerLogModelWF","name":"upsertIntoSchedulerLog","description":"upsertIntoSchedulerLog","inputVarMap":{"subAction":"subAction","schedulerLog":"schedulerLog"},"outputVarMap":{},"nodeType":"WORKFLOW"},"getTaskTypeSkillData":{"models":["taskType","taskTypeSkill","skillLevel"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskTypeSkill"}],"columns":{"taskTypeId":"taskType.id","skillId":"taskTypeSkill.skillId","skillLevelRank":"skillLevel.rank","minSkillLevelId":"taskTypeSkill.minSkillLevelId"},"description":"getTaskTypeSkillData","distinct":true,"inputVarMap":{"customBatchSize":"batchSize"},"nodeType":"QUERY","filter":"{$taskType.webTask} = false AND {$taskType.crewTask} = false","name":"getTaskTypeSkillData","links":{"taskType":"taskTypeSkill","skillLevel":"taskTypeSkill"},"outputVarMap":{"data":"taskTypeSkillData"},"batchSize":"batchSize","getCount":true},"processDataToInsertInSchedulerLog":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertIntoSchedulerLog"}],"contextChangePermitted":true,"name":"processDataToInsertInSchedulerLog","description":"processDataToInsertInSchedulerLog","processRule":"@HH3MW9VU8Q","nodeType":"PROCESS","jsEngine":"es6"},"jobsProcessData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getJobsDetails"}],"contextChangePermitted":true,"name":"jobsProcessData","description":"jobsProcessData","processRule":"{ contextVar.loopArray = []; contextVar.loopArray = contextVar.taskIdList.splice(0,contextVar.customBatchSize); }","nodeType":"PROCESS"},"workflowNodes":["start","logContextVar","getLoggedInUser","processUserData","findNumberOfBatches","areMoreJobsPresent","jobsProcessData","getJobsDetails","appendJobs","areJobsNotEmpty","callFetchTechsAndSitesAvailabilityWF","getTaskTypeSkillData","processTaskTypeSkill","processDataToInsertInSchedulerLog","upsertIntoSchedulerLog","end"],"workflowContext":{"noOfBatchesTech":0,"featureName":"jitScheduler","jobs":[],"subAction":"upsertSchedulerLog","algorithmName":"ProximityOptimizerJITEngine","jobsBatchNumber":0,"customBatchSize":1000,"noOfBatches":0,"extraMsg":"JIT SCHEDULER TRIGGER WF: taskSchedulingAutoSchedulerCallWF call","commonSchedulerLogData":{"modelName":"JitScheduler","statusTargetModel":"schedulerLog","schedulerId":"MY728V9FH1","schedulerType":"manualAssign","status":"schedulerLogQueued"},"newBatchNumber":0,"schedulerLog":[],"calendarIdArray":[]},"processTaskTypeSkill":{"connectors":[{"exitPortType":"NextStep","nodeId":"processDataToInsertInSchedulerLog"}],"contextChangePermitted":true,"name":"processTaskTypeSkill","description":"processTaskTypeSkill","processRule":"{ var taskTypeMap = {}; if (Array.isArray(contextVar.taskTypeSkillData)) { for (let tasktype of contextVar.taskTypeSkillData) { if (typeof taskTypeMap[tasktype.taskTypeId] === 'undefined' || taskTypeMap[tasktype.taskTypeId] === '') { taskTypeMap[tasktype.taskTypeId] = []; } taskTypeMap[tasktype.taskTypeId].push(tasktype); } } contextVar.jobs.forEach(element => { element['taskTypeSkill'] = taskTypeMap[element.taskTypeId] || []; }); }","id":"appendJobs","nodeType":"PROCESS","jsEngine":"es6"},"callFetchTechsAndSitesAvailabilityWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"getTaskTypeSkillData"}],"processId":"fetchTechsAndSitesAvailabilityWF","ignoreSubContext":true,"name":"callFetchTechsAndSitesAvailabilityWF","description":"callFetchTechsAndSitesAvailabilityWF","inputVarMap":{"endDate":"endDate","jobs":"jobs","calendarIdArray":"calendarIdArray","startDate":"startDate"},"outputVarMap":{"jobs":"jobs","sites":"sites"},"nodeType":"WORKFLOW"},"getLoggedInUser":{"filter":"{$userId}={@userId}","models":["User"],"connectors":[{"exitPortType":"NextStep","nodeId":"processUserData"}],"columns":{"userId":"User.id"},"name":"getLoggedInUser","description":"getLoggedInUser","inputVarMap":{"{@userId}":"userId"},"outputVarMap":{"data":"currentUserDetail"},"nodeType":"QUERY"},"end":{"name":"end","description":"End","inputVarMap":{"message":"message"},"outputVarMap":{"message":"message"},"nodeType":"END"},"areJobsNotEmpty":{"connectors":[{"exitPortType":"TrueStep","nodeId":"callFetchTechsAndSitesAvailabilityWF"},{"exitPortType":"FalseStep","nodeId":"processDataToInsertInSchedulerLog"}],"name":"areJobsNotEmpty","description":"areJobsNotEmpty","processRule":"typeof contextVar.jobs !== 'undefined' && contextVar.jobs.length > 0","id":"areJobsNotEmpty","nodeType":"DECISION"},"getJobsDetails":{"models":["workOrderTask","site","workOrder","taskType"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendJobs"}],"columns":{"workOrderTypeId":"workOrder.workOrderTypeId","dueDate":"workOrderTask.dueDate","latitude":"site.latitude","estimatedTaskDuration":"workOrderTask.estimatedDuration","taskTypeMobileProcessId":"taskType.mobileProcessId","taskTypeId":"taskType.id","plannedDate":"workOrderTask.scheduledDate","calendarId":"workOrder.calendarId","statusId":"workOrderTask.statusId","regionId":"site.regionId","timezoneOffset":"site.timezoneOffset","customerId":"workOrder.customerId","siteId":"CONCAT({$workOrder.calendarId},'|',{$site.id})","id":"workOrderTask.id","longitude":"site.longitude"},"orderBy":"plannedDate ASC","outerJoinOnModel":"workOrderTask","description":"getJobsDetails","distinct":true,"inputVarMap":{"customBatchSize":"batchSize","loopArray":"loopArray"},"nodeType":"QUERY","filter":"{$id} IN {@loopArray} AND {$plannedDate} IS NOT NULL AND ({$workOrderTask.isLongDurationTask} = false OR {$workOrderTask.isLongDurationTask} IS NULL)","name":"getJobsDetails","links":{"workOrder":"workOrderTask","workOrderTask":"site","taskType":"workOrderTask"},"outputVarMap":{"data":"appendJobs"},"batchSize":"batchSize","getCount":true}}