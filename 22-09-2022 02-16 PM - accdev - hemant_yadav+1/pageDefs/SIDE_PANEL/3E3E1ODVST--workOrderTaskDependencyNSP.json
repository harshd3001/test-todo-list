{"pageContext":{},"actionOnLoad":["@actions.decisionActionTaskDependency","@actions.initialData"],"localPageContext":true,"jslib":{"bannerText":"function (pageContext) { if (pageContext.message === 'cyclic') { return pageContext.bannerText = '@lang.[\"stcacdprata\",\"Selected tasks create a circular dependency. Please review and try again.\"]'; } else if (pageContext.message === 'duplicate') { return pageContext.bannerText = '@lang.[\"dfstaeprata\",\"Dependency for selected tasks already exists. Please review and try again.\"]'; } else if (pageContext.message === 'sameEntry'){ return pageContext.bannerText = '@lang.[\"stcbaaaptaadtprata\",\"Same task cannot be added as a preceding task and a dependent task. Please review and try again.\"]'; } }","isSelectConditionHidden":"function(pageContext) { if (typeof pageContext.taskDependencyPrecedentTaskObj !== 'undefined' && pageContext.taskDependencyPrecedentTaskObj !== '' && (pageContext.taskDependencyPrecedentTaskObj.length === 2 || pageContext.taskDependencyPrecedentTaskObj.length > 2)) { return false; } else { return true; } }","dynamicHeaderText":"function(pageContext){ if( pageContext.workOrderTaskDependencyAction === 'add'){return '@lang.[\"atd1\",\"Add Task Dependency\"]';}else if(pageContext.workOrderTaskDependencyAction === 'edit' || pageContext.workGroupAction === 'editInitial'){return '@lang.[\"et3\",\"Edit Task Dependency\"]';}}","isSaveDisabled":"function (pageContext) { let dependentCheck = false, precedentCheck = false; if (pageContext.workOrderTaskDependencyAction === 'add' || pageContext.workOrderTaskDependencyAction === 'edit') { if (typeof pageContext.message === 'undefined' || pageContext.message === '' || pageContext.message !== 'noError') { dependentCheck = true; } } if (!dependentCheck && pageContext.workOrderTaskDependencyAction === 'add') { if (Array.isArray(pageContext.taskDependencyDependentTaskObj) && pageContext.taskDependencyDependentTaskObj.length > 0 && Array.isArray(pageContext.taskDependencyPrecedentTaskObj) && pageContext.taskDependencyPrecedentTaskObj.length > 0 && typeof pageContext.taskDependencyDependentStatusId !== 'undefined' && pageContext.taskDependencyDependentStatusId !== '' && typeof pageContext.taskDependencyPrecedentStatusId !== 'undefined' && pageContext.taskDependencyPrecedentStatusId !== '') { dependentCheck = false; precedentCheck = false; } else { dependentCheck = true; precedentCheck = true; } return (precedentCheck && dependentCheck); } else if (!dependentCheck && pageContext.workOrderTaskDependencyAction === 'edit') { if (typeof pageContext.taskDependencyDependentTaskObj == 'undefined' || pageContext.taskDependencyDependentTaskObj == '' || pageContext.taskDependencyDependentTaskObj.length <= 0) { dependentCheck = true; } else { if (Array.isArray(pageContext.taskDependencyDependentTaskObj) && pageContext.taskDependencyDependentTaskObj.length > 0 && (_(pageContext.initialTaskDependencyDependentTaskObj).xorWith(pageContext.taskDependencyDependentTaskObj, _.isEqual).isEmpty())) { dependentCheck = true; } else { dependentCheck = false; } } if (typeof pageContext.taskDependencyPrecedentTaskObj == 'undefined' || pageContext.taskDependencyPrecedentTaskObj == '' || pageContext.taskDependencyPrecedentTaskObj.length <= 0) { precedentCheck = true; } else { if (Array.isArray(pageContext.taskDependencyPrecedentTaskObj) && pageContext.taskDependencyPrecedentTaskObj.length > 0 && (_(pageContext.initialTaskDependencyPrecedentTaskObj).xorWith(pageContext.taskDependencyPrecedentTaskObj, _.isEqual).isEmpty())) { precedentCheck = true; } else { precedentCheck = false; } } return (precedentCheck && dependentCheck && pageContext.initialTaskDependencyDependentStatusId === pageContext.taskDependencyDependentStatusId && pageContext.initialTaskDependencyPrecedentStatusId === pageContext.taskDependencyPrecedentStatusId && pageContext.initialTaskDependencyEnforceAllDependency.toString() === pageContext.taskDependencyEnforceBoolean.toString() || (Array.isArray(pageContext.taskDependencyPrecedentTaskObj) && pageContext.taskDependencyPrecedentTaskObj.length > 1 && pageContext.taskDependencyEnforceBoolean === '') || typeof pageContext.taskDependencyDependentStatusId === 'undefined' || pageContext.taskDependencyDependentStatusId === '' || typeof pageContext.taskDependencyPrecedentStatusId === 'undefined' || pageContext.taskDependencyPrecedentStatusId === ''); } else { return true; } }","isBannerHidden":"function (pageContext) { if (typeof pageContext.message !== 'undefined' && pageContext.message !== '' && pageContext.message !== 'noError' && pageContext.bannerType === 'showBanner') {return false; } else {return true; } }"},"header":{"leftData":{"children":[{"name":"back","icon":"@iconlib.NavigationArrowBackGrey","actionOnClick":["@actions.goBackToWorkOrderSP"],"type":"buttonIcon"}]},"children":[{"buttonType":"primary","actionOnClick":["@actions.decisionActionForSave"],"disabled":"@jslib.isSaveDisabled","id":"submit","type":"button","title":"@lang.['s12','Save']"}],"title":"@jslib.dynamicHeaderText"},"body":{"children":[{"alertMessage":"@jslib.bannerText","actionOnChange":"@actions.clearBannerType","onClose":"@actions.clearBannerType","alertType":"danger","hidden":"@jslib.isBannerHidden","id":"alertMessage","type":"alert","timeout":300000},{"children":[{"actionOnChange":["@actions.validateDuplicateTaskDependency"],"isMultiSelect":true,"searchByOptions":{"dataSourceId":"query/read","sourceType":"query","dataToBeSent":{"filter":"({$id} like {@filter} OR {$name} like {@filter}) AND {$workOrderTask.workOrderId} = {@workOrderId} AND {$taskType.webTask} = false AND {$workOrderTask.statusId} !='workOrderTaskCompleted' AND {$workOrderTask.statusId} !='workOrderTaskCancelled'","models":["workOrderTask","taskType"],"columns":{"selectPrecedentTask":"CONCAT({$workOrderTask.id},' - ',{$taskType.name})","name":"taskType.name","id":"workOrderTask.id"},"inputs":{"workOrderId":"@pageContext.workOrderId"},"links":{"workOrderTask":"taskType"}}},"optLabelMap":"selectPrecedentTask","optValueMap":"id","id":"taskDependencyPrecedentTaskObj","placeholder":"@lang.['st15','Select Task']","label":"@lang.['t12','Task']","type":"selectDropdown","value":"@pageContext.taskDependencyPrecedentTaskObj"},{"actionOnChange":[],"hidden":"@jslib.isSelectConditionHidden","options":[{"name":"@lang.['aott1','All of these tasks']","id":true},{"name":"@lang.['aoott','Any one of these tasks']","id":false}],"id":"taskDependencyEnforceBoolean","optTitleKey":"name","optValueKey":"id","title":"@lang.['sc5','Select condition']","type":"select","value":"@pageContext.taskDependencyEnforceBoolean","placeHolder":"@lang.['aottaoott','All of these tasks / Any one of these tasks'']"},{"actionOnChange":[],"options":[{"name":"@lang.['navD','Dispatched']","id":"workOrderTaskDispatched"},{"name":"@lang.['inProgress','In Progress']","id":"workOrderTaskInProgress"},{"name":"@lang.['navPR','Pending Review']","id":"workOrderTaskPendingReview"},{"name":"@lang.['navC1','Completed']","id":"workOrderTaskCompleted"}],"id":"taskDependencyPrecedentStatusId","optTitleKey":"name","optValueKey":"id","type":"select","title":"@lang.['mb','Must be']","value":"@pageContext.taskDependencyPrecedentStatusId","placeHolder":"@lang.['ss10','Select status']"},{"actionOnChange":["@actions.validateDuplicateTaskDependency"],"isMultiSelect":true,"searchByOptions":{"dataSourceId":"query/read","sourceType":"query","dataToBeSent":{"filter":"({$id} like {@filter} OR {$name} like {@filter}) AND {$workOrderTask.workOrderId} = {@workOrderId} AND {$taskType.webTask} = false AND {$workOrderTask.statusId} !='workOrderTaskCompleted' AND {$workOrderTask.statusId} !='workOrderTaskCancelled'","models":["workOrderTask","taskType"],"columns":{"name":"taskType.name","id":"workOrderTask.id","selectDependentTask":"CONCAT({$workOrderTask.id},' - ',{$taskType.name})"},"inputs":{"workOrderId":"@pageContext.workOrderId"},"links":{"workOrderTask":"taskType"}}},"optLabelMap":"selectDependentTask","optValueMap":"id","id":"taskDependencyDependentTaskObj","label":"@lang.['ioftt','In order for these task']","type":"selectDropdown","value":"@pageContext.taskDependencyDependentTaskObj","placeHolder":"@lang.['st11','Select task']"},{"actionOnChange":[],"options":[{"name":"@lang.['navD','Dispatched']","id":"workOrderTaskDispatched"},{"name":"@lang.['navC1','Completed']","id":"workOrderTaskCompleted"}],"id":"taskDependencyDependentStatusId","optTitleKey":"name","optValueKey":"id","type":"select","title":"@lang.['tb','To be']","value":"@pageContext.taskDependencyDependentStatusId","placeHolder":"@lang.['ss10','Select status']"}],"label":"","id":"tasksDependencySection","type":"section"}]},"actions":[{"parentPanelRefreshRequired":true,"name":"goBackToWorkOrderSP","type":"backPanel"},{"name":"initialData","type":"script","actionDef":"function (pageContext) {pageContext.message = 'noError'; if (pageContext.workOrderTaskDependencyAction === 'add') { pageContext.taskDependencyId = ''; pageContext.taskDependencyPrecedentTask = ''; pageContext.taskDependencyPrecedentStatusId = ''; pageContext.taskDependencyDependentStatusId = ''; pageContext.taskDependencyDependentTask = ''; pageContext.taskDependencyPrecedentTaskObj = ''; pageContext.taskDependencyDependentTaskObj = ''; pageContext.taskDependencyDependentStatusName = ''; pageContext.taskDependencyPrecedentStatusTargetModel = 'workOrderTask'; pageContext.taskDependencyDependentStatusTargetModel = 'workOrderTask'; } else if (pageContext.workOrderTaskDependencyAction === 'edit') { pageContext.initialTaskDependencyPrecedentTask = pageContext.taskDependencyPrecedentTask; pageContext.initialTaskDependencyPrecedentTaskObj = JSON.parse(JSON.stringify(pageContext.taskDependencyPrecedentTaskObj)); pageContext.initialTaskDependencyPrecedentStatusId = pageContext.taskDependencyPrecedentStatusId; pageContext.initialTaskDependencyDependentTask = pageContext.taskDependencyDependentTask; pageContext.initialTaskDependencyDependentTaskObj = JSON.parse(JSON.stringify(pageContext.taskDependencyDependentTaskObj)); pageContext.initialTaskDependencyDependentStatusId = pageContext.taskDependencyDependentStatusId; pageContext.initialTaskDependencyEnforceAllDependency = pageContext.taskDependencyEnforceBoolean; }}"},{"name":"setSubActionUpsertTaskDependency","type":"script","actionDef":"function(pageContext){pageContext.subAction='upsertTaskDependency';}"},{"name":"validateDuplicateTaskDependency","type":"script","actionDef":"function (pageContext) { var flag = false; pageContext.message = 'noError'; pageContext.bannerType = ''; if (typeof pageContext.taskDependencyDependentTaskObj !== 'undefined' && pageContext.taskDependencyDependentTaskObj !== '' && typeof pageContext.taskDependencyPrecedentTaskObj !== 'undefined' && pageContext.taskDependencyPrecedentTaskObj !== '') { for (var i = 0; i < pageContext.taskDependencyPrecedentTaskObj.length; i++) { for (var j = 0; j < pageContext.taskDependencyDependentTaskObj.length; j++) { if (pageContext.taskDependencyPrecedentTaskObj[i].value === pageContext.taskDependencyDependentTaskObj[j].value) { pageContext.message = 'sameEntry'; pageContext.bannerType = 'showBanner'; flag = true; break; } } if (flag) break; } } }"},{"name":"filterEnforceAllDependency","type":"script","actionDef":"function (pageContext) { if (typeof pageContext.taskDependencyPrecedentTaskObj !== 'undefined' && pageContext.taskDependencyPrecedentTaskObj !== '' && pageContext.taskDependencyPrecedentTaskObj.length > 1){ pageContext.taskDependencyEnforceBoolean = pageContext.initialTaskDependencyEnforceAllDependency; } }"},{"name":"formatTaskDependencyData","type":"script","actionDef":"function (pageContext) { pageContext.taskDependencyPrecedentTask = []; for (var i in pageContext.taskDependencyPrecedentTaskObj) { pageContext.taskDependencyPrecedentTask.push(pageContext.taskDependencyPrecedentTaskObj[i].value); } pageContext.taskDependencyDependentTask = []; for (var i in pageContext.taskDependencyDependentTaskObj) { pageContext.taskDependencyDependentTask.push(pageContext.taskDependencyDependentTaskObj[i].value); } if (typeof pageContext.taskDependencyPrecedentTaskObj !== 'undefined' && pageContext.taskDependencyPrecedentTaskObj !== '') { if (pageContext.taskDependencyPrecedentTaskObj.length == 1) { pageContext.taskDependencyEnforceBoolean = 0; } } }"},{"falseStep":[],"trueStep":["@actions.fetchTaskPrecedentData","@actions.fetchTaskDependencyData"],"name":"decisionActionTaskDependency","type":"decision","actionDef":"function(pageContext){if(pageContext.workOrderTaskDependencyAction === 'edit'){return true;}}"},{"falseStep":[],"trueStep":["@actions.setBannerType","@actions.setSubActionUpsertTaskDependency","@actions.formatTaskDependencyData","@actions.fireProcessEvent","@actions.processDependencyData","@actions.validationTaskDependencyDecisionAction"],"name":"decisionActionForSave","type":"decision","actionDef":"function(pageContext){if(pageContext.workOrderTaskDependencyAction === 'add' || pageContext.workOrderTaskDependencyAction === 'edit'){return true;}}"},{"falseStep":[],"trueStep":["@actions.goBackToWorkOrderSP"],"name":"validationTaskDependencyDecisionAction","type":"decision","actionDef":"function(pageContext){if(typeof pageContext.message !== 'undefined' && pageContext.message !== '' && pageContext.message === 'noError'){ return true; } else{ return false;} }"},{"name":"fetchTaskDependencyData","outputVarMap":{"data":"@pageContext.taskDependencyDependentTaskObj"},"type":"query","actionDef":{"filter":"{$value} IN {@value}","models":["workOrderTask","taskType"],"columns":{"label":"CONCAT({$workOrderTask.id},' - ',{$taskType.name})","value":"workOrderTask.id"},"inputs":{"value":"@pageContext.taskDependencyDependentTask"},"links":{"workOrderTask":"taskType"}}},{"name":"fetchTaskPrecedentData","outputVarMap":{"data":"@pageContext.taskDependencyPrecedentTaskObj"},"type":"query","actionDef":{"filter":"{$value} IN {@value}","models":["workOrderTask","taskType"],"columns":{"label":"CONCAT({$workOrderTask.id},' - ',{$taskType.name})","value":"workOrderTask.id"},"inputs":{"value":"@pageContext.taskDependencyPrecedentTask"},"links":{"workOrderTask":"taskType"}}},{"name":"clearBannerType","type":"script","actionDef":"function(pageContext){pageContext.bannerType = '';}"},{"name":"setBannerType","type":"script","actionDef":"function(pageContext){pageContext.bannerType = 'showBanner';}"},{"name":"processDependencyData","type":"script","actionDef":"function (pageContext) {if (typeof pageContext.dependencyData !== 'undefined' && pageContext.dependencyData !== '') { pageContext.message = pageContext.dependencyData[0].data[0].message; pageContext.bannerType = 'showBanner';}}"},{"endPoint":"event/start","name":"fireProcessEvent","outputVarMap":{"data":"@pageContext.dependencyData"},"type":"api","actionDef":{"data":[{"eventId":"workOrderTaskDependencyProcessEvent","contextVar":{"subAction":"@pageContext.subAction","taskDependency":[{"enforceAllDependency":"@pageContext.taskDependencyEnforceBoolean","precedentTask":"@pageContext.taskDependencyPrecedentTask","precedentStatusId":"@pageContext.taskDependencyPrecedentStatusId","dependentTask":"@pageContext.taskDependencyDependentTask","dependentStatusId":"@pageContext.taskDependencyDependentStatusId","id":"@pageContext.taskDependencyId","workOrderId":"@pageContext.workOrderId","dependentStatusTargetModel":"@pageContext.taskDependencyDependentStatusTargetModel","precedentStatusTargetModel":"@pageContext.taskDependencyPrecedentStatusTargetModel"}]}}]}}]}