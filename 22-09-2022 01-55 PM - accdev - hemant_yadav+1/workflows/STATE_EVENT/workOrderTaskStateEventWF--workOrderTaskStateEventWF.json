{"deleteTaskDependency":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"workOrderTaskDependencyWF","name":"deleteTaskDependency","description":"deleteTaskDependency","inputVarMap":{"subAction":"subAction","taskDependency":"taskDependency"},"outputVarMap":{},"nodeType":"WORKFLOW"},"insertIntoAimlRecs":{"modelName":"AimlRecs","connectors":[{"exitPortType":"NextStep","nodeId":"setWorkOrderTaskRecommendationData"}],"multirecord":true,"name":"insertAimlRecs","description":"insertAimlRecs","inputVarMap":{"recommendations":"data"},"id":"insertIntoAimlRecs","outputVarMap":{"data":"aimlRecsData"},"nodeType":"MODEL","operation":4},"callWorkOrderTaskRecommendationModelWF":{"eventId":"workOrderTaskRecommendationModelProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"workOrderStatusUpdateDecision"}],"ignoreSubContext":true,"name":"callWorkOrderTaskRecommendationModelWF","description":"callWorkOrderTaskRecommendationModelWF","inputVarMap":{"workOrderTaskRecommendation":"workOrderTaskRecommendation"},"outputVarMap":{},"nodeType":"PUBLISH"},"isTaskAutoScheduling":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"fetchCurrentUser"}],"name":"isTaskAutoScheduling","description":"isTaskAutoScheduling","processRule":"typeof contextVar.data !== 'undefined' && contextVar.data.statusId === contextVar.workOrderTaskAutoScheduling","nodeType":"DECISION"},"checkWorkOrderTaskStatus":{"connectors":[{"condition":"contextVar.workOrderTaskStatusId === 'workOrderTaskCompleted' && contextVar.webTask === false","exitPortType":"NextStep","nodeId":"processResultForAssets"},{"condition":"contextVar.workOrderTaskStatusId === 'workOrderTaskCancelled'","exitPortType":"NextStep","nodeId":"fetchTaskDependencyData"},{"condition":"contextVar.workOrderTaskStatusId===contextVar.workOrderTaskPendingReview","exitPortType":"NextStep","nodeId":"updateInventoryForPendingReviewTask"},{"DefaultStep":true,"condition":"contextVar.workOrderTaskStatusId===''","exitPortType":"NextStep","nodeId":"end"}],"name":"checkWorkOrderTaskStatus","description":"checkWorkOrderTaskStatus","nodeType":"MULTIDECISION"},"processResultForInventory":{"connectors":[{"exitPortType":"NextStep","nodeId":"isInventoryToBeUpdated"}],"contextChangePermitted":true,"name":"processResultForInventory","description":"processResultForInventory","processRule":"@FWFLKROPDL","nodeType":"PROCESS","jsEngine":"es6"},"processInstanceChangeDecision":{"connectors":[{"exitPortType":"TrueStep","nodeId":"changeProcessInstance"},{"exitPortType":"FalseStep","nodeId":"checkWorkOrderTaskStatus"}],"name":"processInstanceChangeDecision","description":"processInstanceChangeDecision","processRule":"((contextVar.webTask !== true) && ((contextVar.deleteZProcessInstanceReqd === true  && (typeof contextVar.workOrderTaskProcessInstanceId !== 'undefined' && contextVar.workOrderTaskProcessInstanceId !== '')) || contextVar.createZProcessInstanceReqd === true))","nodeType":"DECISION"},"fetchCurrentUser":{"filter":"{$userId}={@userId}","models":["User"],"connectors":[{"exitPortType":"NextStep","nodeId":"processModelData"}],"columns":{"userName":"User.name","userId":"User.id"},"name":"fetchCurrentUser","description":"fetchCurrentUser","inputVarMap":{"{@userId}":"userId"},"outputVarMap":{"data":"currentUserDetail"},"nodeType":"QUERY"},"workflowContext":{"workOrderTaskCompleted":"workOrderTaskCompleted","subAction":"deleteTaskDependency","workOrderTaskReopened":"workOrderTaskReopened","workOrderCancelled":"workOrderCancelled","recommendations":[{"priorityModel":"AimlRecs","aimlRecTypeId":"criticalPriorityTaskAlert","rejected":false,"notified":false,"accepted":false,"recommendation":"Critical task created: taskIdToBeReplaced. Accept this recommendation to schedule and assign it on priority.","priority":0,"done":false,"expired":false,"addDecisionToTraining":false,"recommendContext":{},"superseded":false,"status":"recommended"}],"workOrderTaskDispatched":"workOrderTaskDispatched","workOrderTaskPendingReview":"workOrderTaskPendingReview","workOrderTaskOpen":"workOrderTaskOpen","workOrderTaskCancelled":"workOrderTaskCancelled","workOrderCompleted":"workOrderCompleted","workOrderInProgress":"workOrderInProgress","workOrderDraft":"workOrderDraft","workOrderTaskApproved":"workOrderTaskApproved","workOrderTaskDraft":"workOrderTaskDraft","workOrderTaskPendingApproval":"workOrderTaskPendingApproval","workOrderTaskDiscontinued":"workOrderTaskDiscontinued","workOrderScheduled":"workOrderScheduled","workOrderTaskRejected":"workOrderTaskRejected","workOrderTaskSiteChangeRequest":"workOrderTaskSiteChangeRequest","workOrderPendingReview":"workOrderPendingReview","workOrderTaskInTransit":"workOrderTaskInTransit","workOrderTaskAutoScheduling":"workOrderTaskAutoScheduling","workOrderTaskDelayed":"workOrderTaskDelayed","workOrderOpen":"workOrderOpen","workOrderTaskIncident":"workOrderTaskIncident","workOrderTaskScheduled":"workOrderTaskScheduled","workOrderTaskInProgress":"workOrderTaskInProgress"},"workOrderTaskStateEventZRule":{"connectors":[{"exitPortType":"NextStep","nodeId":"isTaskCriticalAndInOpenStatus"}],"contextChangePermitted":true,"name":"workOrderTaskStateEventZRule","description":"workOrderTaskStateEventZRule","processRule":"@3P3Z9E87AC","nodeType":"PROCESS"},"processTaskTypeData":{"connectors":[{"exitPortType":"NextStep","nodeId":"workOrderTaskStateEventZRule"}],"contextChangePermitted":true,"name":"processTaskTypeData","description":"processTaskTypeData","processRule":"{if(typeof contextVar.taskTypeData !== 'undefined' && contextVar.taskTypeData !== ''){contextVar.webTask=contextVar.taskTypeData[0].taskTypeWebTask; contextVar.mobileProcessId=contextVar.taskTypeData[0].taskTypeMobileProcessId; contextVar.crewTask=contextVar.taskTypeData[0].taskTypeCrewTask; contextVar.crewMobileAccess=contextVar.taskTypeData[0].taskTypeCrewMobileAccess; contextVar.crewMobileProcessId=contextVar.taskTypeData[0].taskTypeCrewMobileProcessId;}}","nodeType":"PROCESS"},"isSendFurtherRecommendationFalse":{"connectors":[{"exitPortType":"TrueStep","nodeId":"setRecommendationData"},{"exitPortType":"FalseStep","nodeId":"workOrderStatusUpdateDecision"}],"name":"isSendFurtherRecommendationFalse","description":"isSendFurtherRecommendationFalse","processRule":"(typeof contextVar.workOrderTaskRecommendation === 'undefined' || contextVar.workOrderTaskRecommendation.length === 0)","nodeType":"DECISION"},"setRecommendationData":{"connectors":[{"exitPortType":"NextStep","nodeId":"insertIntoAimlRecs"}],"contextChangePermitted":true,"name":"setRecommendationData","description":"setRecommendationData","processRule":"{ contextVar.recommendations[0].recommendation = contextVar.recommendations[0].recommendation.replace('taskIdToBeReplaced', contextVar.workOrderTaskId); contextVar.recommendations[0].recommendContext = { workOrderTaskId: contextVar.workOrderTaskId }; }","nodeType":"PROCESS","jsEngine":"es6"},"getSiteData":{"filter":"{$site.id} = {@workOrderTaskSiteId}","models":["site"],"connectors":[{"exitPortType":"NextStep","nodeId":"processSiteData"}],"columns":{"address":"site.address","latitude":"site.latitude","longitude":"site.longitude"},"name":"getSiteData","description":"getSiteData","inputVarMap":{"workOrderTaskSiteId":"workOrderTaskSiteId"},"outputVarMap":{"data":"siteData"},"nodeType":"QUERY"},"checkTaskDependencyData":{"connectors":[{"exitPortType":"TrueStep","nodeId":"deleteTaskDependency"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"checkTaskDependencyData","description":"checkTaskDependencyData","processRule":"(typeof contextVar.taskDependency !== 'undefined' && contextVar.taskDependency !== '' && contextVar.taskDependency.length !== 0)","nodeType":"DECISION"},"setWorkOrderTaskRecommendationData":{"connectors":[{"exitPortType":"NextStep","nodeId":"callWorkOrderTaskRecommendationModelWF"}],"contextChangePermitted":true,"name":"setWorkOrderTaskRecommendationData","description":"setWorkOrderTaskRecommendationData","processRule":"{ contextVar.workOrderTaskRecommendation = [{ recommendationType: 'criticalTask', workOrderTaskId: contextVar.workOrderTaskId, sendFurtherRecommendation: false, aimlRecsId: contextVar.aimlRecsData[0].id }]; }","nodeType":"PROCESS","jsEngine":"es6"},"isTaskCriticalAndInOpenStatus":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchWorkOrderTaskRecommendation"},{"exitPortType":"FalseStep","nodeId":"isSetAllSendFurtherRecommendationToTrue"}],"name":"isTaskCriticalAndInOpenStatus","description":"isTaskCriticalAndInOpenStatus","processRule":"parseInt(contextVar.workOrder.priorityPriority) === 0 && (contextVar.workOrderTaskStatusId === contextVar.workOrderTaskOpen || contextVar.workOrderTaskStatusId === contextVar.workOrderTaskReopened) && !contextVar.crewTask && !contextVar.webTask && !contextVar.isLongDurationTask","nodeType":"DECISION"},"end":{"name":"end","description":"end","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"changeProcessInstance":{"eventId":"zprocessInstanceProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"checkWorkOrderTaskStatus"}],"contextChangePermitted":true,"name":"changeProcessInstance","description":"changeProcessInstance","inputVarMap":{},"outputVarMap":{},"nodeType":"PUBLISH","captureOutput":true},"processResultForAssets":{"connectors":[{"exitPortType":"NextStep","nodeId":"processResultForInventory"}],"processId":"HRN8JCOZ9F","name":"processResultForAssets","description":"processResultForAssets","inputVarMap":{"workOrderTaskSiteId":"workOrderTaskSiteId","workOrderTaskId":"workOrderTaskId","workOrderTaskResult":"workOrderTaskResult"},"outputVarMap":{"taskDependencyData":"taskDependency"},"nodeType":"WORKFLOW"},"isSetAllSendFurtherRecommendationToTrue":{"connectors":[{"exitPortType":"TrueStep","nodeId":"callSetTasksSendFurtherRecommendationToTrueWF"},{"exitPortType":"FalseStep","nodeId":"workOrderStatusUpdateDecision"}],"name":"isSetAllSendFurtherRecommendationToTrue","description":"isSetAllSendFurtherRecommendationToTrue","processRule":"contextVar.setAllSendFurtherRecommendationToTrue === true","nodeType":"DECISION"},"workOrderStatusUpdateDecision":{"connectors":[{"exitPortType":"TrueStep","nodeId":"updateWorkOrderStatus"},{"exitPortType":"FalseStep","nodeId":"autoCheckOutCrewMembersDecision"}],"name":"workOrderStatusUpdateDecision","description":"workOrderStatusUpdateDecision","processRule":"(contextVar.updateReqd === true)","nodeType":"DECISION"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"isTaskAutoScheduling"}],"name":"start","description":"start","nodeType":"START"},"getTaskTypeData":{"filter":"{$taskType.id} = {@workOrderTaskTaskTypeId}","models":["taskType"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskTypeData"}],"columns":{"taskTypeWebTask":"taskType.webTask","taskTypeMobileProcessId":"taskType.mobileProcessId","taskTypeCrewMobileAccess":"taskType.crewMobileAccess","taskTypeCrewMobileProcessId":"taskType.crewMobileProcessId","taskTypeCrewTask":"taskType.crewTask"},"name":"getTaskTypeData","description":"getTaskTypeData","inputVarMap":{"workOrderTaskTaskTypeId":"workOrderTaskTaskTypeId"},"outputVarMap":{"data":"taskTypeData"},"nodeType":"QUERY"},"isInventoryToBeUpdated":{"connectors":[{"exitPortType":"TrueStep","nodeId":"upsertWorkOrderInventory"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isInventoryToBeUpdated","description":"isInventoryToBeUpdated","processRule":"(contextVar.workOrderInventory.length > 0)","nodeType":"DECISION"},"processSiteData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getTaskTypeData"}],"contextChangePermitted":true,"name":"processSiteData","description":"processSiteData","processRule":"{if(Array.isArray(contextVar.siteData) && contextVar.siteData.length > 0){contextVar.siteLatitude = contextVar.siteData[0].latitude;contextVar.siteLongitude = contextVar.siteData[0].longitude;contextVar.siteAddress = contextVar.siteData[0].address;}}","nodeType":"PROCESS"},"workflowNodes":["start","isTaskAutoScheduling","fetchCurrentUser","processModelData","getWorkOrderData","getSiteData","processSiteData","getWorkOrderTaskData","getTaskTypeData","processTaskTypeData","workOrderTaskStateEventZRule","isTaskCriticalAndInOpenStatus","fetchWorkOrderTaskRecommendation","isSendFurtherRecommendationFalse","setRecommendationData","insertIntoAimlRecs","setWorkOrderTaskRecommendationData","callWorkOrderTaskRecommendationModelWF","workOrderStatusUpdateDecision","isSetAllSendFurtherRecommendationToTrue","callSetTasksSendFurtherRecommendationToTrueWF","updateWorkOrderStatus","autoCheckOutCrewMembersDecision","autoCheckOutCrewMembers","processInstanceChangeDecision","changeProcessInstance","checkWorkOrderTaskStatus","updateInventoryForPendingReviewTask","processResultForAssets","processResultForInventory","isInventoryToBeUpdated","upsertWorkOrderInventory","fetchTaskDependencyData","checkTaskDependencyData","deleteTaskDependency","end"],"getWorkOrderTaskData":{"filter":"{$workOrderId} = {@workOrderId}","models":["workOrderTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"getSiteData"}],"columns":{"statusId":"workOrderTask.statusId","id":"workOrderTask.id","workOrderId":"workOrderTask.workOrderId"},"name":"getWorkOrderTaskData","description":"getWorkOrderTaskData","inputVarMap":{"workOrderId":"workOrderId"},"outputVarMap":{"data":"workOrderTaskData"},"nodeType":"QUERY"},"updateWorkOrderStatus":{"modelName":"workOrder","connectors":[{"exitPortType":"NextStep","nodeId":"autoCheckOutCrewMembersDecision"}],"multirecord":true,"name":"upsertWorkOrder","description":"Save work order to work order Model","inputVarMap":{"jsonObj":"data"},"outputVarMap":{"data":"data"},"nodeType":"MODEL","operation":4},"upsertWorkOrderInventory":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"workOrderInventoryWF","name":"upsertWorkOrderInventory","description":"upsertWorkOrderInventory","inputVarMap":{"workOrderId":"workOrderId","workOrderInventorySubAction":"subAction","workOrderInventory":"workOrderInventory"},"outputVarMap":{"taskDependencyData":"taskDependency"},"nodeType":"WORKFLOW"},"fetchWorkOrderTaskRecommendation":{"filter":"{$workOrderTaskRecommendation.workOrderTaskId} = {@workOrderTaskId} AND {$workOrderTaskRecommendation.recommendationType} = 'criticalTask' AND {$workOrderTaskRecommendation.sendFurtherRecommendation} = false","models":["workOrderTaskRecommendation"],"connectors":[{"exitPortType":"NextStep","nodeId":"isSendFurtherRecommendationFalse"}],"columns":{"id":"workOrderTaskRecommendation.id"},"name":"fetchWorkOrderTaskRecommendation","description":"fetchWorkOrderTaskRecommendation","inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"links":{},"outputVarMap":{"data":"workOrderTaskRecommendation"},"nodeType":"QUERY","getCount":true},"autoCheckOutCrewMembers":{"connectors":[{"exitPortType":"NextStep","nodeId":"processInstanceChangeDecision"}],"processId":"autoCheckOutCrewMembersWF","name":"autoCheckOutCrewMembers","description":"autoCheckOutCrewMembers","inputVarMap":{"checkOutTime":"checkOutTime","workOrderTaskId":"workOrderTaskId"},"outputVarMap":{},"nodeType":"WORKFLOW"},"updateInventoryForPendingReviewTask":{"eventId":"updateInventoryForPendingReviewTaskProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"ignoreSubContext":true,"name":"updateInventoryForPendingReviewTask","description":"updateInventoryForPendingReviewTask","inputVarMap":{"workOrderTaskAssignedToUserId":"workOrderTaskAssignedToUserId","workOrderTaskPendingReview":"workOrderTaskPendingReview","workOrderTaskId":"workOrderTaskId","workOrderId":"workOrderId"},"outputVarMap":{},"nodeType":"PUBLISH"},"callSetTasksSendFurtherRecommendationToTrueWF":{"eventId":"setTasksSendFurtherRecommendationToTrueProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"workOrderStatusUpdateDecision"}],"ignoreSubContext":true,"name":"callSetTasksSendFurtherRecommendationToTrueWF","description":"Workflow to fetch all recommendations of a task and set sendFurtherRecommendation to true for all","inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{},"nodeType":"PUBLISH"},"autoCheckOutCrewMembersDecision":{"connectors":[{"exitPortType":"TrueStep","nodeId":"autoCheckOutCrewMembers"},{"exitPortType":"FalseStep","nodeId":"processInstanceChangeDecision"}],"name":"autoCheckOutCrewMembersDecision","description":"autoCheckOutCrewMembersDecision","processRule":"(typeof contextVar.autoCheckoutReqd !='undefined' && contextVar.crewTask == true  && contextVar.autoCheckoutReqd == true)","nodeType":"DECISION"},"processModelData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getWorkOrderData"}],"contextChangePermitted":true,"name":"processModelData","description":"processModelData","processRule":"{ contextVar.checkOutTime = contextVar.data.modifiedDate; contextVar.workOrderTaskId = contextVar.data.id; contextVar.workOrderTaskSiteId = contextVar.data.siteId; contextVar.workOrderTaskStatusId = contextVar.data.statusId; contextVar.workOrderTaskCancellationReason = contextVar.data.cancellationReason; contextVar.isLongDurationTask = false; if (typeof contextVar.data.isLongDurationTask !== 'undefined' && contextVar.data.isLongDurationTask !== '') { contextVar.isLongDurationTask = contextVar.data.isLongDurationTask; } contextVar.workOrderTaskCancellationNotes = contextVar.data.cancellationNotes; contextVar.workOrderTaskTaskTypeId = contextVar.data.taskTypeId; contextVar.workOrderTaskAssignedToUserId = contextVar.data.assignedToUserId; contextVar.workOrderTaskScheduledDate = contextVar.data.scheduledDate; contextVar.workOrderTaskDueDate = contextVar.data.dueDate; contextVar.workOrderTaskProcessInstanceId = contextVar.data.processInstanceId; contextVar.workOrderTaskEstimatedDuration = Number(contextVar.data.estimatedDuration) / 60; contextVar.workOrderTaskRecver = contextVar.data.recver; contextVar.workOrderId = contextVar.data.workOrderId; contextVar.workOrderTaskReOpenCount = contextVar.data.reopenCount; contextVar.workOrderTaskAssignedToCrewId = contextVar.data.assignedToCrewId; contextVar.timeTakenForTask = (new Date(contextVar.workOrderTaskDueDate).getTime() - new Date(contextVar.workOrderTaskScheduledDate).getTime()) / (1000 * 60 * 60); contextVar.workOrderTaskResult = contextVar.data.result; }","nodeType":"PROCESS"},"fetchTaskDependencyData":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkTaskDependencyData"}],"processId":"workOrderTaskDependencyDataFetchWF","name":"fetchTaskDependencyData","description":"fetchTaskDependencyData","inputVarMap":{"workOrderTaskId":"workOrderTaskId","workOrderId":"workOrderId"},"outputVarMap":{"taskDependencyData":"taskDependency"},"nodeType":"WORKFLOW"},"getWorkOrderData":{"filter":"{$id} = {@workOrderId}","models":["workOrder"],"connectors":[{"exitPortType":"NextStep","nodeId":"getWorkOrderTaskData"}],"columns":{"priorityPriority":"workOrder.priorityPriority","statusId":"workOrder.statusId","id":"workOrder.id"},"name":"getWorkOrderData","description":"getWorkOrderData","inputVarMap":{"workOrderId":"workOrderId"},"outputVarMap":{"data":"workOrderData"},"nodeType":"QUERY"}}