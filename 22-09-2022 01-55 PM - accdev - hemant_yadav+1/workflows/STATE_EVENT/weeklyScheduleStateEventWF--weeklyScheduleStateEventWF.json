{"queryWeeklyScheduleData":{"filter":"{$calendarId}={@calendarId}","models":["weeklySchedule"],"connectors":[{"exitPortType":"NextStep","nodeId":"processData"}],"columns":{"schedule":"weeklySchedule.schedule","calendarId":"weeklySchedule.calendarId"},"name":"queryWeeklyScheduleData","description":"Provide some description for your query","inputVarMap":{"calendarId":"calendarId"},"id":"queryWeeklyScheduleData","outputVarMap":{"data":"weeklyScheduleData"},"nodeType":"QUERY"},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"updateCalendarData"}],"contextChangePermitted":true,"name":"processData","description":"Use this for processing data in workflow","processRule":"{function createDateString(time) { var dateTime; var today = new Date().toISOString().replace('T', ' ').replace('Z', '').split(' ')[0]; dateTime = today + ' ' + time; return dateTime; } contextVar.totalWorkingDuration = 0; contextVar.weeklyScheduleData.forEach(function (element) { element.schedule.forEach(function (data) { contextVar.totalWorkingDuration += Math.floor(Math.abs(((new Date(createDateString(data.start))).getTime() - (new Date(createDateString(data.end))).getTime()) / 1000) / 60); }); }); contextVar.calendarData[0].totalWorkingDuration = contextVar.totalWorkingDuration;}","id":"processData","nodeType":"PROCESS"},"processWeeklyScheduleData":{"connectors":[{"exitPortType":"NextStep","nodeId":"queryCalendarData"}],"contextChangePermitted":true,"name":"processWeeklyScheduleData","description":"Use this for processing data in workflow","processRule":"{contextVar.calendarId = contextVar.data.calendarId;contextVar.schedule = contextVar.data.schedule;}","id":"processWeeklyScheduleData","nodeType":"PROCESS"},"queryCalendarData":{"filter":"{$id}={@calendarId}","models":["calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"isCalendarPresent"}],"columns":{"recver":"calendar.recver","id":"calendar.id","totalWorkingDuration":"calendar.totalWorkingDuration"},"name":"queryCalendarData","description":"Provide some description for your query","inputVarMap":{"calendarId":"calendarId"},"outputVarMap":{"data":"calendarData"},"nodeType":"QUERY"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processWeeklyScheduleData"}],"name":"start","description":"Start","id":"start","nodeType":"START"},"updateCalendarData":{"modelName":"calendar","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"multirecord":true,"name":"updateCalendarData","description":"Provide some description for your model node","inputVarMap":{"calendarData":"data"},"id":"updateCalendarData","outputVarMap":{},"nodeType":"MODEL","operation":4},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"id":"end","nodeType":"END"},"isCalendarPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"queryWeeklyScheduleData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isCalendarPresent","description":"isCalendarPresent","processRule":"(typeof contextVar.calendarData !=='undefined' && contextVar.calendarData.length>0)","nodeType":"DECISION"},"workflowNodes":["start","processWeeklyScheduleData","queryCalendarData","isCalendarPresent","processData","updateCalendarData","queryWeeklyScheduleData","end"]}