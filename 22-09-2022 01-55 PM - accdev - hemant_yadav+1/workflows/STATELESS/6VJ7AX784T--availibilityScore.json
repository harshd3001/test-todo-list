{"fetchTaskDetails":{"filter":"{$taskId}={@idFilter} AND {$status} != 'workOrderTaskCompleted'","models":["taskType","workOrderTask","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"isTaskPresent"}],"columns":{"estimatedTaskDuration":"workOrderTask.estimatedDuration","latitude":"site.latitude","destinations":"CONCAT({$site.latitude},',',{$site.longitude},'|')","assignToUserId":"workOrderTask.assignedToUserId","taskStartTime":"workOrderTask.scheduledDate","taskTypeId":"workOrderTask.taskTypeId","taskType":"taskType.name","site":"site.name","modifiedDate":"workOrderTask.modifiedDate","siteId":"site.id","id":"workOrderTask.id","taskId":"workOrderTask.id","status":"workOrderTask.statusId","longitude":"site.longitude","taskEndTime":"DATE_ADD({$workOrderTask.scheduledDate}, INTERVAL CAST({$workOrderTask.estimatedDuration} AS UNSIGNED) MINUTE)"},"name":"fetchTaskDetails","description":"fetchWorkOrderTaskData","inputVarMap":{"workOrderTaskId":"idFilter"},"outputVarMap":{"data":"taskData"},"id":"fetchTaskDetails","nodeType":"QUERY"},"workflowContext":{"featureValue":0},"processTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"queryFreeTechs"}],"contextChangePermitted":true,"name":"processTaskData","description":"processTaskData","processRule":"{contextVar.startTime = contextVar.taskData[0].taskStartTime; contextVar.endTime = contextVar.taskData[0].taskEndTime;}","id":"processTaskData","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTaskDetails"}],"name":"start","description":"Start","id":"start","nodeType":"START"},"isTaskPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processTaskData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isTaskPresent","description":"isTaskPresent","processRule":"(contextVar.taskData != '' && contextVar.taskData.length == 1)","id":"isTaskPresent","nodeType":"DECISION"},"end":{"name":"end","description":"End","inputVarMap":{"unassignedTask":"data"},"outputVarMap":{"unassignedTask":"data"},"id":"end","nodeType":"END"},"workflowNodes":["start","queryTechAvailibility","fetchTaskDetails","isTaskPresent","processAvailibility","processTaskData","queryFreeTechs","end"],"queryTechAvailibility":{"filter":"","models":["User","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"processAvailibility"}],"columns":{"wid":"workforce.userId","availability":"[workforce]->[calendar]->[weeklySchedule].(day,closingTime,openingTime)","id":"User.id","userName":"User.name","status":"User.status"},"name":"queryTechAvailibility","outerJoinOnModel":"workforce","distinct":true,"description":"Query Technician Availibility","id":"queryTechAvailibility","outputVarMap":{"data":"techQuery"},"nodeType":"QUERY","getCount":true},"queryFreeTechs":{"models":["User","workOrderTask","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"queryTechAvailibility"}],"columns":{"startTime":"workOrderTask.scheduledDate","id":"workOrderTask.id","endTime":"DATE_ADD({$workOrderTask.scheduledDate}, INTERVAL CAST({$workOrderTask.estimatedDuration} AS UNSIGNED) MINUTE)","userId":"workforce.userId","estimatedDuration":"workOrderTask.estimatedDuration"},"description":"Query Free Technicians","outerJoinOnModel":"User","distinct":true,"inputVarMap":{"startTime":"startTime","endTime":"endTime"},"nodeType":"QUERY","filter":"((DATE_ADD({$workOrderTask.scheduledDate}, INTERVAL CAST({$workOrderTask.estimatedDuration} AS UNSIGNED) MINUTE)) NOT BETWEEN {@startTime} AND {@endTime} || (DATE_ADD({$workOrderTask.scheduledDate}, INTERVAL CAST({$workOrderTask.estimatedDuration} AS UNSIGNED) MINUTE)) IS NULL) AND ({$startTime} NOT BETWEEN {@startTime} AND {@endTime} || {$startTime} is NULL)","name":"queryFreeTechs","id":"queryFreeTechs","outputVarMap":{"data":"queryFreeTechs"},"getCount":true},"processAvailibility":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processAvailibility","description":"processing technician Availibility","processRule":"{function getIndexOf(e, t) { for (var a = 0; a < e.length; a++) if (e[a].id == t) return a; return -1; } function getIndexOfDay(e, t) { for (var a = 0; a < e.length; a++) if (e[a].day == t) return a; return -1; } var techId = contextVar.techId; var queryFreeTechs = contextVar.queryFreeTechs ? contextVar.queryFreeTechs : []; var techAvailibility = contextVar.techQuery; var technicianId; var timeAvailableForTheDay = 0; var found  = false; var taskStartTime = new String(contextVar.startTime); var taskEndTime = new String(contextVar.endTime); taskStartTime = new Date(taskStartTime); taskEndTime = new Date(taskEndTime); var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']; var dayOfTask = days[taskStartTime.getDay()]; var techUtilization = {}; var calendarData = techAvailibility[getIndexOf(techAvailibility, techId)]['availability']; var dayIndex = getIndexOfDay(calendarData,dayOfTask); var taskDayOpeningTime = new Date(calendarData[dayIndex]['openingTime']); var taskDayClosingTime = new Date(calendarData[dayIndex]['closingTime']); if(taskDayOpeningTime.getDate() != taskDayClosingTime.getDate()){ var sTime = new Date(taskEndTime); sTime.setDate(sTime.getDate() - 1 ); taskDayOpeningTime.setDate(sTime.getDate()); } else{ taskDayOpeningTime.setDate(taskEndTime.getDate()); } taskDayClosingTime.setDate(taskEndTime.getDate()); queryFreeTechs.forEach(function(techObj) { var stDate,enDate; technicianId = techObj.userId; if(techId == technicianId){ found  = true; } if(typeof techObj['startTime'] !== 'undefined'){ stDate = new Date(techObj['startTime']); enDate = new Date(techObj['endTime']); if( (stDate >= taskDayOpeningTime && stDate <= taskDayClosingTime)  &&  (enDate >= taskDayOpeningTime && enDate <= taskDayClosingTime) ){ if(typeof techUtilization[technicianId] !== 'undefined'){ techUtilization[technicianId] = techUtilization[technicianId] + Math.round((enDate.getTime() - stDate.getTime()) / 60000); }else{ techUtilization[technicianId] = Math.round((enDate.getTime() - stDate.getTime()) / 60000); } } } else{ techUtilization[technicianId] = 0; } }); if(found){ var low, high, techValue; var validTechListArr = []; for(var key in techUtilization){ if(key == techId){ techValue = techUtilization[key]; } validTechListArr.push(techUtilization[key]); } validTechListArr.sort(function (a, b) { return a - b; }); if (validTechListArr.length > 1) { low = validTechListArr[0]; high = Math.round((taskDayClosingTime.getTime() - taskDayOpeningTime.getTime()) / 60000); contextVar.featureValue = typeof techValue != 'undefined' ? (5 - (5 * (techValue - low) / (high - low))) : 0; } }else{ contextVar.featureValue = 0; }}","id":"processAvailibility","nodeType":"PROCESS"}}