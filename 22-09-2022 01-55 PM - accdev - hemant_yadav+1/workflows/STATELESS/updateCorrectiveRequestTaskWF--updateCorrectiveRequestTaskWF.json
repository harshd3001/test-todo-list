{"addRequestTask":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"addRequestTask","description":"","inputVarMap":{"result":"result","pendingReviewStatus":"statusId","assignedToUserId":"assignedToUserId","taskTypeId":"taskTypeId","statusTargetModel":"statusTargetModel","estimatedTaskDuration":"estimatedDuration","dueDate":"dueDate","checkInTime":"scheduledDate","siteId":"siteId","workOrderId":"workOrderId"},"id":"addRequestTask","outputVarMap":{"data":"siteChangeTask","id":"siteChangeId"},"nodeType":"MODEL","operation":1},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"createCorrectiveTaskRequest"}],"contextChangePermitted":true,"name":"processData","description":"Processing  data and task details","processRule":"{contextVar.result=[];contextVar.resultValues={};contextVar.resultValues.reasonOfCorrectiveTaskRequest=contextVar.reasonOfCorrectiveTaskRequest;contextVar.resultValues.assetsDataGrid=contextVar.assetsDataGrid;contextVar.resultValues.correctiveTaskRequestPhotoFirst=contextVar.correctiveTaskRequestPhotoFirst;contextVar.resultValues.correctiveTaskRequestPhotoSecond=contextVar.correctiveTaskRequestPhotoSecond;contextVar.result.push(contextVar.resultValues);contextVar.taskTypeId = contextVar.taskTypeIdData[0].id;contextVar.checkInTime = contextVar.checkInTime || new Date().toISOString().replace('T', ' ').replace('Z',''); if(contextVar.newSiteAddress !='' && typeof contextVar.newSiteAddress !='undefined'){ contextVar.newSiteLat = contextVar.newSiteAddress.latitude; contextVar.newSiteLng = contextVar.newSiteAddress.longitude; contextVar.newSiteAddressText = contextVar.newSiteAddress.address;}}","id":"processData","nodeType":"PROCESS"},"workflowContext":{"result":[],"siteChangeStatus":"workOrderTaskSiteChangeRequest","pendingReviewStatus":"workOrderTaskPendingReview","taskTypeId":"taskTypeId","statusTargetModel":"workOrderTask","resultValues":{}},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"queryCorrectiveTaskRequestId"}],"name":"start","description":"Start","id":"start","nodeType":"START"},"createCorrectiveTaskRequest":{"connectors":[{"exitPortType":"TrueStep","nodeId":"addRequestTask"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"createCorrectiveTaskRequest","description":"","processRule":"(contextVar.taskTypeIdData[0].name == 'Corrective Task Request' && typeof contextVar.result != 'undefined' && contextVar.result != 'undefined' && contextVar.result != '' && contextVar.result.length > 0 && typeof contextVar.result[0].reasonOfCorrectiveTaskRequest != 'undefined' && contextVar.result[0].reasonOfCorrectiveTaskRequest != '')","id":"createCorrectiveTaskRequest","nodeType":"DECISION"},"end":{"name":"End","description":"end","inputVarMap":{},"outputVarMap":{},"id":"end","nodeType":"END"},"workflowNodes":["start","queryCorrectiveTaskRequestId","processData","createCorrectiveTaskRequest","addRequestTask","end"],"queryCorrectiveTaskRequestId":{"filter":"{$name}='Corrective Task Request'","models":["taskType"],"connectors":[{"exitPortType":"NextStep","nodeId":"processData"}],"columns":{"name":"name","id":"id"},"name":"queryCorrectiveTaskRequestId","description":"Provide some description for your query","id":"queryCorrectiveTaskRequestId","outputVarMap":{"data":"taskTypeIdData"},"nodeType":"QUERY"}}