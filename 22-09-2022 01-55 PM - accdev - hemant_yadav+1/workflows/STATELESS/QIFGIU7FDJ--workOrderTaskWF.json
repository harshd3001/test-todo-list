{"duplicateMultiDecisionNode":{"connectors":[{"condition":"contextVar.subAction==='duplicateWorkOrder' || (contextVar.subAction === 'upsertWorkOrder' && typeof contextVar.initialWorkOrderId !== 'undefined' && contextVar.initialWorkOrderId !== '')","exitPortType":"NextStep","nodeId":"fetchWorkOrderTask"},{"condition":"contextVar.subAction==='upsertWorkOrderTask'","exitPortType":"NextStep","nodeId":"statusCheck"},{"condition":"contextVar.subAction==='cancelWorkOrderTask' || contextVar.subAction==='openWorkOrderTask'","exitPortType":"NextStep","nodeId":"createFilterForCancellation"},{"condition":" (contextVar.subAction === 'upsertWorkOrder' && typeof contextVar.workOrderTemplateId !== 'undefined' && contextVar.workOrderTemplateId !== '')","exitPortType":"NextStep","nodeId":"fetchWorkOrderTemplateTask"},{"condition":"contextVar.subAction==='duplicateWorkOrderTask'","exitPortType":"NextStep","nodeId":"fetchWorkOrderTaskToDuplicate"},{"condition":"contextVar.subAction==='deleteWorkOrderTask'","exitPortType":"NextStep","nodeId":"deleteWorkOrderTask"},{"DefaultStep":true,"condition":"contextVar.subAction===''","exitPortType":"NextStep","nodeId":"end"}],"name":"duplicateMultiDecisionNode","description":"decide between duplicating/templating or normal transaction","nodeType":"MULTIDECISION"},"cancellationWorkOrderTaskExistsDecision":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processWorkOrderTaskCancellationData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"cancellationWorkOrderTaskExistsDecision","description":"Checked if the workOrderTasksData has tasks","processRule":"(contextVar.workOrderTasksData.length > 0)","nodeType":"DECISION"},"fetchCustomerSite":{"filter":"{$siteCustomerId}={@id}","models":["site"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkOrderTaskData"}],"columns":{"siteName":"site.name","siteId":"site.id","siteCustomerId":"site.customerId"},"name":"fetchCustomerSite","description":"fetchCustomerSite","inputVarMap":{"customerId":"id"},"outputVarMap":{"data":"workOrderCustomerSiteData"},"batchSize":2,"nodeType":"QUERY"},"processWorkOrderTaskId":{"connectors":[{"exitPortType":"NextStep","nodeId":"isAppointmentWindowToBeUpdated"}],"contextChangePermitted":true,"name":"processWorkOrderTaskId","description":"processWorkOrderTaskId","processRule":"if (typeof contextVar.data !== 'undefined' && contextVar.data.length>0) { contextVar.workOrderTaskId = contextVar.data[0].id; } ","nodeType":"PROCESS"},"processWorkOrderTaskCancellationData":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertWorkOrderTask"}],"contextChangePermitted":true,"name":"processWorkOrderTaskCancellationData","description":"processWorkOrderTaskCancellationData","processRule":"if (typeof contextVar.workOrderTasksData !== 'undefined' && contextVar.workOrderTasksData !== '') { for (var b = 0; b < contextVar.workOrderTasksData.length; b++) { if (contextVar.subAction === 'cancelWorkOrderTask') { contextVar.workOrderTasksData[b].statusId = 'workOrderTaskCancelled'; contextVar.workOrderTasksData[b].eventType = 'workOrderTaskCancelled'; contextVar.workOrderTasksData[b].cancellationReason = contextVar.workOrderTaskCancellationReason; contextVar.workOrderTasksData[b].cancellationNotes = contextVar.workOrderTaskCancellationNotes; if (Array.isArray(contextVar.currentUserDetail) && contextVar.currentUserDetail.length > 0) { contextVar.workOrderTasksData[b].cancelledBy = contextVar.currentUserDetail[0].userId; } else { contextVar.workOrderTasksData[b].cancelledBy = ''; } contextVar.workOrderTasksData[b].cancelledDate = new Date().toISOString().replace('T', ' ').replace('Z', ''); contextVar.workOrderTasksData[b].completedDate = new Date().toISOString().replace('T', ' ').replace('Z', ''); } else if (contextVar.subAction === 'openWorkOrderTask') { contextVar.workOrderTasksData[b].statusId = 'workOrderTaskOpen'; contextVar.workOrderTasksData[b].assignedToUserId = ''; } contextVar.workOrderTasksData[b].statusTargetModel = 'workOrderTask'; } contextVar.workOrderTaskJsonObj = contextVar.workOrderTasksData }","nodeType":"PROCESS"},"deleteWorkOrderTask":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"multirecord":true,"name":"deleteWorkOrderTask","description":"delete from workOrderTask model","inputVarMap":{"workOrderTaskJsonObj":"data"},"nodeType":"MODEL","operation":3},"upsertWorkOrderTask":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"processWorkOrderTaskId"}],"multirecord":true,"name":"upsertWorkOrderTask","description":"Save task to workOrderTask Model","inputVarMap":{"workOrderTaskJsonObj":"data"},"outputVarMap":{"data":"data"},"nodeType":"MODEL","operation":4},"fetchWorkOrderTemplateTask":{"filter":"{$workOrderTemplateTask.workOrderTemplateId} = {@workOrderTemplateId}","models":["workOrderTemplateTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"workOrderTaskExistsMultiDecisionNode"}],"columns":{"taskTypeId":"workOrderTemplateTask.taskTypeId","enableServices":"workOrderTemplateTask.enableServices","services":"workOrderTemplateTask.services","estimatedDuration":"workOrderTemplateTask.estimatedDuration","workOrderTemplateTaskId":"workOrderTemplateTask.id"},"name":"fetchWorkOrderTemplateTask","description":"fetchWorkOrderTemplateTask","inputVarMap":{"workOrderTemplateId":"workOrderTemplateId"},"outputVarMap":{"data":"workOrderTasksData"},"nodeType":"QUERY"},"isAppointmentWindowToBeUpdated":{"connectors":[{"exitPortType":"TrueStep","nodeId":"updateAppointmentWindow"},{"exitPortType":"FalseStep","nodeId":"taskScheduleBreakdownMultiDecisionNode"}],"name":"isAppointmentWindowToBeUpdated","description":"isAppointmentWindowToBeUpdated","processRule":"contextVar.subAction==='upsertWorkOrderTask' && contextVar.subActionAW==='updateAW'","nodeType":"DECISION"},"taskScheduleBreakdownMultiDecisionNode":{"connectors":[{"exitPortType":"FalseStep","nodeId":"decisionNodeToCheckStatus"},{"exitPortType":"TrueStep","nodeId":"workOrderTaskScheduleBreakdownWF"}],"name":"taskScheduleBreakdownMultiDecisionNode","description":"Checked if the taskScheduleBreakdown data is there","processRule":"(typeof contextVar.taskScheduleBreakdown !== 'undefined' && contextVar.taskScheduleBreakdown!=='')","nodeType":"DECISION"},"fetchCurrentUser":{"filter":"{$userId}={@userId}","models":["User"],"connectors":[{"exitPortType":"NextStep","nodeId":"localisationCheck"}],"columns":{"userName":"User.name","userId":"User.id"},"name":"fetchCurrentUser","description":"fetchCurrentUser","inputVarMap":{"{@userId}":"userId"},"outputVarMap":{"data":"currentUserDetail"},"nodeType":"QUERY"},"isDuplicateWorkOrderSubAction":{"connectors":[{"condition":"contextVar.subAction==='duplicateWorkOrder'","exitPortType":"NextStep","nodeId":"fetchWorkOrderInventory"},{"condition":"contextVar.workOrderTaskAction==='add' || contextVar.workOrderTaskAction==='edit'","exitPortType":"NextStep","nodeId":"end"},{"DefaultStep":true,"condition":"contextVar.subAction !== 'duplicateWorkOrder'","exitPortType":"NextStep","nodeId":"fetchTemplateTasksDependency"}],"name":"isDuplicateWorkOrderSubAction","description":"isDuplicateWorkOrderSubAction","nodeType":"MULTIDECISION"},"workOrderTaskScheduleBreakdownWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"statusCheckDecisionNode"}],"contextChangePermitted":true,"processId":"taskScheduleBreakdownModelWF","name":"workOrderTaskScheduleBreakdownWF","description":"workOrderTaskScheduleBreakdownWF","inputVarMap":{"taskScheduleBreakdown":"taskScheduleBreakdown","workOrderTaskAction":"workOrderTaskAction"},"outputVarMap":{},"nodeType":"WORKFLOW"},"mapTaskIdAndworkOrderTemplateTaskId":{"connectors":[{"exitPortType":"NextStep","nodeId":"insertWorkOrderTaskDependency"}],"contextChangePermitted":true,"name":"mapTaskIdAndworkOrderTemplateTaskId","description":"mapTaskIdAndworkOrderTemplateTaskId","processRule":"@674L8ODW2S","nodeType":"PROCESS"},"insertWorkOrderTaskDependency":{"modelName":"taskDependency","connectors":[{"exitPortType":"NextStep","nodeId":"fetchWorkOrderInventory"}],"multirecord":true,"name":"insertWorkOrderTaskDependency","description":"insertWorkOrderTaskDependency","inputVarMap":{"tasksDependencyData":"data"},"outputVarMap":{},"nodeType":"MODEL","operation":1},"createFilterForCancellation":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTasksForCancellation"}],"contextChangePermitted":true,"name":"createFilterForCancellation","description":"createFilterForCancellation","processRule":"{if (contextVar.subAction === 'cancelWorkOrderTask') { if(contextVar.workOrderId != '' && typeof contextVar.workOrderId != 'undefined'){ contextVar.filter = '({$workOrderId} = {@workOrderId})'; contextVar.statusFilter='{$statusId} not in {@cancellWorkOrderStatuses}'; } else if (contextVar.siteId != '' && typeof contextVar.siteId != 'undefined') { contextVar.filter = '({$siteId} = {@siteId})'; contextVar.statusFilter='{$statusId} in {@deactivateCustomerStatuses}' } else if (contextVar.customerId != '' && typeof contextVar.customerId != 'undefined') { contextVar.filter = '({$customerId} = {@customerId})'; contextVar.statusFilter='{$statusId} in {@deactivateCustomerStatuses}' } } else if (contextVar.subAction === 'openWorkOrderTask') { contextVar.filter = '({$assignedToUserId} = {@workforceUserId})'; contextVar.statusFilter='{$statusId} in {@deactivateTechncianStatuses}' } contextVar.filter = contextVar.filter + ' AND ' + contextVar.statusFilter;}","nodeType":"PROCESS"},"fetchTaskCancellationReason":{"filter":"{$listOptionAnswer.id}= {@id} ","models":["listOptionAnswer"],"connectors":[{"exitPortType":"NextStep","nodeId":"processZRule"}],"columns":{"listOptionAnswerOptionText":"listOptionAnswer.answerOptionText"},"name":"fetchTaskCancellationReason","description":"fetchTaskCancellationReason","inputVarMap":{"workOrderTaskReason":"id"},"outputVarMap":{"data":"cancellationData"},"nodeType":"QUERY"},"insertWorkOrderInventory":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"workOrderInventoryWF","name":"insertWorkOrderInventory","description":"insertWorkOrderInventory","inputVarMap":{"workOrderInventoryData":"workOrderInventory"},"outputVarMap":{},"nodeType":"WORKFLOW"},"workOrderInventoryDataDecision":{"connectors":[{"exitPortType":"TrueStep","nodeId":"mapCatalogAndWorkOrderInventory"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"workOrderInventoryDataDecision","description":"workOrderInventoryDataDecision","processRule":" Array.isArray(contextVar.workOrderInventoryData) && contextVar.workOrderInventoryData.length>0","nodeType":"DECISION"},"processCustomerId":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfCustomerIdExists"}],"contextChangePermitted":true,"name":"processCustomerId","description":"processCustomerId","processRule":"{if(typeof contextVar.workOrder !== 'undefined' && contextVar.workOrder !== '') {contextVar.customerId = contextVar.workOrder[0].customerId }};","nodeType":"PROCESS"},"checkIfCustomerIdExists":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchCustomerSite"},{"exitPortType":"FalseStep","nodeId":"processWorkOrderTaskData"}],"name":"checkIfCustomerIdExists","description":"Check if cusomerId  exists","processRule":"(typeof contextVar.customerId !== 'undefined' && contextVar.customerId !== '')","nodeType":"DECISION"},"workflowContext":{"workFlowName":"workorderTaskWF","deactivateTechncianStatuses":["workOrderTaskReopened","workOrderTaskScheduled","workOrderTaskDispatched"],"deactivateCustomerStatuses":["workOrderTaskDraft","workOrderTaskOpen","workOrderTaskReopened","workOrderTaskScheduled","workOrderTaskDispatched"],"cancellWorkOrderStatuses":["workOrderTaskCompleted","workOrderTaskCancelled","workOrderTaskRejected"]},"fetchTemplateTasksDependency":{"filter":"{$workOrderId}={@workOrderTemplateId}  ","models":["templateTaskDependency"],"connectors":[{"exitPortType":"NextStep","nodeId":"templateTasksDependencyDecision"}],"columns":{"enforceAllDependency":"templateTaskDependency.enforceAllDependency","precedentStatusId":"templateTaskDependency.precedentStatusId","precedentTask":"templateTaskDependency.precedentTask","dependentTask":"templateTaskDependency.dependentTask","workOrderId":"templateTaskDependency.workOrderTemplateId","id":"templateTaskDependency.id","dependentStatusId":"templateTaskDependency.dependentStatusId","dependentStatusTargetModel":"templateTaskDependency.dependentStatusTargetModel","precedentStatusTargetModel":"templateTaskDependency.precedentStatusTargetModel"},"name":"fetchTemplateTasksDependency","description":"fetchTemplateTasksDependency","inputVarMap":{"workOrderTemplateId":"workOrderTemplateId"},"outputVarMap":{"data":"tasksDependencyData"},"nodeType":"QUERY"},"processWorkOrderTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertWorkOrderTask"}],"contextChangePermitted":true,"name":"processWorkOrderTaskData","description":"processWorkOrderTaskData","processRule":"{if (typeof contextVar.workOrderTasksData !== 'undefined' && contextVar.workOrderTasksData !== '') { for (var b = 0; b < contextVar.workOrderTasksData.length; b++) { contextVar.workOrderTasksData[b].workOrderId = contextVar.workOrderId; contextVar.workOrderTasksData[b].statusId = 'workOrderTaskDraft'; contextVar.workOrderTasksData[b].statusTargetModel = 'workOrderTask'; contextVar.workOrderTasksData[b].id = ''; if (typeof contextVar.workOrderCustomerSiteData !== 'undefined' && contextVar.workOrderCustomerSiteData !== '' && contextVar.workOrderCustomerSiteData.length === 1) { contextVar.workOrderTasksData[b].siteId = contextVar.workOrderCustomerSiteData[0].siteId } } } contextVar.workOrderTaskJsonObj = contextVar.workOrderTasksData;}","nodeType":"PROCESS"},"templateTasksDependencyDecision":{"connectors":[{"exitPortType":"TrueStep","nodeId":"mapTaskIdAndworkOrderTemplateTaskId"},{"exitPortType":"FalseStep","nodeId":"fetchWorkOrderInventory"}],"name":"templateTasksDependencyDecision","description":"templateTasksDependencyDecision","processRule":"(Array.isArray(contextVar.tasksDependencyData) && contextVar.tasksDependencyData.length > 0)","nodeType":"DECISION"},"decisionNodeToCheckStatus":{"connectors":[{"exitPortType":"TrueStep","nodeId":"upsertWorkOrderTaskData"},{"exitPortType":"FalseStep","nodeId":"isDuplicateWorkOrderSubAction"}],"name":"decisionNodeToCheckStatus","description":"decisionNodeToCheckStatus","processRule":"contextVar.requiredStatus","nodeType":"DECISION"},"end":{"name":"end","description":"end","inputVarMap":{"data":"data"},"outputVarMap":{"data":"data"},"position":{"x":717,"y":-74},"nodeType":"END"},"processZRule":{"connectors":[{"exitPortType":"NextStep","nodeId":"duplicateMultiDecisionNode"}],"contextChangePermitted":true,"name":"processZRule ","description":"processZRule","processRule":"@GFHHIU7MF9","nodeType":"PROCESS"},"fetchWorkOrderInventory":{"filter":"{$workOrderId}={@initialWorkOrderId}","models":["workOrderInventory","catalog"],"connectors":[{"exitPortType":"NextStep","nodeId":"workOrderInventoryDataDecision"}],"columns":{"unitPrice":"catalog.unitPrice","estimatedQty":"sum({$workOrderInventory.estimatedQty})","catalogId":"workOrderInventory.catalogId","workOrderTaskId":"workOrderInventory.workOrderTaskId","workOrderId":"workOrderInventory.workOrderId","actualQty":"workOrderInventory.actualQty","customerPrice":"catalog.customerPrice"},"name":"fetchWorkOrderInventory","description":"fetchWorkOrderInventory","inputVarMap":{"initialWorkOrderId":"initialWorkOrderId"},"links":{"workOrderInventory":"catalog"},"groupBy":"catalogId,workOrderTaskId","outputVarMap":{"data":"workOrderInventoryData"},"nodeType":"QUERY"},"mapCatalogAndWorkOrderInventory":{"connectors":[{"exitPortType":"NextStep","nodeId":"insertWorkOrderInventory"}],"contextChangePermitted":true,"name":"mapCatalogAndWorkOrderInventory","description":"mapCatalogAndWorkOrderInventory","processRule":"contextVar.initialWorkOrderTaskId = []; contextVar.workOrderInventoryData.forEach(function (ele, i) { if (typeof ele.workOrderTaskId !== 'undefined' && ele.workOrderTaskId !== '' && ele.workOrderTaskId !== '-' && contextVar.initialWorkOrderTaskId.indexOf(contextVar.workOrderInventoryData[i].workOrderTaskId) == -1) { contextVar.initialWorkOrderTaskId.push(ele.workOrderTaskId); } }); contextVar.workOrderInventoryData.forEach(function (val, i) { contextVar.workOrderInventoryData[i].id = ''; contextVar.workOrderInventoryData[i].workOrderId = contextVar.workOrderId; delete contextVar.workOrderInventoryData[i].actualQty; contextVar.initialWorkOrderTaskIdLength = contextVar.initialWorkOrderTaskId.length; for (var inc = 0; inc < contextVar.initialWorkOrderTaskIdLength; inc++) { if (contextVar.workOrderInventoryData[i].workOrderTaskId === contextVar.initialWorkOrderTaskId[inc]) { contextVar.workOrderInventoryData[i].workOrderTaskId = contextVar.data[inc].id; } } });","nodeType":"PROCESS"},"statusCheck":{"connectors":[{"exitPortType":"TrueStep","nodeId":"taskScheduleBreakdownMultiDecisionNode"},{"exitPortType":"FalseStep","nodeId":"upsertWorkOrderTask"}],"name":"statusCheck","description":"statusCheck","processRule":"contextVar.requiredStatus","nodeType":"DECISION"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchCurrentUser"}],"name":"start","description":"start","position":{"x":-411,"y":-69},"nodeType":"START"},"fetchWorkOrderTask":{"filter":"{$workOrderId} = {@initialWorkOrderId} AND {$taskTypeWebTask} = false","models":["workOrderTask","taskType"],"connectors":[{"exitPortType":"NextStep","nodeId":"workOrderTaskExistsMultiDecisionNode"}],"columns":{"taskTypeId":"workOrderTask.taskTypeId","notes":"workOrderTask.notes","taskTypeWebTask":"taskType.webTask","deployable":"workOrderTask.deployable","acInternalNotes":"workOrderTask.acInternalNotes","enableServices":"workOrderTask.enableServices","workOrderId":"workOrderTask.workOrderId","services":"workOrderTask.services","estimatedDuration":"workOrderTask.estimatedDuration"},"name":"fetchWorkOrderTask","description":"Fetch task details of selected workOrderTemplate workorderID","inputVarMap":{"initialWorkOrderId":"initialWorkOrderId"},"outputVarMap":{"data":"workOrderTasksData"},"nodeType":"QUERY"},"statusCheckDecisionNode":{"connectors":[{"exitPortType":"TrueStep","nodeId":"upsertWorkOrderTaskData"},{"exitPortType":"FalseStep","nodeId":"isDuplicateWorkOrderSubAction"}],"name":"statusCheckDecisionNode","description":"statusCheckDecisionNode","processRule":"contextVar.requiredStatus","nodeType":"DECISION"},"workOrderTaskExistsMultiDecisionNode":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processCustomerId"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"workOrderTaskExistsMultiDecisionNode","description":"Checked if the workOrderTasksData has tasks","processRule":"(contextVar.workOrderTasksData.length > 0)","nodeType":"DECISION"},"workflowNodes":["start","fetchCurrentUser","localisationCheck","fetchTaskCancellationReason","processZRule","duplicateMultiDecisionNode","fetchWorkOrderTemplateTask","processCustomerId","checkIfCustomerIdExists","fetchCustomerSite","fetchWorkOrderTask","fetchTemplateTasksDependency","templateTasksDependencyDecision","fetchWorkOrderTaskToDuplicate","workOrderTaskExistsMultiDecisionNode","processWorkOrderTaskData","statusCheck","upsertWorkOrderTask","processWorkOrderTaskId","isAppointmentWindowToBeUpdated","updateAppointmentWindow","taskScheduleBreakdownMultiDecisionNode","decisionNodeToCheckStatus","workOrderTaskScheduleBreakdownWF","upsertWorkOrderTaskData","isDuplicateWorkOrderSubAction","statusCheckDecisionNode","mapTaskIdAndworkOrderTemplateTaskId","insertWorkOrderTaskDependency","fetchWorkOrderInventory","workOrderInventoryDataDecision","mapCatalogAndWorkOrderInventory","insertWorkOrderInventory","deleteWorkOrderTask","createFilterForCancellation","fetchTasksForCancellation","cancellationWorkOrderTaskExistsDecision","processWorkOrderTaskCancellationData","end"],"localisationCheck":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchTaskCancellationReason"},{"exitPortType":"FalseStep","nodeId":"processZRule"}],"name":"localisationCheck","description":"localisationCheck","processRule":"contextVar.subAction ==='upsertWorkOrderTask' && (contextVar.workOrderTaskReason !== '' || typeof contextVar.workOrderTaskReason !== 'undefined')","nodeType":"DECISION"},"upsertWorkOrderTaskData":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"isDuplicateWorkOrderSubAction"}],"multirecord":true,"name":"upsertWorkOrderTaskData","description":"Save task to workOrderTask Model","inputVarMap":{"workOrderTaskJsonObj":"data"},"outputVarMap":{"data":"data"},"nodeType":"MODEL","operation":4},"updateAppointmentWindow":{"connectors":[{"exitPortType":"NextStep","nodeId":"taskScheduleBreakdownMultiDecisionNode"}],"contextChangePermitted":true,"processId":"workOrderTaskAppointmentWindowModelWF","ignoreSubContext":true,"name":"updateAppointmentWindow","description":"updateAppointmentWindow","inputVarMap":{"workOrderTaskAppointmentWindow":"workOrderTaskAppointmentWindow","workOrderTaskId":"workOrderTaskId"},"outputVarMap":{},"nodeType":"WORKFLOW"},"fetchTasksForCancellation":{"filter":"filter","models":["workOrderTask","workOrder"],"connectors":[{"exitPortType":"NextStep","nodeId":"cancellationWorkOrderTaskExistsDecision"}],"columns":{"assignedToUserId":"workOrderTask.assignedToUserId","instanceId":"workOrderTask.processInstanceId","statusId":"workOrderTask.statusId","cancellationReason":"workOrderTask.cancellationReason","customerId":"workOrder.customerId","siteId":"workOrderTask.siteId","id":"workOrderTask.id","workOrderId":"workOrderTask.workOrderId"},"name":"fetchTasksForCancellation","outerJoinOnModel":"workOrderTask","description":"Fetch task to be cancelled","inputVarMap":{"filter":"filter","deactivateTechncianStatuses":"deactivateTechncianStatuses","deactivateCustomerStatuses":"deactivateCustomerStatuses","customerId":"customerId","siteId":"siteId","cancellWorkOrderStatuses":"cancellWorkOrderStatuses","workOrderId":"workOrderId","workforceUserId":"workforceUserId"},"outputVarMap":{"data":"workOrderTasksData"},"nodeType":"QUERY"},"fetchWorkOrderTaskToDuplicate":{"filter":"{$workOrderId} = {@workOrderId} && {$id}={@workOrderTaskId}","models":["workOrderTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"workOrderTaskExistsMultiDecisionNode"}],"columns":{"taskTypeId":"workOrderTask.taskTypeId","notes":"workOrderTask.notes","deployable":"workOrderTask.deployable","acInternalNotes":"workOrderTask.acInternalNotes","enableServices":"workOrderTask.enableServices","workOrderId":"workOrderTask.workOrderId","id":"workOrderTask.id","services":"workOrderTask.services","estimatedDuration":"workOrderTask.estimatedDuration"},"name":"fetchWorkOrderTaskToDuplicate","description":"Fetch task details of selected workOrderTask Id ","inputVarMap":{"workOrderTaskId":"workOrderTaskId","workOrderId":"workOrderId"},"outputVarMap":{"data":"workOrderTasksData"},"nodeType":"QUERY"}}