{"calculateCrowFlyDistance":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"calculateCrowFlyDistance","description":"Use this for processing data in workflow","processRule":"{ contextVar.crowDistanceData = { 'destination_addresses': [], 'rows': [], 'origin_addresses': [] }; var avgCrowSpeed = 48.2803; function calcStraightLineDistance(techLat, techLng, siteLat, siteLng) { var R = 6371; var dLat = (siteLat - techLat) * Math.PI / 180; var dLon = (siteLng - techLng) * Math.PI / 180; var techLat = (techLat) * Math.PI / 180; var siteLat = (siteLat) * Math.PI / 180; var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(techLat) * Math.cos(siteLat); var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)); var d = R * c; return d; } var splitOrigin = contextVar.origins.split('|'); if (splitOrigin[splitOrigin.length - 1] == '') { splitOrigin.pop(); } var siteLocation = contextVar.destinations.split('|'); siteLocation = siteLocation[0].split(','); splitOrigin.forEach(function (obj) { var techLocation = obj.split(','); var distanceinKms = calcStraightLineDistance(techLocation[0], techLocation[1], siteLocation[0], siteLocation[1]); var distance = distanceinKms * 1000; var duration = (distanceinKms / avgCrowSpeed) * 60 * 60; var durationInMins = duration / 60; contextVar.crowDistanceData.rows.push({ 'elements': [{ 'distance': { 'text': distanceinKms.toFixed(0) + ' Km', 'value': distance }, 'duration': { 'text': durationInMins.toFixed(0) + ' mins', 'value': duration }, 'status': 'OK' }] }); contextVar.crowDistanceData.origin_addresses.push(obj); }); contextVar.crowDistanceData.destination_addresses = siteLocation; }","id":"calculateCrowFlyDistance","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"calculateCrowFlyDistance"}],"name":"start","description":"Start","id":"start","nodeType":"START"},"end":{"name":"end","description":"End","inputVarMap":{"crowDistanceData":"crowDistanceData"},"outputVarMap":{"crowDistanceData":"crowDistanceData"},"id":"end","nodeType":"END"},"workflowNodes":["start","calculateCrowFlyDistance","end"]}