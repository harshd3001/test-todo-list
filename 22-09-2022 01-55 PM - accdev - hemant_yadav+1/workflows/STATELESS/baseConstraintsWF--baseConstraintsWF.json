{"processTechnicianAvailabilityCheckZRule":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processTechnicianAvailabilityCheckZRule","description":"processTechnicianAvailabilityCheckZRule","processRule":"@OZWO75A528","nodeType":"PROCESS"},"processMobileTechnicianData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isMobileTechnician"}],"contextChangePermitted":true,"name":"processMobileTechnicianData","description":"processMobileTechnicianData","processRule":"{ if (typeof contextVar.mobileTechnician === 'undefined' || contextVar.mobileTechnician.length <= 0) { contextVar.isValid = false; }  }","nodeType":"PROCESS"},"processTechnicianOvertimeData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isTechnicianOvertime"}],"contextChangePermitted":true,"name":"processTechnicianOvertimeData","description":"processTechnicianOvertimeData","processRule":"{ var taskStartDate = contextVar.workOrderTaskData[0].workOrderTaskScheduledDate; var taskEndDate = contextVar.workOrderTaskData[0].workOrderTaskTaskEndTime; var compareDates = function (date1, date2) { return (new Date(date1) >= new Date(date2)); }; contextVar.isOvertime = false; if (typeof contextVar.technicianOvertimeData !== 'undefined' && contextVar.technicianOvertimeData.length > 0) { contextVar.technicianOvertimeData.forEach(function (overtime) { if (((compareDates(taskStartDate, overtime.workforceOvertimeStartDate) && compareDates(overtime.workforceOvertimeEndDate, taskEndDate)))) { contextVar.isOvertime = true; } }); } }","nodeType":"PROCESS"},"getTechnicianleaveData":{"models":["workforceLeave","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTechnicianleaveData"}],"columns":{"workforceLeaveEndDate":"workforceLeave.endDate","workforceLeaveHoursType":"workforceLeave.hoursType","workforceLeaveWorkforceUserId":"workforceLeave.workforceUserId","workforceUserId":"workforce.userId","workforceLeaveStartDate":"workforceLeave.startDate"},"description":"getTechnicianleaveData","distinct":true,"inputVarMap":{"startDateFilter":"startDateFilter","endDateFilter":"endDateFilter","workforceUserId":"workforceUserId"},"nodeType":"QUERY","filter":"{$workforceLeaveWorkforceUserId} = {@workforceUserId} AND (({$workforceLeaveStartDate} BETWEEN {@startDate} AND {@endDate}) OR ({$workforceLeaveEndDate} BETWEEN {@startDate} AND {@endDate}) OR ({@startDate} BETWEEN {$workforceLeaveStartDate} AND {$workforceLeaveEndDate}) OR ({@endDate} BETWEEN {$workforceLeaveStartDate} AND {$workforceLeaveEndDate}))","name":"getTechnicianleaveData","outputVarMap":{"data":"technicianleaveData"},"batchSize":1000,"getCount":true,"batchNumber":1},"isHoliday":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"getTechnicianleaveData"}],"name":"isHoliday","description":"isHoliday","processRule":"(contextVar.isValid === false )","nodeType":"DECISION"},"getTaskTypeSkillData":{"filter":"{$workOrderTaskId} = {@workOrderTaskId}","models":["taskType","taskTypeSkill","workOrderTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskTypeSkillData"}],"columns":{"taskTypeSkillSkillId":"taskTypeSkill.skillId","workOrderTaskId":"workOrderTask.id","taskTypeSkillMinSkillLevelId":"taskTypeSkill.minSkillLevelId"},"name":"getTaskTypeSkillData","description":"getTaskTypeSkillData","distinct":true,"links":{"taskType":"workOrderTask","taskTypeSkill":"taskType"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"taskTypeSkillData"},"nodeType":"QUERY","getCount":true},"doesTechnicianHaveSkill":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"getTechnicianRegionData"}],"name":"doesTechnicianHaveSkill","description":"doesTechnicianHaveSkill","processRule":"(contextVar.isValid === false )","nodeType":"DECISION"},"workflowContext":{"schedulerSettingUseSkills":true,"skillList":[],"featureName":"jitScheduler","isValid":true,"minimunSkillLevelList":[],"extraMsg":"BASE CONSTRAINTS: baseConstraintsWF call","minSkillLevel":[]},"processWorkOrderTaskListAndSchedulerSettingData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getWorkOrderTaskData"}],"contextChangePermitted":true,"name":"processWorkOrderTaskListAndSchedulerSettingData","description":"processWorkOrderTaskListAndSchedulerSettingData ","processRule":"{ if (typeof contextVar.taskDetail !== 'undefined' && contextVar.taskDetail !== '' && typeof contextVar.tech !== 'undefined' && contextVar.tech !== '') { contextVar.workOrderTaskId = contextVar.taskDetail.id; contextVar.workforceUserId = contextVar.tech.id; } if (typeof contextVar.schedulerSettingData != 'undefined' && contextVar.schedulerSettingData.length > 0) { contextVar.schedulerSettingUseSkills = contextVar.schedulerSettingData[0].schedulerSettingUseSkills; } }","nodeType":"PROCESS"},"getTechnicianRegionData":{"models":["workforce","contractorWorkforce","contractorRegion"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTechnicianRegionData"}],"columns":{"contractorRegion":"contractorRegion.regionId","workforceStatusId":"workforce.statusId","workforceUserId":"workforce.userId"},"description":"getTechnicianRegionData","distinct":true,"inputVarMap":{"regionId":"regionId","workforceUserId":"workforceUserId"},"nodeType":"QUERY","filter":"{$workforceUserId} = {@workforceUserId} AND {@regionId} = {$contractorRegion}","name":"getTechnicianRegionData","links":{"contractorRegion":"contractorWorkforce","contractorWorkforce":"workforce"},"outputVarMap":{"data":"technicianRegionData"},"batchSize":1000,"getCount":true,"batchNumber":1},"processWorkOrderTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getMobileTechnicianData"}],"contextChangePermitted":true,"name":"processWorkOrderTaskData","description":"processWorkOrderTaskData","processRule":"{ if (typeof contextVar.workOrderTaskData !== 'undefined' && contextVar.workOrderTaskData.length > 0) { contextVar.startDate = contextVar.workOrderTaskData[0].workOrderTaskScheduledDate; contextVar.endDate = contextVar.workOrderTaskData[0].workOrderTaskTaskEndTime; contextVar.startDayDisplayOrder = new Date(contextVar.workOrderTaskData[0].workOrderTaskScheduledDate).getDay(); contextVar.endDayDisplayOrder = new Date(contextVar.workOrderTaskData[0].workOrderTaskTaskEndTime).getDay(); contextVar.startDateFilter = new Date(contextVar.workOrderTaskData[0].workOrderTaskScheduledDate); contextVar.startDateFilter.setUTCHours(0, 0, 0, 0); contextVar.endDateFilter = new Date(contextVar.workOrderTaskData[0].workOrderTaskTaskEndTime); contextVar.endDateFilter.setDate(contextVar.endDateFilter.getDate() + 1); contextVar.endDateFilter.setUTCHours(0, 0, 0, 0); contextVar.startDateFilter = new Date(contextVar.startDateFilter).toISOString().replace('T', ' ').replace('Z', ''); contextVar.endDateFilter = new Date(contextVar.endDateFilter).toISOString().replace('T', ' ').replace('Z', ''); contextVar.regionId = contextVar.workOrderTaskData[0].regionId; } }","nodeType":"PROCESS"},"getTechnicianOvertimeData":{"models":["workforceOvertime","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTechnicianOvertimeData"}],"columns":{"workforceOvertimeStartDate":"workforceOvertime.startDate","workforceOvertimeWorkforceUserId":"workforceOvertime.workforceUserId","workforceUserId":"workforce.userId","workforceOvertimeEndDate":"workforceOvertime.endDate"},"description":"getTechnicianOvertimeData","distinct":true,"inputVarMap":{"startDateFilter":"startDateFilter","endDateFilter":"endDateFilter","workforceUserId":"workforceUserId"},"nodeType":"QUERY","filter":"{$workforceOvertimeWorkforceUserId} = {@workforceUserId} AND (({$workforceOvertimeEndDate} BETWEEN {@startDateFilter} AND  {@endDateFilter}) OR ( {$workforceOvertimeStartDate} BETWEEN {@startDateFilter} AND  {@endDateFilter}))","name":"getTechnicianOvertimeData","outputVarMap":{"data":"technicianOvertimeData"},"batchSize":1000,"getCount":true,"batchNumber":1},"processSkillLevelData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getTechnicianSkillData"}],"contextChangePermitted":true,"name":"processSkillLevelData","description":"processSkillLevelData","processRule":"{ var minSkillRange = []; if (typeof contextVar.skillLevelData !== 'undefined' && contextVar.skillLevelData.length > 0 && typeof contextVar.skillList !== 'undefined' && contextVar.skillList.length > 0 && typeof contextVar.minSkillLevel !== 'undefined' && contextVar.minSkillLevel.length > 0) { contextVar.minSkillLevel.forEach(function (minSkillLevel) { contextVar.skillLevelData.forEach(function (skillLevel) { if (minSkillLevel === skillLevel.skillLevelId) { var minSkilljson = {}; minSkilljson[skillLevel.skillLevelSkillId] = skillLevel.skillLevelRank; minSkillRange.push(minSkilljson); } }); }); contextVar.skillList.forEach(function (element) { minSkillRange.forEach(function (range) { contextVar.skillLevelData.forEach(function (skillLevel) { if (skillLevel.skillLevelSkillId === element) { if (skillLevel.skillLevelRank >= range[element]) { contextVar.minimunSkillLevelList.push(skillLevel.skillLevelId); } } }); }); }); } }","nodeType":"PROCESS"},"end":{"name":"End","description":"end","inputVarMap":{"isValid":"isValid","recommendTechArray":"recommendTechArray"},"outputVarMap":{"isValid":"isValid","recommendTechArray":"recommendTechArray"},"nodeType":"END"},"isSkillFilterApplicable":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getTaskTypeSkillData"},{"exitPortType":"FalseStep","nodeId":"getTechnicianRegionData"}],"name":"isSkillFilterApplicable","description":"isSkillFilterApplicable","processRule":"(contextVar.schedulerSettingUseSkills === true )","nodeType":"DECISION"},"getTechnicianSkillData":{"models":["workforce","workforceSkill"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTechnicianSkillData"}],"columns":{"workforceSkillSkillLevelId":"workforceSkill.skillLevelId","workforceStatusId":"workforce.statusId","workforceUserId":"workforce.userId"},"description":"getTechnicianSkillData","distinct":true,"inputVarMap":{"minimunSkillLevelList":"minimunSkillLevelList","workforceUserId":"workforceUserId"},"nodeType":"QUERY","filter":"{$workforceUserId} = {@workforceUserId} AND {$workforceSkillSkillLevelId} IN {@minimunSkillLevelList}","name":"getTechnicianSkillData","outputVarMap":{"data":"technicianSkillData"},"batchSize":1000,"getCount":true,"batchNumber":1},"processTechnicianRegionData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isTechnicianInRegion"}],"contextChangePermitted":true,"name":"processTechnicianRegionData","description":"processTechnicianRegionData","processRule":"{if (typeof contextVar.technicianRegionData === 'undefined' || contextVar.technicianRegionData.length <= 0) { contextVar.isValid = false; } }","nodeType":"PROCESS"},"isTechnicianOnleave":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"getTechnicianTaskDetails"}],"name":"isTechnicianOnleave","description":"isTechnicianOnleave","processRule":"(contextVar.isValid === false )","nodeType":"DECISION"},"getTechnicianWeeklySchedule":{"models":["workforce","calendar","weeklySchedule"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTechnicianAvailabilityCheckZRule"}],"columns":{"weeklyScheduleSchedule":"weeklySchedule.schedule","weeklyScheduleDisplayOrder":"weeklySchedule.displayOrder","workforceUserId":"workforce.userId","weeklyScheduleIsAllDay":"weeklySchedule.isAllDay"},"description":"getTechnicianWeeklySchedule","distinct":true,"inputVarMap":{"workforceUserId":"workforceUserId","startDayDisplayOrder":"startDayDisplayOrder"},"nodeType":"QUERY","filter":"{$workforceUserId} = {@workforceUserId}","name":"getTechnicianWeeklySchedule","links":{"calendar":"weeklySchedule","workforce":"calendar"},"outputVarMap":{"data":"technicianShiftData"},"batchSize":1000,"getCount":true,"batchNumber":1},"getHolidayData":{"models":["workforce","calendar","calendarHoliday","holiday"],"connectors":[{"exitPortType":"NextStep","nodeId":"processHolidayData"}],"columns":{"workforceUserId":"workforce.userId","holidayName":"holiday.name","holidayDate":"holiday.date"},"description":"getHolidayData","distinct":true,"inputVarMap":{"startDateFilter":"startDateFilter","endDateFilter":"endDateFilter","workforceUserId":"workforceUserId"},"nodeType":"QUERY","filter":"{$workforceUserId} = {@workforceUserId} AND (({$holidayDate} BETWEEN {@startDateFilter} AND  {@endDateFilter}) OR ((DATE_ADD({$holiday.date}, INTERVAL CAST(1439 AS UNSIGNED) MINUTE)) BETWEEN {@startDateFilter} AND  {@endDateFilter}))","name":"getHolidayData","outputVarMap":{"data":"technicianHolidayData"},"batchSize":1000,"getCount":true,"batchNumber":1},"getTechnicianTaskDetails":{"models":["User","workOrderTask","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"getTechnicianWeeklySchedule"}],"columns":{"workOrderTaskStatusId":"workOrderTask.statusId","workOrderTaskId":"workOrderTask.id","startTime":"workOrderTask.scheduledDate","endTime":"workOrderTask.dueDate","userName":"User.name","workforceUserId":"workforce.userId","userId":"workforce.userId","estimatedDuration":"workOrderTask.estimatedDuration"},"description":"getTechnicianTaskDetails","distinct":true,"inputVarMap":{"startDateFilter":"startDateFilter","endDateFilter":"endDateFilter","workOrderTaskId":"workOrderTaskId","workforceUserId":"workforceUserId"},"nodeType":"QUERY","filter":"{$userId} = {@workforceUserId} AND (({$startTime} BETWEEN {@startDateFilter} AND  {@endDateFilter}) OR ({$endTime} BETWEEN {@startDateFilter} AND  {@endDateFilter})) AND {$workOrderTaskStatusId} !='workOrderTaskCompleted' AND {$workOrderTask.id} != {@workOrderTaskId}","name":"getTechnicianTaskDetails","links":{"workOrderTask":"workforce","workforce":"User"},"outputVarMap":{"data":"technicianTaskData"},"batchSize":1000,"getCount":true,"batchNumber":1},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"name":"start","description":"Start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"getSchedulerSettingData"}],"processId":"featureLoggerWF","name":"logContextVar","description":"logContextVar","inputVarMap":{"featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"isMobileTechnician":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"isSkillFilterApplicable"}],"name":"isMobileTechnician","description":"isMobileTechnician","processRule":"(contextVar.isValid === false )","nodeType":"DECISION"},"processTechnicianleaveData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isTechnicianOnleave"}],"contextChangePermitted":true,"name":"processTechnicianleaveData","description":"processTechnicianleaveData","processRule":"{ var taskStartDate = contextVar.workOrderTaskData[0].workOrderTaskScheduledDate; var taskEndDate = contextVar.workOrderTaskData[0].workOrderTaskTaskEndTime; var compareDates = function (date1, date2) { return (new Date(date1) >= new Date(date2)); }; if (typeof contextVar.technicianleaveData !== 'undefined' && contextVar.technicianleaveData.length > 0) { contextVar.technicianleaveData.forEach(function (element) { if ((compareDates(taskStartDate, element.workforceLeaveStartDate) && compareDates(element.workforceLeaveEndDate, taskStartDate)) || (compareDates(taskEndDate, element.workforceLeaveStartDate) && compareDates(element.workforceLeaveEndDate, taskEndDate)) || (compareDates(element.workforceLeaveStartDate, taskStartDate) && compareDates(taskEndDate, element.workforceLeaveEndDate))) { contextVar.isValid = false; } }); } }","nodeType":"PROCESS"},"processHolidayData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isHoliday"}],"contextChangePermitted":true,"name":"processHolidayData","description":"processHolidayData","processRule":"{ if (contextVar.technicianHolidayData.length > 0) { contextVar.isValid = false; }  }","nodeType":"PROCESS"},"workflowNodes":["start","logContextVar","getSchedulerSettingData","processWorkOrderTaskListAndSchedulerSettingData","getWorkOrderTaskData","processWorkOrderTaskData","getMobileTechnicianData","processMobileTechnicianData","isMobileTechnician","isSkillFilterApplicable","getTaskTypeSkillData","processTaskTypeSkillData","getSkillLevelData","processSkillLevelData","getTechnicianSkillData","processTechnicianSkillData","doesTechnicianHaveSkill","getTechnicianRegionData","processTechnicianRegionData","isTechnicianInRegion","getTechnicianOvertimeData","processTechnicianOvertimeData","isTechnicianOvertime","getHolidayData","processHolidayData","isHoliday","getTechnicianleaveData","processTechnicianleaveData","isTechnicianOnleave","getTechnicianTaskDetails","getTechnicianWeeklySchedule","processTechnicianAvailabilityCheckZRule","end"],"getSchedulerSettingData":{"models":["schedulerSetting"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkOrderTaskListAndSchedulerSettingData"}],"columns":{"schedulerSettingUseSkills":"schedulerSetting.useSkills","schedulerSettingOptimizeFor":"schedulerSetting.optimizeFor","schedulerSettingId":"schedulerSetting.id","schedulerSettingProximityRange":"schedulerSetting.proximityRange"},"name":"getSchedulerSettingData","description":"getSchedulerSettingData","distinct":true,"inputVarMap":{},"outputVarMap":{"data":"schedulerSettingData"},"nodeType":"QUERY","getCount":true},"getWorkOrderTaskData":{"filter":"{$workOrderTaskId} = {@workOrderTaskId}","models":["taskType","workOrderTask","site","region"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkOrderTaskData"}],"columns":{"workOrderTaskAssignedToUserId":"workOrderTask.assignedToUserId","regionId":"region.id","workOrderTaskTaskEndTime":"workOrderTask.dueDate","regionName":"region.name","taskTypeMobileProcessId":"taskType.mobileProcessId","workOrderTaskId":"workOrderTask.id","workOrderTaskWorkOrderId":"workOrderTask.workOrderId","siteName":"site.name","workOrderTaskScheduledDate":"workOrderTask.scheduledDate","workOrderTaskEstimatedDuration":"workOrderTask.estimatedDuration","taskTypeName":"taskType.name","workOrderTaskTaskTypeId":"workOrderTask.taskTypeId"},"name":"getWorkOrderTaskData","description":"getWorkOrderTaskData","distinct":true,"links":{"taskType":"workOrderTask","site":"workOrderTask","region":"site"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"workOrderTaskData"},"nodeType":"QUERY","getCount":true},"getSkillLevelData":{"models":["skillLevel"],"connectors":[{"exitPortType":"NextStep","nodeId":"processSkillLevelData"}],"columns":{"skillLevelSkillId":"skillLevel.skillId","skillLevelId":"skillLevel.id","skillLevelRank":"skillLevel.rank","skillLevelName":"skillLevel.name"},"description":"getSkillLevelData","distinct":true,"inputVarMap":{"skillList":"skillList"},"nodeType":"QUERY","filter":"{$skillLevelSkillId} IN {@skillList}","name":"getSkillLevelData","outputVarMap":{"data":"skillLevelData"},"batchSize":1000,"getCount":true,"batchNumber":1},"processTechnicianSkillData":{"connectors":[{"exitPortType":"NextStep","nodeId":"doesTechnicianHaveSkill"}],"contextChangePermitted":true,"name":"processTechnicianSkillData","description":"processTechnicianSkillData","processRule":"{if (typeof contextVar.technicianSkillData === 'undefined' || contextVar.technicianSkillData.length <= 0) { contextVar.isValid = false; } }","nodeType":"PROCESS"},"isTechnicianInRegion":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"getTechnicianOvertimeData"}],"name":"isTechnicianInRegion","description":"isTechnicianInRegion","processRule":"(contextVar.isValid === false )","nodeType":"DECISION"},"getMobileTechnicianData":{"models":["workOrderTask","taskType","ZProcess","workforce","ZProjectUser","UserGroup","User","calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"processMobileTechnicianData"}],"columns":{"workOrderTaskTaskType":"workOrderTask.taskTypeId","userStatus":"User.status","calendarId":"workforce.calendarId","workOrderTaskId":"workOrderTask.id","userPhoneNumber":"User.phoneNumber","userEmail":"User.emailId","userName":"User.name","workforceUserId":"workforce.userId","userId":"User.id"},"description":"getMobileTechnicianData","distinct":true,"inputVarMap":{"workOrderTaskId":"workOrderTaskId","workforceUserId":"workforceUserId"},"nodeType":"QUERY","filter":"{$workforceUserId} = {@workforceUserId} AND ({$taskType.mobileProcessId}={$ZProcess.id} AND {$ZProcess.projectId}={$ZProjectUser.projectId} AND {$workOrderTaskId}={@workOrderTaskId} AND {$ZProjectUser.groupId}={$UserGroup.groupId})","name":"getMobileTechnicianData","links":{"calendar":"workforce","workOrderTask":"taskType","workforce":"User"},"outputVarMap":{"data":"mobileTechnician"},"batchSize":1000,"getCount":true,"batchNumber":1},"processTaskTypeSkillData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getSkillLevelData"}],"contextChangePermitted":true,"name":"processTaskTypeSkillData","description":"processTaskTypeSkillData","processRule":"{ if (typeof contextVar.taskTypeSkillData !== 'undefined' && contextVar.taskTypeSkillData !== '' && contextVar.taskTypeSkillData.length > 0) { contextVar.taskTypeSkillData.forEach(function (element) { contextVar.skillList.push(element.taskTypeSkillSkillId); contextVar.minSkillLevel.push(element.taskTypeSkillMinSkillLevelId); }); } }","nodeType":"PROCESS"},"isTechnicianOvertime":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"getHolidayData"}],"name":"isTechnicianOvertime","description":"isTechnicianOvertime","processRule":"{ contextVar.isOvertime === true }","nodeType":"DECISION"}}