{"upsertWorkOrderInstalledBase":{"connectors":[{"exitPortType":"NextStep","nodeId":"ifAssetMaintenancePlanExpired"}],"processId":"workOrderTaskInstalledBaseWF","name":"upsertWorkOrderInstalledBase","description":"Upsert workOrderInstalledBase Model","inputVarMap":{"workOrderTaskInstalledBase":"workOrderTaskInstalledBase","subActionForWOIB":"subAction"},"outputVarMap":{"data":"upsertWorkOrderInstalledBaseResponseData"},"nodeType":"WORKFLOW"},"updateAssetMaintenancePlan":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"assetMaintenancePlanWF","name":"updateAssetMaintenancePlan","description":"Update status of the workOrders","inputVarMap":{"subActionForPlan":"subAction","assetMaintenancePlan":"assetMaintenancePlan"},"outputVarMap":{},"nodeType":"WORKFLOW"},"upsertAssetMaintenanceSchedule":{"modelName":"assetMaintenanceSchedule","connectors":[{"exitPortType":"NextStep","nodeId":"upsertWorkOrderTask"}],"multirecord":true,"name":"upsertAssetMaintenanceSchedule","description":"upsertAssetMaintenanceSchedule","inputVarMap":{"assetMaintenanceSchedule":"data"},"outputVarMap":{"data":"assetMaintenanceScheduleData"},"nodeType":"MODEL","operation":4},"fetchPlanSiteData":{"filter":"{$planId} IN {@assetMaintenancePlanIds} AND {$assetMaintenancePlanSite.siteId}={$installedBase.siteId}","models":["assetMaintenancePlan","assetMaintenancePlanSite","assetMaintenancePlanInstalledBase","installedBase"],"connectors":[{"exitPortType":"NextStep","nodeId":"processDataForUpsertWorkOrder"}],"columns":{"catalogId":"installedBase.catalogId","assetId":"installedBase.id","siteId":"assetMaintenancePlanSite.siteId","planId":"assetMaintenancePlan.id"},"name":"fetchPlanSiteData","description":"fetchPlanSiteData","links":{"installedBase":"assetMaintenancePlanInstalledBase","assetMaintenancePlanSite":"assetMaintenancePlan","assetMaintenancePlan":"assetMaintenancePlanInstalledBase"},"inputVarMap":{"assetMaintenancePlanIds":"assetMaintenancePlanIds"},"outputVarMap":{"data":"planSiteData"},"nodeType":"QUERY","getCount":true},"upsertWorkOrderTask":{"connectors":[{"exitPortType":"NextStep","nodeId":"processDataForUpsertInstalledBase"}],"processId":"QIFGIU7FDJ","name":"upsertWorkOrderTask","description":"Save work order tasks to workOrderTask Model","inputVarMap":{"workOrderTask":"data","subActionForWOT":"subAction"},"outputVarMap":{"data":"workOrderTaskData"},"nodeType":"WORKFLOW"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"createStaticFilter"}],"name":"start","description":"Start","nodeType":"START"},"processDataForUpdatePlan":{"connectors":[{"exitPortType":"NextStep","nodeId":"updateAssetMaintenancePlan"}],"contextChangePermitted":true,"name":"processDataForUpdatePlan","description":"processDataForUpdatePlan","processRule":"{contextVar.assetMaintenancePlan = []; contextVar.expiredPlanData.forEach(element => { element['statusId'] = 'assetMaintenancePlanExpired'; contextVar.assetMaintenancePlan.push(element);});}","nodeType":"PROCESS","jsEngine":"es6"},"workflowNodes":["start","createStaticFilter","fetchMaintenancePlanAndScheduleData","checkIfDataPresent","processData","fetchPlanSiteData","processDataForUpsertWorkOrder","upsertWorkOrder","processDataForUpsertWorkOrderTaskAndAssetMaintenanceSchedule","upsertAssetMaintenanceSchedule","upsertWorkOrderTask","processDataForUpsertInstalledBase","upsertWorkOrderInstalledBase","ifAssetMaintenancePlanExpired","checkIfRecordPresent","processDataForUpdatePlan","updateAssetMaintenancePlan","end"],"createStaticFilter":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchMaintenancePlanAndScheduleData"}],"contextChangePermitted":true,"name":"createStaticFilter","description":"createStaticFilter","processRule":"{contextVar.today = new Date().toISOString().replace('T', ' ').replace('Z', ''); contextVar.staticFilter = '(TIMESTAMPDIFF(HOUR,DATE_SUB({$assetMaintenanceSchedule.createWorkOrderDate}, INTERVAL {$site.timezoneOffset} MINUTE),DATE_SUB({@today}, INTERVAL {$site.timezoneOffset} MINUTE))) >= 0 AND {$workOrderTemplateId}={$workOrderTemplateV2.id} AND ({$assetMaintenanceSchedule.workOrderId} IS NULL || {$assetMaintenanceSchedule.workOrderId} ={@emptyString}) ';}","nodeType":"PROCESS","jsEngine":"es6"},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchPlanSiteData"}],"contextChangePermitted":true,"name":"processData","description":"setting all the unique planIds in an array","processRule":"{contextVar.assetMaintenancePlanIds = []; contextVar.maintenancePlanAndScheduleData.forEach(element => { if (contextVar.assetMaintenancePlanIds.indexOf(element.planId) == -1) { contextVar.assetMaintenancePlanIds.push(element.planId); } });}","nodeType":"PROCESS","jsEngine":"es6"},"workflowContext":{"subActionForWOT":"upsertWorkOrderTask","subActionForWO":"upsertWorkOrder","subActionForPlan":"upsertAssetMaintenancePlan","emptyString":"","subActionForWOIB":"upsertWorkOrderTaskInstalledBase"},"processDataForUpsertInstalledBase":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertWorkOrderInstalledBase"}],"contextChangePermitted":true,"name":"processDataForUpsertInstalledBase","description":"processDataForUpsertInstalledBase","processRule":"{contextVar.createdWorkOrderTasksWithDetails = []; for (var i = 0; i < contextVar.workOrderTask.length; i++) { for (var j = i; j < contextVar.workOrderTaskData.length; j++) { contextVar.createdWorkOrderTasksWithDetails.push({ 'siteId': contextVar.workOrderTask[i].siteId, 'workOrderTaskId': contextVar.workOrderTaskData[j].id }); break; } } contextVar.workOrderTaskInstalledBase = []; contextVar.createdWorkOrderTasksWithDetails.forEach(element => { var assetList = []; var visitedAssetIds = []; const newArray = contextVar.planSiteData.filter(ele => { return ele.siteId == element.siteId }); newArray.forEach(ele => { if (visitedAssetIds.indexOf(ele.assetId) == -1) { assetList.push({ 'catalogId': ele.catalogId, 'installedBaseId': ele.assetId }); visitedAssetIds.push(ele.assetId); } }); contextVar.workOrderTaskInstalledBase.push({ 'workOrderTaskId': element.workOrderTaskId, 'eventType': 'serviceRequested', 'assetList': assetList }); });}","nodeType":"PROCESS","jsEngine":"es6"},"processDataForUpsertWorkOrderTaskAndAssetMaintenanceSchedule":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertAssetMaintenanceSchedule"}],"contextChangePermitted":true,"name":"processDataForUpsertWorkOrderTaskAndAssetMaintenanceSchedule","description":"processDataForUpsertWorkOrderTaskAndAssetMaintenanceSchedule","processRule":"{contextVar.createdWorkOrdersWithDetails = []; contextVar.assetMaintenanceSchedule = []; for (var i = 0; i < contextVar.maintenancePlanAndScheduleData.length; i++) { for (var j = i; j < contextVar.data.length; j++) { contextVar.createdWorkOrdersWithDetails.push({ 'planId': contextVar.maintenancePlanAndScheduleData[i].planId, 'workOrderId': contextVar.data[j].id, 'taskTypeId': contextVar.maintenancePlanAndScheduleData[i].taskTypeId, 'estimatedDuration': contextVar.maintenancePlanAndScheduleData[i].estimatedDuration, 'services': contextVar.maintenancePlanAndScheduleData[i].services, 'enableServices': contextVar.maintenancePlanAndScheduleData[i].enableServices }); contextVar.assetMaintenanceSchedule.push({ 'id': contextVar.maintenancePlanAndScheduleData[i].scheduleId, 'workOrderId': contextVar.data[j].id }); break; } } function getData(planId, planSiteData) { let data = planSiteData.filter(e => { return e.planId == planId; }); return data; } contextVar.workOrderTask = []; contextVar.createdWorkOrdersWithDetails.forEach(element => { var visitedSiteIds = []; let data = getData(element.planId, contextVar.planSiteData); data.forEach(ele => { if (visitedSiteIds.indexOf(ele.siteId) == -1) { contextVar.workOrderTask.push({ 'workOrderId': element.workOrderId, 'taskTypeId': element.taskTypeId, 'siteId': ele.siteId, 'statusId': 'workOrderTaskOpen', 'statusTargetModel': 'workOrderTask', 'estimatedDuration': element.estimatedDuration, 'services': element.services, 'eventType': 'workOrderTaskOpen', 'enableServices': element.enableServices }); visitedSiteIds.push(ele.siteId); } }); });}","nodeType":"PROCESS","jsEngine":"es6"},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"processDataForUpsertWorkOrder":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertWorkOrder"}],"contextChangePermitted":true,"name":"processDataForUpsertWorkOrder","description":"processDataForUpsertWorkOrder","processRule":"{ contextVar.workOrder = []; contextVar.maintenancePlanAndScheduleData.forEach(element => { var jsonObj = {}; for (var key in element) { if (key === 'planId' || key === 'workOrderTemplateId' || key === 'scheduleId' || key === 'estimatedDuration' || key === 'taskTypeId') { continue } else { jsonObj[key] = element[key]; } } jsonObj['isTemplate'] = false; jsonObj['priorityTargetModel'] = 'workOrder'; jsonObj['statusId'] = 'workOrderOpen'; jsonObj['statusTargetModel'] = 'workOrder'; contextVar.workOrder.push(jsonObj); }); }","nodeType":"PROCESS","jsEngine":"es6"},"fetchMaintenancePlanAndScheduleData":{"filter":"filter","models":["assetMaintenancePlan","assetMaintenanceSchedule","workOrderTemplateV2","taskType","assetMaintenancePlanSite","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfDataPresent"}],"columns":{"workOrderTemplateId":"assetMaintenancePlan.workOrderTemplateId","slaId":"assetMaintenancePlan.slaId","workOrderTypeId":"workOrderTemplateV2.workOrderTypeId","services":"taskType.services","estimatedDuration":"taskType.estimatedDuration","taskTypeId":"assetMaintenancePlan.taskTypeId","priorityPriority":"workOrderTemplateV2.priorityPriority","calendarId":"assetMaintenancePlan.calendarId","enableServices":"taskType.enableServices","customerId":"assetMaintenancePlan.customerId","contractId":"assetMaintenancePlan.contractId","planId":"assetMaintenancePlan.id","requestedDate":"assetMaintenanceSchedule.requestedDate","deadline":"assetMaintenanceSchedule.deadline","scheduleId":"assetMaintenanceSchedule.id"},"name":"fetchMaintenancePlanAndScheduleData","description":"fetching all the schedules for which createWorkOrderDate is today","distinct":true,"links":{"taskType":"assetMaintenancePlan","site":"assetMaintenancePlanSite","assetMaintenancePlanSite":"assetMaintenancePlan","assetMaintenancePlan":"assetMaintenanceSchedule"},"inputVarMap":{"staticFilter":"filter","today":"today","emptyString":"emptyString"},"outputVarMap":{"data":"maintenancePlanAndScheduleData"},"nodeType":"QUERY","getCount":true},"ifAssetMaintenancePlanExpired":{"filter":"(TIMESTAMPDIFF(HOUR,DATE_SUB({$assetMaintenanceplan.endDate}, INTERVAL {$site.timezoneOffset} MINUTE),DATE_SUB({@today}, INTERVAL {$site.timezoneOffset} MINUTE))) > 0 AND {$assetMaintenancePlan.statusId} != 'assetMaintenancePlanExpired'","models":["assetMaintenancePlan","assetMaintenancePlanSite","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfRecordPresent"}],"columns":{"recver":"assetMaintenancePlan.recver","id":"assetMaintenancePlan.id"},"name":"ifAssetMaintenancePlanExpired","description":"ifAssetMaintenancePlanExpired","inputVarMap":{"today":"today"},"groupBy":"id","outputVarMap":{"data":"expiredPlanData"},"nodeType":"QUERY"},"checkIfDataPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processData"},{"exitPortType":"FalseStep","nodeId":"ifAssetMaintenancePlanExpired"}],"name":"checkIfDataPresent","description":"checkIfDataPresent","processRule":"(typeof contextVar.maintenancePlanAndScheduleData !='undefined' && contextVar.maintenancePlanAndScheduleData !='' && contextVar.maintenancePlanAndScheduleData.length > 0)","nodeType":"DECISION"},"upsertWorkOrder":{"connectors":[{"exitPortType":"NextStep","nodeId":"processDataForUpsertWorkOrderTaskAndAssetMaintenanceSchedule"}],"processId":"FVLMOO7ADC","name":"upsertWorkOrder","description":"Upsert workOrder Model","inputVarMap":{"workOrder":"workOrder","subActionForWO":"subAction"},"outputVarMap":{"data":"upsertWorkOrderResponseData"},"nodeType":"WORKFLOW"},"checkIfRecordPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processDataForUpdatePlan"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"checkIfRecordPresent","description":"checkIfRecordPresent","processRule":"(typeof contextVar.expiredPlanData !='undefined' && contextVar.expiredPlanData !='' && contextVar.expiredPlanData.length > 0)","nodeType":"DECISION"}}