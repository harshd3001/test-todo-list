{"queryCustomerDetails":{"filter":"{$taskId}={@tId}","models":["site","workOrderTask","customer"],"connectors":[{"exitPortType":"NextStep","nodeId":"fetchCrewAttendanceDetails"}],"columns":{"contactPhone":"customer.contactPhone","taskId":"workOrderTask.id","customerName":"customer.companyName"},"name":"queryCustomerDetails","description":"Provide some description for your query","links":{"workOrderTask":"site","customer":"site"},"inputVarMap":{"workOrderTaskId":"tId"},"id":"queryCustomerDetails","outputVarMap":{"data":"custData"},"nodeType":"QUERY"},"processTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getLeadDetails"}],"contextChangePermitted":true,"name":"processTaskData","description":"Process task data to contextVar","processRule":"{ if (typeof contextVar.crewAttendanceDetailsList != 'undefined' && contextVar.crewAttendanceDetailsList != '' && contextVar.crewAttendanceDetailsList[0].leadUserId != '' && typeof contextVar.crewAttendanceDetailsList[0].leadUserId != 'undefined') { contextVar.leadUserId = contextVar.crewAttendanceDetailsList[0].leadUserId; } else { contextVar.leadUserId = contextVar.assignedToUserId; }; contextVar.crewMobileAccess = contextVar.taskDetail[0].crewMobileAccess; contextVar.enableServices = contextVar.taskDetail[0].enableServices; contextVar.viewTravelStatus = contextVar.taskDetail[0].viewTravelStatus; contextVar.travelStatus = '{%notStarted}'; contextVar.dueDate = contextVar.taskDetail[0].dueDate; contextVar.userName = contextVar.taskDetail[0].userName; contextVar.userPhoneNumber = contextVar.taskDetail[0].userPhoneNumber; contextVar.userEmail = contextVar.taskDetail[0].userEmail; contextVar.siteId = contextVar.taskDetail[0].siteId; contextVar.address = contextVar.taskDetail[0].address; contextVar.estimatedTaskDuration = contextVar.taskDetail[0].estimatedTaskDuration; contextVar.latitude = contextVar.taskDetail[0].latitude; contextVar.taskDescription = contextVar.taskDetail[0].taskDescription ? contextVar.taskDetail[0].taskDescription : ''; contextVar.taskPriority = contextVar.taskDetail[0].taskPriority; contextVar.scheduledDate = contextVar.taskDetail[0].scheduledDate; contextVar.workOrderId = contextVar.taskDetail[0].workOrderId; contextVar.taskTypeName = contextVar.taskDetail[0].taskTypeName; contextVar.taskId = contextVar.taskDetail[0].taskId; contextVar.longitude = contextVar.taskDetail[0].longitude; contextVar.endDate = contextVar.taskDetail[0].endDate; contextVar.checkInTime = contextVar.taskDetail[0].checkInTime || ''; contextVar.contactPhone = contextVar.custData[0].contactPhone; contextVar.customerName = contextVar.custData[0].customerName; contextVar.taskLogEventType = contextVar.taskDetail[0].taskLogEventType; if (typeof contextVar.taskDetail[0].result != 'undefined' && contextVar.taskDetail[0].result != '' && Array.isArray(contextVar.taskDetail[0].result) && contextVar.taskDetail[0].result.length > 0) { contextVar.beforeCaptureEvidence = contextVar.taskDetail[0].result[0].beforeCaptureEvidence; contextVar.beforeCaptureEvidenceOptionalFirst = contextVar.taskDetail[0].result[0].beforeCaptureEvidenceOptionalFirst; contextVar.beforeCaptureEvidenceOptionalSecond = contextVar.taskDetail[0].result[0].beforeCaptureEvidenceOptionalSecond; contextVar.beforeComments = contextVar.taskDetail[0].result[0].beforeComments; contextVar.afterCaptureEvidence = contextVar.taskDetail[0].result[0].afterCaptureEvidence; contextVar.afterCaptureEvidenceOptionalFirst = contextVar.taskDetail[0].result[0].afterCaptureEvidenceOptionalFirst; contextVar.afterCaptureEvidenceOptionalSecond = contextVar.taskDetail[0].result[0].afterCaptureEvidenceOptionalSecond; contextVar.afterComments = contextVar.taskDetail[0].result[0].afterComments; contextVar.activityDataGrid = contextVar.taskDetail[0].result[0].activityDataGrid; } if (typeof contextVar.taskDetail[0].results != 'undefined' && Array.isArray(contextVar.taskDetail[0].results) && contextVar.taskDetail[0].results.length > 0) { var res = contextVar.taskDetail[0].results; var lastEntry = res[res.length - 1]; if (lastEntry.initialEvidenceDataGrid && Array.isArray(lastEntry.initialEvidenceDataGrid)) { contextVar.initialEvidenceDataGrid = lastEntry.initialEvidenceDataGrid; } if (lastEntry.submitProgressEvidenceDataGrid && Array.isArray(lastEntry.submitProgressEvidenceDataGrid)) { contextVar.submitProgressEvidenceDataGrid = lastEntry.submitProgressEvidenceDataGrid; }; if (lastEntry.servicesDataGrid && Array.isArray(lastEntry.servicesDataGrid)) { contextVar.servicesDataGrid = lastEntry.servicesDataGrid; } if (lastEntry.additionalMaterials && Array.isArray(lastEntry.additionalMaterials)) { contextVar.additionalMaterialsDataGrid = lastEntry.additionalMaterials; } if (lastEntry.suggestedMaterials && Array.isArray(lastEntry.suggestedMaterials)) { contextVar.fetchSuggestedMaterials = lastEntry.suggestedMaterials; } if (lastEntry.finalEvidenceDataGrid && Array.isArray(lastEntry.finalEvidenceDataGrid)) { contextVar.finalEvidenceDataGrid = lastEntry.finalEvidenceDataGrid; } } contextVar.isCrewTask = contextVar.taskDetail[0].isCrewTask; contextVar.workOrderTaskReOpenCount = contextVar.taskDetail[0].workOrderTaskReOpenCount ? contextVar.taskDetail[0].workOrderTaskReOpenCount : ''; if (typeof contextVar.cancellationReason != 'undefined' && contextVar.cancellationReason != '' && typeof contextVar.cancellationReason[0].cancellationReason != 'undefined' && contextVar.cancellationReason[0].cancellationReason != '') { contextVar.cancellationReason = contextVar.cancellationReason[0].cancellationReason } else { contextVar.cancellationReason = '' } }","id":"processTaskData","nodeType":"PROCESS"},"processServices":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchServices"}],"contextChangePermitted":true,"name":"processServices","description":"Process services","processRule":"if(typeof contextVar.taskDetail[0].services !== 'undefined' && contextVar.taskDetail[0].services != '' && Array.isArray(contextVar.taskDetail[0].services)){contextVar.taskDetail[0].services.forEach(function(obj){ contextVar.catalogList.push(obj.catalogId); });}","id":"processServices","nodeType":"PROCESS"},"processRejectionReasonValue":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchListOptionRejectionReason"}],"contextChangePermitted":true,"name":"processRejectionReasonValue","description":"processRejectionReasonValue","processRule":"if( typeof contextVar.cancellationReason != 'undefined' && contextVar.cancellationReason != '' ){contextVar.cancellationReason=contextVar.cancellationReason;}else {contextVar.cancellationReason=''}","id":"processRejectionReasonValue","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTaskDetails"}],"name":"start","description":" Start","id":"start","nodeType":"START"},"fetchListOptionRejectionReason":{"filter":"{$listOptionAnswerId} = {@cancellationReason}","models":["category","listOption","listOptionAnswer"],"connectors":[{"exitPortType":"NextStep","nodeId":"processServices"}],"columns":{"listOptionAnswerId":"listOptionAnswer.id","cancellationReason":"listOptionAnswer.answerOptionText","listOption":"listOption.name","listOptionId":"listOption.id","categoryName":"category.name"},"name":"fetchListOptionRejectionReason","description":"List options for rejection reason","inputVarMap":{"cancellationReason":"cancellationReason"},"links":{"listOptionAnswer":"listOption","category":"listOption"},"id":"fetchListOptionRejectionReason","outputVarMap":{"data":"cancellationReason"},"nodeType":"QUERY","translate":true},"checkRejectionReason":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processRejectionReasonValue"},{"exitPortType":"FalseStep","nodeId":"processServices"}],"name":"checkRejectionReason","description":"checkRejectionReason","processRule":"( typeof contextVar.cancellationReason != 'undefined' && contextVar.cancellationReason != '')","nodeType":"DECISION"},"workflowNodes":["start","fetchTaskDetails","isTaskReopened","fetchtaskReviewLog","processReviewLogAndTaskData","checkRejectionReason","processRejectionReasonValue","fetchListOptionRejectionReason","processServices","fetchServices","queryCustomerDetails","fetchCrewAttendanceDetails","processTaskData","getLeadDetails","fetchAssets","processAssets","end"],"fetchtaskReviewLog":{"models":["workOrderTask","taskReviewLog","taskLog"],"connectors":[{"exitPortType":"NextStep","nodeId":"processReviewLogAndTaskData"}],"columns":{"taskLogEventType":"taskLog.eventType","cancellationNotes":"taskReviewLog.reviewNotes","cancellationReason":"taskReviewLog.listOptionAnswerId","modifiedDate":"taskReviewLog.modifiedDate","modifiedDate1TaskLog":"taskLog.modifiedDate","action":"taskReviewLog.action"},"description":"fetch task details","distinct":true,"orderBy":"modifiedDate DESC","inputVarMap":{"workOrderTaskId":"tId"},"nodeType":"QUERY","filter":"{$workOrderTask.id}={@tId}","name":"fetchtaskReviewLog","id":"fetchtaskReviewLog","outputVarMap":{"data":"taskReviewLogData"},"batchSize":"1"},"processReviewLogAndTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkRejectionReason"}],"contextChangePermitted":true,"name":"processReviewLogAndTaskData","description":"Process ReviewLogAndTaskData","processRule":"if(contextVar.taskReviewLogData != '' && Array.isArray(contextVar.taskReviewLogData)){ contextVar.cancellationReason = contextVar.taskReviewLogData[0].cancellationReason;contextVar.cancellationNotes= contextVar.taskReviewLogData[0].cancellationNotes;}","id":"processReviewLogAndTaskData","nodeType":"PROCESS"},"getLeadDetails":{"filter":"{$leadUserId}={@leadUserId}","models":["User"],"connectors":[{"exitPortType":"NextStep","nodeId":"fetchAssets"}],"columns":{"leadPhoneNumber":"User.phoneNumber","leadEmailId":"User.emailId","leadName":"User.name","leadUserId":"User.id"},"name":"getLeadDetails","description":"Provide some description for your query","inputVarMap":{"leadUserId":"leadUserId"},"id":"getLeadDetails","outputVarMap":{"data":"leadDetails"},"nodeType":"QUERY"},"fetchAssets":{"models":["installedBase","catalog","manufacturer"],"connectors":[{"exitPortType":"NextStep","nodeId":"processAssets"}],"columns":{"catalogName":"catalog.name","installedBaseSiteId":"installedBase.siteId","installedBaseCatalogId":"installedBase.catalogId"},"description":"Provide some description for your query","orderBy":"catalogName ASC","inputVarMap":{"siteId":"siteId"},"groupBy":"catalogName","nodeType":"QUERY","filter":"{$installedBaseSiteId}={@siteId}","name":"fetchAssets","links":{},"id":"fetchAssets","outputVarMap":{"data":"assetsList"}},"fetchTaskDetails":{"models":["workOrderTask","workOrder","taskType","site","ZPriority","User"],"connectors":[{"exitPortType":"NextStep","nodeId":"isTaskReopened"}],"columns":{"endDate":"workOrderTask.dueDate","latitude":"site.latitude","taskDescription":"workOrderTask.notes","dueDate":"workOrderTask.dueDate","userPhoneNumber":"User.phoneNumber","scheduledDate":"workOrderTask.scheduledDate","crewMobileAccess":"taskType.crewMobileAccess","taskTypeName":"taskType.name","result":"workOrderTask.result","workOrderTaskId":"workOrderTask.id","userEmail":"User.emailId","workOrderTaskReOpenCount":"workOrderTask.reopenCount","results":"workOrderTask.result","longitude":"site.longitude","assignedToUserId":"workOrderTask.assignedToUserId","address":"site.address","currentStatus":"workOrderTask.statusId","estimatedTaskDuration":"workOrderTask.estimatedDuration","taskPriority":"ZPriority.name","services":"workOrderTask.services","userName":"User.name","isCrewTask":"taskType.crewTask","enableServices":"workOrderTask.enableServices","siteId":"site.id","workOrderId":"workOrder.id","taskId":"workOrderTask.id","viewTravelStatus":"taskType.viewTravelStatus"},"description":"fetch task details","distinct":true,"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"nodeType":"QUERY","filter":"{$workOrderTaskId}={@workOrderTaskId} AND {$ZPriority.targetModel} = 'workOrder'","name":"fetchTaskDetails","links":{"workOrder":"workOrderTask","taskType":"workOrderTask","site":"workOrderTask","User":"workOrderTask","ZPriority":"workOrder"},"id":"fetchTaskDetails","outputVarMap":{"data":"taskDetail"},"batchSize":"1"},"fetchCrewAttendanceDetails":{"filter":"{$workOrderTaskId} ={@workOrderTaskId} && {$workforceCrewWorkforceUserId} !={@assignedToUserId} && {$crewMemberStatus} ='workforceCrewOnCrew'","models":["workforceCrew","crew","workOrderTask","workforce","User"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskData"}],"columns":{"workforceCrewCrewId":"workforceCrew.crewId","workforceCrewWorkforceUserId":"workforceCrew.workforceUserId","crewMemberEmailId":"User.emailId","crewMemberName":"User.name","workOrderTaskId":"workOrderTask.id","crewMemberPhoneNumber":"User.phoneNumber","crewId":"crew.id","crewName":"crew.name","crewMemberStatus":"workforceCrew.statusId","assignedToCrewId":"workOrderTask.assignedToCrewId","leadUserId":"crew.leadUserId"},"name":"fetchCrewAttendanceDetails","description":"To get the crew attendance details","distinct":true,"inputVarMap":{"assignedToUserId":"assignedToUserId","workOrderTaskId":"workOrderTaskId"},"links":{"User":"workforce","workforce":"workforceCrew","workforceCrew":"crew","crew":"workOrderTask"},"id":"fetchCrewAttendanceDetails","outputVarMap":{"data":"crewAttendanceDetailsList"},"nodeType":"QUERY"},"workflowContext":{"catalogList":[]},"processAssets":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processAssets","description":"processAssets","processRule":"contextVar.assetsList=(Array.isArray(contextVar.assetsList) && contextVar.assetsList.length>0)?contextVar.assetsList:[]","id":"processAssets","nodeType":"PROCESS"},"fetchServices":{"filter":"{$serviceTypeId}='service' AND {$serviceId} IN {@serviceId}","models":["catalog"],"connectors":[{"exitPortType":"NextStep","nodeId":"queryCustomerDetails"}],"columns":{"serviceTypeId":"catalog.catalogTypeId","serviceDescription":"catalog.description","serviceName":"catalog.name","serviceId":"catalog.id"},"name":"fetchServices","description":"","inputVarMap":{"catalogList":"serviceId"},"id":"fetchServices","outputVarMap":{"data":"serviceList"},"nodeType":"QUERY"},"end":{"name":"end","description":"end","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"isTaskReopened":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchtaskReviewLog"},{"exitPortType":"FalseStep","nodeId":"processServices"}],"name":"isTaskReopened","description":"isTaskReopened","processRule":"(typeof contextVar.taskDetail!='undefined' && contextVar.taskDetail!='' && typeof contextVar.taskDetail[0].workOrderTaskReOpenCount === 'number' && contextVar.taskDetail[0].workOrderTaskReOpenCount > 0 )","nodeType":"DECISION","jsEngine":"es6"}}