{"workflowContext":{"fetchAvailableAppointmentWindows":"accWorkOrderTaskFetchAvailableAppointmentWindowsWF","dateList":[],"customerResponseData":{"appointmentWindow":{}},"status":false},"decideTimeFrame":{"connectors":[{"condition":"typeof contextVar.scheduledDate !== 'undefined' && typeof contextVar.timezoneOffset !== 'undefined' && contextVar.fetchWindowForA === 'day'","exitPortType":"NextStep","nodeId":"processTimeFrame"},{"condition":"typeof contextVar.scheduledDate !== 'undefined' && typeof contextVar.timezoneOffset !== 'undefined' && contextVar.fetchWindowForA === 'week'","exitPortType":"NextStep","nodeId":"processTimeFrame"},{"condition":"typeof contextVar.scheduledDate !== 'undefined' && typeof contextVar.timezoneOffset !== 'undefined' && contextVar.fetchWindowForA === 'month'","exitPortType":"NextStep","nodeId":"processTimeFrame"},{"DefaultStep":true,"condition":"typeof contextVar.scheduledDate === 'undefined'","exitPortType":"NextStep","nodeId":"statusValue"}],"name":"decideTimeFrame","description":"decideTimeFrame","id":"decideTimeFrame","nodeType":"MULTIDECISION"},"statusValue":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"statusValue","description":"statusValue","processRule":"let boolFrame = false; for (key in contextVar.customerResponseData.appointmentWindow) { boolFrame = boolFrame || contextVar.customerResponseData.appointmentWindow[key].length > 0; contextVar.customerResponseData.appointmentWindow[key].forEach(element => { element.startTimeInUTC = element.startTimeInUTC ? element.startTimeInUTC.replace(' ', 'T') + 'Z' : ''; element.endTimeInUTC = element.endTimeInUTC ? element.endTimeInUTC.replace(' ', 'T') + 'Z' : ''; }); } contextVar.status = boolFrame; if (!boolFrame) { contextVar.customerResponseData.responseTitle = 'No Appointment Slots Found'; } contextVar.customerResponseData.status = contextVar.status;","id":"statusValue","nodeType":"PROCESS","jsEngine":"es6"},"processDate":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchAppointmentWindowWF"}],"contextChangePermitted":true,"name":"processDate","description":"processDate","processRule":"contextVar.loopDate = contextVar.dateList[0];","id":"processDate","nodeType":"PROCESS","jsEngine":"es6"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"decideTimeFrame"}],"name":"start","description":"Start","nodeType":"START"},"fetchAppointmentWindowWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processWindow"}],"ignoreSubContext":true,"name":"fetchAppointmentWindowWF","description":"fetchAppointmentWindowWF","inputVarMap":{"uid":"uid","timezoneOffset":"timezoneOffset","loopDate":"scheduledDate","fetchAvailableAppointmentWindows":"processId"},"id":"fetchAppointmentWindowWF","outputVarMap":{"appointmentWindowsData":"appointmentWindowsData"},"nodeType":"WORKFLOW"},"end":{"name":"end","description":"End","inputVarMap":{"customerResponseData":"customerResponseData","status":"status"},"outputVarMap":{"customerResponseData":"customerResponseData","status":"status"},"nodeType":"END"},"processWindow":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreRecordsPresent"}],"contextChangePermitted":true,"name":"processWindow","description":"processWindow","processRule":"{ function checkIfArray(a) { return (typeof a !== 'undefined' && Array.isArray(a) && a.length > 0); } let response = (typeof contextVar.customerResponseData === 'undefined' || typeof contextVar.customerResponseData.appointmentWindow === 'undefined') ? { 'appointmentWindow': {} } : contextVar.customerResponseData; response.appointmentWindow[contextVar.loopDate] = []; if (checkIfArray(contextVar.appointmentWindowsData)) { contextVar.appointmentWindowsData.forEach(a => { if(a.availableSlots > 0) { response.appointmentWindow[contextVar.loopDate].push({ 'endTimeInUTC': a.endTimeInUTC, 'startTimeInUTC': a.startTimeInUTC, 'appointmentWindowId': a.id, 'availableSlots': a.availableSlots }); } }); } contextVar.customerResponseData = response; const [, ...rest] = contextVar.dateList; contextVar.dateList = rest; }","id":"processWindow","nodeType":"PROCESS","jsEngine":"es6"},"processTimeFrame":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreRecordsPresent"}],"contextChangePermitted":true,"name":"processTimeFrame","description":"processTimeFrame","processRule":"function getFormattedDate(scheduledDate) { let year = scheduledDate.getFullYear(), month = scheduledDate.getMonth() + 1, day = scheduledDate.getDate(); day = day < 10 ? '0' + day : day; month = month < 10 ? '0' + month : month; return (year + '-' + month + '-' + day); } function datesInAWeek(scheduledDate) { let week = []; let dayNum = scheduledDate.getDay(); let initialDate = new Date(scheduledDate); initialDate = new Date(initialDate.setDate(initialDate.getDate() - dayNum)); week.push(getFormattedDate(initialDate)); for (var i = 0; i < 6; i++) { let d = new Date(initialDate.setDate(initialDate.getDate() + 1)); week.push(getFormattedDate(d)); } return week; } function datesInAMonth(scheduledDate) { let week = []; let dayNum = scheduledDate.getDay(); let initialDate = new Date(scheduledDate); initialDate = new Date(initialDate.setDate(initialDate.getDate() - dayNum)); week.push(getFormattedDate(initialDate)); for (var i = 0; i < 31; i++) { let d = new Date(initialDate.setDate(initialDate.getDate() + 1)); week.push(getFormattedDate(d)); } return week; } if (contextVar.fetchWindowForA === 'day') { contextVar.dateList = [contextVar.scheduledDate]; } if (contextVar.fetchWindowForA === 'week') { contextVar.dateList = datesInAWeek(new Date(contextVar.scheduledDate)); } if (contextVar.fetchWindowForA === 'month') { contextVar.dateList = datesInAMonth(new Date(contextVar.scheduledDate)); }","id":"processTimeFrame","nodeType":"PROCESS","jsEngine":"es6"},"workflowNodes":["start","decideTimeFrame","processTimeFrame","areMoreRecordsPresent","processDate","fetchAppointmentWindowWF","processWindow","statusValue","end"],"areMoreRecordsPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processDate"},{"exitPortType":"FalseStep","nodeId":"statusValue"}],"name":"areMoreRecordsPresent","description":"areMoreRecordsPresent","processRule":"typeof contextVar.dateList !== 'undefined' && contextVar.dateList !== '' && Array.isArray(contextVar.dateList) && contextVar.dateList.length > 0","id":"areMoreRecordsPresent","nodeType":"DECISION"}}