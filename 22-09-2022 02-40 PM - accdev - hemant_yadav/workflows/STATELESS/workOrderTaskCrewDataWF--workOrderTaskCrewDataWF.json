{"fetchWorkOrderTaskCrewData":{"filter":"{$workOrderTaskId}={@workOrderTaskId}","models":["workOrderTask","crewAttendance","crew","User","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"processFetchedTaskCrewData"}],"columns":{"crewAttendance":"crewAttendance.attendance","latitude":"User.latitude","workOrderTaskId":"workOrderTask.id","userPhoneNumber":"User.phoneNumber","userEmail":"User.emailId","crewName":"crew.name","isLeadUserId":"IF({$User.id}={$crew.leadUserId},'true','false')","userName":"User.name","workforceUserId":"crewAttendance.workforceUserId","userId":"User.id","longitude":"User.longitude"},"name":"fetchWorkOrderTaskCrewData","description":"fetchWorkOrderTaskCrewData","distinct":true,"links":{"User":"workforce","crewAttendance":"workOrderTask","workforce":"crewAttendance","crew":"workOrderTask"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"fetchTaskCrewData"},"nodeType":"QUERY","getCount":true},"fetchLocalizedKeys":{"filter":"{$listOptionAnswer.listOptionId}='answerYN' || {$listOptionAnswer.listOptionId}='crewInfo'","models":["listOptionAnswer"],"connectors":[{"exitPortType":"NextStep","nodeId":"checkWorkOrderTaskType"}],"columns":{"listOptionAnswerId":"listOptionAnswer.id","listOptionAnswerAnswerOptionText":"listOptionAnswer.answerOptionText"},"name":"fetchLocalizedKeys","description":"fetchLocalizedKeys","outputVarMap":{"data":"localizedData"},"nodeType":"QUERY","translate":true},"processFetchedTaskCrewData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getCrewDetails"}],"contextChangePermitted":true,"name":"processFetchedTaskCrewData","description":"processFetchedTaskCrewData","processRule":"var newFetchCrewData=[];contextVar.fetchTaskCrewData.forEach(function(element){if(typeof element.crewAttendance!='undefined'&&element.crewAttendance!=''){var flags=[],uniqueOutput=[],l=element.crewAttendance.length;for(var j=0;j<l;j++){if(flags[element.crewAttendance[j].crewId])continue;flags[element.crewAttendance[j].crewId]=!0;uniqueOutput.push(element.crewAttendance[j].crewName)} for(var j=0;j<uniqueOutput.length;j++){var crewObj=Object.assign({},element);crewObj.crewName=uniqueOutput[j];crewObj.crewAttendance=removeOtherCrewData(crewObj,uniqueOutput[j]);newFetchCrewData.push(crewObj)}}else{newFetchCrewData.push(element)}});var uniqueData=newFetchCrewData.reduce((acc,current)=>{var x=acc.find(item=>item.userId===current.userId);if(!x){return acc.concat([current])}else{return acc}},[]);contextVar.fetchTaskCrewData=uniqueData;function removeOtherCrewData(obj,crewName){var newCrewAttendanceData=[];obj.crewAttendance.forEach(function(crewelement){if(crewelement.crewName==crewName){newCrewAttendanceData.push(crewelement)}});return newCrewAttendanceData}","nodeType":"PROCESS","jsEngine":"es6"},"getCrewMemberDetails":{"filter":"{$workOrderTaskId}={@workOrderTaskId} AND {$workforceCrewStatusId}='workforceCrewOnCrew'","models":["workOrderTask","User","workforceCrew","workforce","crew"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskCrewData"}],"columns":{"crewLeadUserId":"crew.leadUserId","workforceCrewStatusId":"workforceCrew.statusId","workOrderTaskId":"workOrderTask.id","userPhoneNumber":"User.phoneNumber","crewName":"crew.name","userEmail":"User.emailId","isLeadUserId":"IF({$User.id}={$crew.leadUserId},'true','false')","userName":"User.name","userId":"User.id"},"name":"getCrewMemberDetails","description":"getCrewMemberDetails","distinct":true,"links":{"User":"workforce","workforce":"workforceCrew","workforceCrew":"crew","crew":"workOrderTask"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"crewMemberData"},"nodeType":"QUERY","getCount":true},"processTaskTechnicianData":{"connectors":[{"exitPortType":"NextStep","nodeId":"processDataCount"}],"contextChangePermitted":true,"name":"processTaskTechnicianData","description":"processTaskTechnicianData","processRule":"if (typeof contextVar.fetchTaskTechnicianData != 'undefined' && contextVar.fetchTaskTechnicianData.length > 0) { contextVar.workOrderTechnicianData = [], contextVar.crewAttendanceHistory = []; var obj; var latestCheckIn, latestCheckOut,manualCheckIn='-'; contextVar.fetchTaskTechnicianData.forEach(function (crew) { var localizedKeys = {}; if (typeof contextVar.localizedData !== 'undefined' && contextVar.localizedData !== '') { contextVar.localizedData.forEach(function (element) { localizedKeys[element.listOptionAnswerId] = element.listOptionAnswerAnswerOptionText; }); } contextVar.crewAttendanceHistory = []; if (typeof crew.crewAttendance !== 'undefined' && crew.crewAttendance.length > 0) { latestCheckIn = crew.crewAttendance[crew.crewAttendance.length - 1].checkInTime; latestCheckOut = crew.crewAttendance[crew.crewAttendance.length - 1].checkOutTime; crew.crewAttendance.forEach(function (element) { if(typeof element.siteChangeAddress!=='undefined' &&  element.siteChangeAddress!=='' &&  element.manualCheckIn!='undefined' && element.manualCheckIn=='true'){ manualCheckIn=localizedKeys['yes']; checkInType=true; } else{ manualCheckIn=localizedKeys['no']; checkInType=false; } crewAttendaceObj = { 'checkOutTime': element.checkOutTime, 'checkInTime': element.checkInTime, 'location': element.siteChangeAddress, 'latLong': element.siteChangeLatLong, 'checkInType': element.manualCheckIn == 'true' ? true : false, 'manualCheckIn': element.siteChangeAddress && element.manualCheckIn == 'true' ? localizedKeys['yes'] : localizedKeys['no'], 'reason': element.reason, 'photo': element.photo, 'notes': element.notes }; contextVar.crewAttendanceHistory.push(crewAttendaceObj); }); obj = { 'userId': crew.workforceUserId, 'userPhoneNumber': crew.userPhoneNumber, 'userEmail': crew.userEmail, 'userName': crew.userName, 'crewRole': crew.crewRole, 'latitude': crew.latitude, 'addressUpdated':manualCheckIn, 'longitude': crew.longitude, 'checkInTime': latestCheckIn, 'checkOutTime': latestCheckOut, 'crewMemberAttendance': contextVar.crewAttendanceHistory }; contextVar.workOrderTechnicianData.push(obj); }; }); var temp = []; temp = contextVar.workOrderTechnicianData; if (typeof temp !== 'undefined' && temp.length > 0) { temp.sort(function (a, b) { var titleA = b.checkInTime != 'undefined' && b.checkInTime != '' ? b.checkInTime : '', titleB = a.checkInTime != 'undefined' && a.checkInTime != '' ? a.checkInTime : ''; if (titleA < titleB) return -1; if (titleA > titleB) return 1; return 0; }); } var past = []; var present = []; for (var i = 0; i < temp.length; i++) { if (temp[0].userId == temp[i].userId) { present.push(temp[i]); } else { past.push(temp[i]); } } contextVar.currentAssignee = present; contextVar.previousAssignees = past; contextVar.currentAssigneeAddendance = []; current = contextVar.currentAssignee[0]; var temp = current.crewMemberAttendance; temp.forEach(function (checkin) { obj = { 'manualCheckIn': checkin.manualCheckIn, 'checkOutTime': checkin.checkOutTime, 'checkInTime': checkin.checkInTime, 'reason': checkin.reason, 'photo': checkin.photo, 'notes': checkin.notes, 'latLong': checkin.latLong, 'location': checkin.location ? checkin.location : '-', 'addressUpdated': checkin.manualCheckIn, 'checkInType': checkin.manualCheckIn == 'Yes' ? true : false, 'userName': current.userName, 'userEmail': current.userEmail, 'userPhoneNumber': current.userPhoneNumber }; contextVar.currentAssigneeAddendance.push(obj); }); if (typeof contextVar.currentAssigneeAddendance != 'undefined' && contextVar.currentAssigneeAddendance != '') { contextVar.currentAssigneeAddendanceCount = contextVar.currentAssigneeAddendance.length; } if (typeof contextVar.previousAssignees != 'undefined' && contextVar.previousAssignees != '') { contextVar.previousAssigneeCount = contextVar.previousAssignees.length; } }","nodeType":"PROCESS"},"getWorkOrderTaskDetails":{"filter":"{$workOrderTaskId}={@workOrderTaskId}","models":["workOrderTask","taskType"],"connectors":[{"exitPortType":"NextStep","nodeId":"fetchLocalizedKeys"}],"columns":{"workOrderTaskId":"workOrderTask.id","crewTask":"taskType.crewTask"},"name":"getWorkOrderTaskDetails","description":"getWorkOrderTaskDetails","distinct":true,"links":{"workOrderTask":"taskType"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"workOrderTaskType"},"nodeType":"QUERY","getCount":true},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processFilterForCrewMembers"}],"name":"start","description":"start","nodeType":"START"},"processFilterForCrewMembers":{"connectors":[{"exitPortType":"NextStep","nodeId":"getWorkOrderTaskDetails"}],"contextChangePermitted":true,"name":"processFilterForCrewMembers","description":"processFilterForCrewMembers","processRule":"contextVar.crewFilter = ''; if (typeof contextVar.filter !== 'undefined' && contextVar.filter != '') { contextVar.crewFilter += '{$workOrderTaskId} =  {@workOrderTaskId} AND ' + contextVar.filter; } else { contextVar.crewFilter += '{$workOrderTaskId} =  {@workOrderTaskId}' }","nodeType":"PROCESS"},"workflowNodes":["start","processFilterForCrewMembers","getWorkOrderTaskDetails","fetchLocalizedKeys","checkWorkOrderTaskType","isCrewIsAvailableTask","fetchWorkOrderTaskTechnicianData","fetchWorkOrderTaskCrewData","processFetchedTaskCrewData","getCrewDetails","getCrewMemberDetails","processTaskCrewData","processTaskTechnicianData","processDataCount","end"],"fetchWorkOrderTaskTechnicianData":{"filter":"filter","models":["workOrderTask","crewAttendance","User","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskTechnicianData"}],"columns":{"crewAttendance":"crewAttendance.attendance","latitude":"User.latitude","workOrderTaskId":"workOrderTask.id","userPhoneNumber":"User.phoneNumber","userEmail":"User.emailId","userName":"User.name","workforceUserId":"crewAttendance.workforceUserId","longitude":"User.longitude"},"name":"fetchWorkOrderTaskTechnicianData","description":"fetchWorkOrderTaskTechnicianData","distinct":true,"links":{"User":"workforce","crewAttendance":"workOrderTask","workforce":"crewAttendance"},"inputVarMap":{"crewFilter":"filter","workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"fetchTaskTechnicianData"},"nodeType":"QUERY","getCount":true},"getCrewDetails":{"filter":"{$workOrderTaskId}={@workOrderTaskId}","models":["crew","User","workOrderTask","workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"getCrewMemberDetails"}],"columns":{"crewLeadUserName":"User.name","workOrderTaskId":"workOrderTask.id","crewName":"crew.name","assignedToCrewId":"workOrderTask.assignedToCrewId"},"name":"getCrewDetails","description":"getCrewDetails","distinct":true,"links":{"workOrderTask":"crew","workforce":"User","crew":"workforce"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"crewData"},"nodeType":"QUERY","getCount":true},"processTaskCrewData":{"connectors":[{"exitPortType":"NextStep","nodeId":"processDataCount"}],"contextChangePermitted":true,"name":"processTaskCrewData","description":"processTaskCrewData","processRule":"contextVar.crewMember = []; if (typeof contextVar.crewMemberData !== 'undefined' && contextVar.crewMemberData.length > 0) { contextVar.crewMemberData.forEach(function (val, index) { var localizedKeys = {}; if (typeof contextVar.localizedData !== 'undefined' && contextVar.localizedData !== '') { contextVar.localizedData.forEach(function (element) { localizedKeys[element.listOptionAnswerId] = element.listOptionAnswerAnswerOptionText; }); } crewObject = { 'userId': val.userId, 'userName': val.userName, 'checkIn': '', 'checkOut': '', 'userEmail': val.userEmail, 'checkInType': false, 'userPhoneNumber': val.userPhoneNumber, 'crewName': val.crewName, 'crewRole': val.isLeadUserId !== 'undefined' && val.isLeadUserId == 'true' ? localizedKeys['crewLead'] : localizedKeys['crewMember'], 'manualCheckIn': localizedKeys['no'] ? localizedKeys['no'] : 'No' }; contextVar.crewMember.push(crewObject); }); } contextVar.crewMemberData = contextVar.crewMember; if (typeof contextVar.fetchTaskCrewData != 'undefined' && contextVar.fetchTaskCrewData.length > 0) { contextVar.crewAttendance = []; var attendanceHistory = []; contextVar.crewAttendanceHistory = []; var obj; var latestCheckIn = '', latestCheckOut = '', crewRole = '-', crewName = '-', manualCheckIn = '-'; contextVar.fetchTaskCrewData.forEach(function (crew) { var localizedKeys = {}; if (typeof crew.crewAttendance !== 'undefined' && crew.crewAttendance !== '') { crew.crewAttendance.sort(function (a, b) { var titleA = b.checkInTime != 'undefined' && b.checkInTime != '' ? b.checkInTime : '', titleB = a.checkInTime != 'undefined' && a.checkInTime != '' ? a.checkInTime : ''; if (titleA < titleB) return -1; if (titleA > titleB) return 1; return 0; }); } contextVar.crewAttendanceHistory = []; latestCheckIn = (typeof crew.crewAttendance !== 'undefined' && crew.crewAttendance.length > 0 && typeof crew.crewAttendance[0].checkInTime !== 'undefined' && crew.crewAttendance[0].checkInTime !== '') ? crew.crewAttendance[0].checkInTime : ''; latestCheckOut = (typeof crew.crewAttendance !== 'undefined' && crew.crewAttendance.length > 0 && typeof crew.crewAttendance[0].checkOutTime !== 'undefined' && crew.crewAttendance[0].checkOutTime !== '') ? crew.crewAttendance[0].checkOutTime : ''; if (typeof contextVar.localizedData !== 'undefined' && contextVar.localizedData !== '') { contextVar.localizedData.forEach(function (element) { localizedKeys[element.listOptionAnswerId] = element.listOptionAnswerAnswerOptionText; }); } crew.crewAttendance.forEach(function (element) { crewAttendaceObj = { 'checkOutTime': element.checkOutTime, 'checkInTime': element.checkInTime, 'location': element.manualCheckIn == 'true' ? element.siteChangeAddress : '-', 'latLong': element.siteChangeLatLong, 'manualCheckIn': element.manualCheckIn == 'true' ? localizedKeys['yes'] : localizedKeys['no'], 'checkInType': element.manualCheckIn == 'true' ? true : false, 'crewName': element.crewName, 'crewRole': element.crewLead != 'undefined' && element.crewLead == true ? localizedKeys['crewLead'] : localizedKeys['crewMember'], 'reason': element.reason, 'photo': element.photo, 'notes': element.notes }; contextVar.crewAttendanceHistory.push(crewAttendaceObj); if (typeof crew.crewAttendance != 'undefined' && crew.crewAttendance.length > 0) { attendanceHistory = contextVar.crewAttendanceHistory; } else { attendanceHistory = []; } }); if (typeof crew.crewAttendance != 'undefined' && crew.crewAttendance.length > 0) { if (crew.crewAttendance.length > 1) { checkInType = true; } else { checkInType = false; } crew.crewAttendance.forEach(function (element) { if (typeof element.manualCheckIn != 'undefined' && element.manualCheckIn != '' && element.manualCheckIn === 'true') { manualCheckIn = localizedKeys['yes']; } else { manualCheckIn = localizedKeys['no']; } if (typeof element.crewLead !== 'undefined' && element.crewLead == true) { crewRole = localizedKeys['crewLead']; } else { crewRole = localizedKeys['crewMember']; } if (typeof element.crewName !== 'undefined' && element.crewName !== '') { crewName = element.crewName; } }); } else { checkInType = false; manualCheckIn = localizedKeys['no']; crewName = crew.crewName; if (typeof crew.isLeadUserId !== 'undefined' && crew.isLeadUserId !== '' && crew.isLeadUserId === 'false') { crewRole = localizedKeys['crewMember']; } else { crewRole = localizedKeys['crewLead']; } } obj = { 'userId': crew.workforceUserId, 'userPhoneNumber': crew.userPhoneNumber, 'userEmail': crew.userEmail, 'userName': crew.userName, 'manualCheckIn': manualCheckIn, 'checkIn': latestCheckIn != '' ? latestCheckIn : '', 'checkOut': latestCheckOut != '' ? latestCheckOut : '', 'checkInType': checkInType, 'crewName': crewName, 'crewRole': crewRole, 'latitude': crew.latitude, 'crewMemberAttendance': attendanceHistory }; contextVar.crewAttendance.push(obj); }); } if (typeof contextVar.crewAttendance !== 'undefined' && contextVar.crewAttendance.length > 0) { contextVar.crewMemberCount = contextVar.crewAttendance.length; }","nodeType":"PROCESS","jsEngine":"es6"},"end":{"name":"end","description":"end","inputVarMap":{"previousAssignees":"previousAssignees","crewAttendance":"crewAttendance","currentAssigneeAddendance":"currentAssigneeAddendance","count":"count","crewData":"crewData","currentAssignee":"currentAssignee"},"outputVarMap":{"previousAssignees":"previousAssignees","crewAttendance":"crewAttendance","currentAssigneeAddendance":"count","count":"count","crewData":"crewData","currentAssignee":"currentAssignee"},"nodeType":"END"},"checkWorkOrderTaskType":{"connectors":[{"exitPortType":"NextStep","nodeId":"isCrewIsAvailableTask"}],"contextChangePermitted":true,"name":"checkWorkOrderTaskType","description":"Check WorkOrder Task Type","processRule":"contextVar.resultFlag = false; if (typeof contextVar.workOrderTaskType !== 'undefined' && contextVar.workOrderTaskType !== '' && typeof contextVar.workOrderTaskType[0].crewTask !== 'undefined' && contextVar.workOrderTaskType[0].crewTask !== '') { if (contextVar.workOrderTaskType[0].crewTask === true) { contextVar.resultFlag = true; } }","id":"checkWorkOrderTaskType","nodeType":"PROCESS"},"isCrewIsAvailableTask":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchWorkOrderTaskCrewData"},{"exitPortType":"FalseStep","nodeId":"fetchWorkOrderTaskTechnicianData"}],"name":"isCrewIsAvailableTask","description":"isCrewIsAvailableTask","processRule":"(contextVar.resultFlag === true)","nodeType":"DECISION"},"processDataCount":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processDataCount","description":"processDataCount","processRule":"{ if(typeof contextVar.responseGrid!=='undefined' && contextVar.responseGrid!==''){ if (contextVar.responseGrid ==='crewAttendance') { contextVar.count=contextVar.crewMemberCount } else if (contextVar.responseGrid ==='currentAssigneeAddendance') { contextVar.count=contextVar.currentAssigneeAddendanceCount } else if (contextVar.responseGrid ==='previousAssignees') { contextVar.count=contextVar.previousAssigneeCount } else{ contextVar.count=0; } } }","nodeType":"PROCESS"}}