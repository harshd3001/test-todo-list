{"processMobileTechnicianData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isTechnicianArrayEmpty"}],"contextChangePermitted":true,"name":"processMobileTechnicianData","description":"processMobileTechnicianData","processRule":"{ contextVar.technicianArray = []; contextVar.schedulerTechArray = []; var jsonObj = {}; if (Array.isArray(contextVar.technicianListData) && contextVar.technicianListData.length > 0) { if (Array.isArray(contextVar.techList) && contextVar.techList.length > 0) { contextVar.techList.forEach(function (element) { contextVar.technicianListData.forEach(function (tech) { if (element.id === tech.userId) { jsonObj = { ...element, ...tech }; delete jsonObj.distance; contextVar.technicianArray.push(element.id); contextVar.schedulerTechArray.push(jsonObj); } }); }); contextVar.technicianListData=Array.from(contextVar.schedulerTechArray); } else { contextVar.technicianListData.forEach(function (element) { if (contextVar.technicianArray.indexOf(element.workforceUserId) == -1) contextVar.technicianArray.push(element.workforceUserId); }); } }}","nodeType":"PROCESS","jsEngine":"es6"},"settingCountData":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"settingCountData","description":"settingCountData ","processRule":"{ contextVar.count = 0; if (typeof contextVar.technicianList !== 'undefined' && contextVar.technicianList !== '' && contextVar.technicianList.length > 0) { if (contextVar.technicianList.length > 10) { contextVar.technicianList = contextVar.technicianList.slice(0, 10); } contextVar.count = contextVar.technicianList.length; } }","nodeType":"PROCESS"},"getTaskTypeSkillData":{"models":["taskType","taskTypeSkill","workOrderTask","skillLevel"],"connectors":[{"exitPortType":"NextStep","nodeId":"getTechnicianSkillData"}],"columns":{"skillId":"taskTypeSkill.skillId","skillLevelRank":"skillLevel.rank","minSkillLevelId":"taskTypeSkill.minSkillLevelId"},"description":"getTaskTypeSkillData","distinct":true,"inputVarMap":{"customBatchSize":"batchSize","workOrderTaskId":"workOrderTaskId"},"nodeType":"QUERY","filter":"{$workOrderTask.id} = {@workOrderTaskId}","name":"getTaskTypeSkillData","links":{"taskType":"workOrderTask","taskTypeSkill":"taskType","skillLevel":"taskTypeSkill"},"outputVarMap":{"data":"taskTypeSkillData"},"batchSize":"batchSize","getCount":true},"callProximityScoreWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processProximityScoreData"}],"processId":"S5WSVP8VZ0","name":"callProximityScoreWF","description":"callProximityScoreWF","inputVarMap":{"customBatchSize":"batchSize","baseCall":"proximityCall","startDateFilter":"startDateFilter","endDateFilter":"endDateFilter","destinations":"destinations","proximityTechArray":"proximityTechArray","workOrderTaskId":"workOrderTaskId","taskStartTime":"taskStartTime"},"outputVarMap":{"validTechList":"validTechList","proximityScoreData":"proximityScoreData"},"nodeType":"WORKFLOW"},"processProximityScoreData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isValidTechList"}],"contextChangePermitted":true,"name":"processProximityScoreData","description":"processProximityScoreData","processRule":"{ contextVar.techArray = []; contextVar.googleValidTechList = []; if (typeof contextVar.proximityScoreData != 'undefined') { contextVar.proximityTechArray.forEach(function (element) { if (typeof contextVar.proximityScoreData[element] !== 'undefined' && typeof contextVar.proximityScoreData[element].distanceValue !== 'undefined' && contextVar.proximityScoreData[element] !== '' && contextVar.proximityScoreData[element].distanceValue !== '' && ((parseInt(contextVar.proximityScoreData[element].distanceValue) / 1000) < contextVar.proximityDistanceValue)) { contextVar.techArray.push(element); } else { return; } }); } contextVar.proximityTechArray = JSON.parse(JSON.stringify(contextVar.techArray)); contextVar.googleValidTechList = contextVar.validTechList.filter(function (val) { if (typeof val.duration !== 'undefined' && val.duration !== '') delete val.duration; if (typeof val.distance !== 'undefined' && val.distance !== '') delete val.distance; if (typeof val.distanceValue !== 'undefined' && val.distanceValue !== '') delete val.distanceValue; if (typeof val.durationValue !== 'undefined' && val.durationValue !== '') delete val.durationValue; return (!(contextVar.techArray.indexOf(val.id) == -1)); }); } ","nodeType":"PROCESS"},"appendTechs":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchMoreTechs"}],"contextChangePermitted":true,"name":"appendTechs","description":"appendTechs","processRule":"if (Array.isArray(contextVar.appendTechnicianSkillData)) { contextVar.appendTechnicianSkillData.forEach(function(obj){contextVar.technicianSkillData.push(obj);}); } contextVar.techSkillBatchNumber = contextVar.techSkillBatchNumber + 1;","id":"appendTechs","nodeType":"PROCESS"},"workflowContext":{"techArray":[],"userStatus":"Deactivated","skillList":[],"constraintsCall":"constraints","featureName":"jitScheduler","utilizationScoreData":{},"minimunSkillLevelList":[],"proximityScoreData":{},"message":"calling recommendation WF","workforceStatusId":"workforceActive","schedulerTechArray":[],"customBatchSize":1000,"googleValidTechList":[],"baseCall":"base","experienceScoreData":{},"logLevel":"INFO","proximityTechArray":[],"extraMsg":"RECOMMENDATION: taskSchedulingAndAssignRecommendTechnicianWF","minSkillLevel":[]},"processPublishEventData":{"connectors":[{"exitPortType":"NextStep","nodeId":"settingCountData"}],"contextChangePermitted":true,"name":"processPublishEventData","description":"processPublishEventData ","processRule":"@1EV675AOYF","nodeType":"PROCESS"},"end":{"name":"End","description":"end","inputVarMap":{"data":"data","technicianList":"technicianList","count":"count"},"outputVarMap":{"data":"data","technicianList":"technicianList","count":"count"},"nodeType":"END"},"isSkillFilterApplicable":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getTaskTypeSkillData"},{"exitPortType":"FalseStep","nodeId":"processTechnicianSkillData"}],"name":"isSkillFilterApplicable","description":"isSkillFilterApplicable","processRule":"(contextVar.schedulerSettingUseSkills === true )","nodeType":"DECISION"},"getTechnicianSkillData":{"models":["workforceSkill","skillLevel"],"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfBatches"}],"columns":{"skillId":"workforceSkill.skillId","skillLevelId":"workforceSkill.skillLevelId","userId":"workforceSkill.userId","skillLevelRank":"skillLevel.rank"},"description":"getTechnicianSkillData","distinct":true,"inputVarMap":{"customBatchSize":"batchSize","technicianArray":"technicianArray"},"nodeType":"QUERY","filter":"{$workforceSkill.userId} IN {@technicianArray}","name":"getTechnicianSkillData","links":{"workforceSkill":"skillLevel"},"outputVarMap":{"data":"technicianSkillData","count":"skillCount","batchNumber":"techSkillBatchNumber"},"batchSize":"batchSize","getCount":true},"processTechnicianAvailabilityData":{"connectors":[{"exitPortType":"NextStep","nodeId":"areTechnicianAvailable"}],"contextChangePermitted":true,"name":"processTechnicianAvailabilityData","description":"processTechnicianAvailabilityData","processRule":"{ contextVar.technicianArray = []; if (Array.isArray(contextVar.techniciansData) && contextVar.techniciansData.length > 0) { contextVar.techniciansData.forEach(function (element) { if (element.isAvailable) contextVar.technicianArray.push(element.workforceUserId); }); } }","nodeType":"PROCESS"},"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTechsPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"contextVar.noOfBatches = Math.ceil(contextVar.skillCount / contextVar.customBatchSize);contextVar.techSkillBatchNumber = contextVar.techSkillBatchNumber + 1;","id":"findNumberOfBatches","nodeType":"PROCESS"},"areMoreTechsPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchTechsSkillData"},{"exitPortType":"FalseStep","nodeId":"processTechnicianSkillData"}],"name":"areMoreTechsPresent","description":"areMoreTechsPresent","processRule":"contextVar.noOfBatches >= 2 && contextVar.noOfBatches >= contextVar.techSkillBatchNumber","id":"areMoreTechsPresent","nodeType":"DECISION"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"settingWorkOrderTaskId"}],"name":"Start","description":"Start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"getWorkOrderTaskData"}],"processId":"featureLoggerWF","name":"logContextVar","description":"logContextVar","inputVarMap":{"featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"settingInitialData":{"connectors":[{"exitPortType":"NextStep","nodeId":"callfetchAllTechniciansWF"}],"contextChangePermitted":true,"name":"settingInitialData","description":"settingInitialData","processRule":"{ contextVar.userGroupGroupId = []; if (Array.isArray(contextVar.workOrderTaskData) && contextVar.workOrderTaskData.length > 0) { contextVar.workOrderTaskData.forEach(function (ele) { contextVar.userGroupGroupId.push(ele.groupId); }); contextVar.startDate = contextVar.workOrderTaskData[0].workOrderTaskScheduledDate; contextVar.endDate = contextVar.workOrderTaskData[0].workOrderTaskTaskEndTime; contextVar.startDayDisplayOrder = new Date(contextVar.workOrderTaskData[0].workOrderTaskScheduledDate).getDay(); contextVar.endDayDisplayOrder = new Date(contextVar.workOrderTaskData[0].workOrderTaskTaskEndTime).getDay(); contextVar.startDateFilter = new Date(contextVar.workOrderTaskData[0].workOrderTaskScheduledDate); contextVar.startDateFilter.setUTCHours(0, 0, 0, 0); contextVar.endDateFilter = new Date(contextVar.workOrderTaskData[0].workOrderTaskTaskEndTime); contextVar.endDateFilter.setDate(contextVar.endDateFilter.getDate() + 1); contextVar.endDateFilter.setUTCHours(0, 0, 0, 0); contextVar.startDateFilter = new Date(contextVar.startDateFilter).toISOString().replace('T', ' ').replace('Z', ''); contextVar.endDateFilter = new Date(contextVar.endDateFilter).toISOString().replace('T', ' ').replace('Z', ''); contextVar.workOrderTaskSiteId = contextVar.workOrderTaskData[0].siteId; contextVar.taskStartTime = contextVar.workOrderTaskData[0].workOrderTaskScheduledDate; contextVar.destinations = contextVar.workOrderTaskData[0].destinations; contextVar.workOrderTaskTaskTypeId = contextVar.workOrderTaskData[0].workOrderTaskTaskTypeId; if (typeof contextVar.workOrderTaskIdList === 'undefined') { contextVar.workOrderTaskIdList = []; contextVar.workOrderTaskIdList.push(contextVar.workOrderTaskId) } } }","id":"settingInitialData","nodeType":"PROCESS"},"isValidTechList":{"connectors":[{"exitPortType":"TrueStep","nodeId":"constraintsCalculationProcessEventCall"},{"exitPortType":"FalseStep","nodeId":"settingCountData"}],"name":"isValidTechList","description":"isValidTechList","processRule":"(contextVar.googleValidTechList.length > 0)","nodeType":"DECISION"},"callfetchAllTechniciansWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processMobileTechnicianData"}],"processId":"fetchAllTechniciansWF","name":"callfetchAllTechniciansWF","description":"callfetchAllTechniciansWF","inputVarMap":{"startDateFilter":"startDateFilter","endDate":"endDate","endDateFilter":"endDateFilter","startDate":"startDate","userGroupGroupId":"userGroupGroupId"},"outputVarMap":{"technicianListData":"technicianListData"},"nodeType":"WORKFLOW"},"areTechnicianAvailable":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getSchedulerSettingData"},{"exitPortType":"FalseStep","nodeId":"settingCountData"}],"name":"areTechnicianAvailable","description":"areTechnicianAvailable","processRule":"(contextVar.technicianArray.length > 0)","nodeType":"DECISION"},"processSchedulerSettingData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isSkillFilterApplicable"}],"contextChangePermitted":true,"name":"processSchedulerSettingData","description":"processSchedulerSettingData ","processRule":"{ if (typeof contextVar.schedulerSettingData != 'undefined' && contextVar.schedulerSettingData.length > 0) { contextVar.optimizeAllTask = contextVar.schedulerSettingData[0].schedulerSettingOptimizeFor; contextVar.schedulerSettingUseSkills = contextVar.schedulerSettingData[0].schedulerSettingUseSkills; contextVar.proximityDistanceValue = parseInt(contextVar.schedulerSettingData[0].schedulerSettingProximityRange); } else { contextVar.proximityDistanceValue = 1000; contextVar.optimizeAllTask = 'experienceScore'; contextVar.schedulerSettingUseSkills = false; } }","nodeType":"PROCESS"},"workflowNodes":["start","settingWorkOrderTaskId","logContextVar","getWorkOrderTaskData","settingInitialData","callfetchAllTechniciansWF","processMobileTechnicianData","isTechnicianArrayEmpty","callTechnicianAvailabilityWF","processTechnicianAvailabilityData","areTechnicianAvailable","getSchedulerSettingData","processSchedulerSettingData","isSkillFilterApplicable","getTaskTypeSkillData","getTechnicianSkillData","findNumberOfBatches","areMoreTechsPresent","fetchTechsSkillData","appendTechs","processTechnicianSkillData","isProximityTechArrayValid","processTechArray","callProximityScoreWF","processProximityScoreData","isValidTechList","constraintsCalculationProcessEventCall","processPublishEventData","settingCountData","end"],"callTechnicianAvailabilityWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processTechnicianAvailabilityData"}],"processId":"8EIKAE8E10","name":"callTechnicianAvailabilityWF","description":"callTechnicianAvailabilityWF","inputVarMap":{"technicianArray":"technicianArray","timezoneOffset":"timezoneOffset","endDate":"endDate","startDateFilter":"startDateFilter","technicianListData":"techniciansData","workflowCall":"workflowCall","endDateFilter":"endDateFilter","endDayDisplayOrder":"endDayDisplayOrder","workOrderTaskId":"workOrderTaskId","startDayDisplayOrder":"startDayDisplayOrder","startDate":"startDate"},"outputVarMap":{"techniciansData":"techniciansData"},"nodeType":"WORKFLOW"},"isTechnicianArrayEmpty":{"connectors":[{"condition":"contextVar.technicianArray.length > 0","exitPortType":"NextStep","nodeId":"callTechnicianAvailabilityWF"},{"DefaultStep":true,"condition":"contextVar.technicianArray.length === 0","exitPortType":"NextStep","nodeId":"settingCountData"}],"name":"isTechnicianArrayEmpty","description":"isTechnicianArrayEmpty","nodeType":"MULTIDECISION"},"getWorkOrderTaskData":{"filter":"{$workOrderTaskId} = {@workOrderTaskId} and ({$taskType.mobileProcessId}={$ZProcess.id} and {$ZProcess.projectId}={$ZProjectUser.projectId} and {$ZProjectUser.groupId}={$groupId})","models":["UserGroup","site","User","taskType","workOrderTask","ZProjectUser","ZProcess"],"connectors":[{"exitPortType":"NextStep","nodeId":"settingInitialData"}],"columns":{"siteRegionId":"site.regionId","workOrderTaskTaskEndTime":"workOrderTask.dueDate","groupId":"UserGroup.groupId","taskTypeMobileProcessId":"taskType.mobileProcessId","latitude":"site.latitude","destinations":"CONCAT({$site.latitude},',',{$site.longitude},'|')","siteName":"site.name","siteCustomerId":"site.customerId","taskTypeName":"taskType.name","workOrderTaskId":"workOrderTask.id","workOrderTaskWorkOrderId":"workOrderTask.workOrderId","siteId":"site.id","workOrderTaskScheduledDate":"workOrderTask.scheduledDate","workOrderTaskEstimatedDuration":"workOrderTask.estimatedDuration","workOrderTaskTaskTypeId":"workOrderTask.taskTypeId","longitude":"site.longitude"},"name":"getWorkOrderTaskData","description":"getWorkOrderTaskData","distinct":true,"links":{"taskType":"workOrderTask","site":"workOrderTask","UserGroup":"User"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"workOrderTaskData"},"nodeType":"QUERY","getCount":true},"getSchedulerSettingData":{"models":["schedulerSetting"],"connectors":[{"exitPortType":"NextStep","nodeId":"processSchedulerSettingData"}],"columns":{"schedulerSettingUseSkills":"schedulerSetting.useSkills","schedulerSettingOptimizeFor":"schedulerSetting.optimizeFor","schedulerSettingId":"schedulerSetting.id","schedulerSettingProximityRange":"schedulerSetting.proximityRange"},"name":"getSchedulerSettingData","description":"getSchedulerSettingData","distinct":true,"inputVarMap":{},"outputVarMap":{"data":"schedulerSettingData"},"nodeType":"QUERY","getCount":true},"constraintsCalculationProcessEventCall":{"eventId":"constraintsCalculationProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"processPublishEventData"}],"contextChangePermitted":true,"name":"constraintsCalculationProcessEventCall","description":"constraintsCalculationProcessEventCall","inputVarMap":{"techArray":"techArray","googleValidTechList":"validTechList","localize":"localize","workOrderTaskSiteId":"workOrderTaskSiteId","constraintsCall":"proximityCall","startDateFilter":"startDateFilter","endDateFilter":"endDateFilter","destinations":"destinations","proximityTechArray":"proximityTechArray","workOrderTaskId":"workOrderTaskId","workOrderTaskTaskTypeId":"workOrderTaskTaskTypeId","taskStartTime":"taskStartTime"},"outputVarMap":{},"nodeType":"PUBLISH","captureOutput":true},"processTechArray":{"connectors":[{"exitPortType":"NextStep","nodeId":"constraintsCalculationProcessEventCall"}],"contextChangePermitted":true,"name":"processTechArray","description":"processTechArray","processRule":"{contextVar.techArray=contextVar.proximityTechArray; contextVar.googleValidTechList = contextVar.schedulerTechArray;}","nodeType":"PROCESS"},"processTechnicianSkillData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isProximityTechArrayValid"}],"contextChangePermitted":true,"name":"processTechnicianSkillData","description":"processTechnicianSkillData","processRule":"{ contextVar.proximityTechArray = []; if (contextVar.schedulerSettingUseSkills) { var techniciansSkill = {}; if (Array.isArray(contextVar.technicianSkillData) && contextVar.technicianSkillData.length > 0) { contextVar.technicianSkillData.forEach(function (element) { if (typeof techniciansSkill[element.userId] === 'undefined') { techniciansSkill[element.userId] = {}; contextVar.proximityTechArray.push(element.userId); } techniciansSkill[element.userId][element.skillId] = element.skillLevelRank; }); if (Array.isArray(contextVar.taskTypeSkillData) && contextVar.taskTypeSkillData.length > 0) { for (var tech in techniciansSkill) { for (var element of contextVar.taskTypeSkillData) { if (typeof techniciansSkill[tech][element.skillId] === 'undefined' || techniciansSkill[tech][element.skillId] < element.skillLevelRank) { contextVar.proximityTechArray.splice(contextVar.proximityTechArray.indexOf(tech), 1); break; } } } } } contextVar.technicianArray = JSON.parse(JSON.stringify(contextVar.proximityTechArray)); } else { contextVar.proximityTechArray = JSON.parse(JSON.stringify(contextVar.technicianArray)); } }","nodeType":"PROCESS","jsEngine":"es6"},"fetchTechsSkillData":{"models":["workforceSkill","skillLevel"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendTechs"}],"columns":{"skillId":"workforceSkill.skillId","skillLevelId":"workforceSkill.skillLevelId","userId":"workforceSkill.userId","skillLevelRank":"skillLevel.rank"},"distinct":true,"description":"Fetch Task Details","inputVarMap":{"customBatchSize":"batchSize","technicianArray":"technicianArray","minimunSkillLevelList":"minimunSkillLevelList","techSkillBatchNumber":"batchNumber"},"nodeType":"QUERY","filter":"{$workforceSkill.userId} IN {@technicianArray}","name":"fetchTechsSkillData","links":{"workforceSkill":"skillLevel"},"outputVarMap":{"data":"appendTechnicianSkillData","count":"count"},"id":"fetchTechsSkillData","batchSize":"batchSize","getCount":true,"batchNumber":"batchNumber"},"settingWorkOrderTaskId":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"contextChangePermitted":true,"name":"settingWorkOrderTaskId","description":"settingWorkOrderTaskId params for workflow","processRule":"{ if (typeof contextVar.workflowCall === 'undefined')contextVar.workOrderTaskId = contextVar.taskDetails.id;}","nodeType":"PROCESS"},"isProximityTechArrayValid":{"connectors":[{"condition":"(typeof contextVar.workflowCall === 'undefined' || contextVar.workflowCall === '') && contextVar.proximityTechArray.length>0","exitPortType":"NextStep","nodeId":"processTechArray"},{"condition":"typeof contextVar.workflowCall !== 'undefined' && contextVar.workflowCall !== '' && contextVar.proximityTechArray.length>0","exitPortType":"NextStep","nodeId":"callProximityScoreWF"},{"DefaultStep":true,"condition":"typeof contextVar.workflowCall !== 'undefined' && contextVar.workflowCall !== '' && contextVar.proximityTechArray.length < 1","exitPortType":"NextStep","nodeId":"settingCountData"}],"name":"isProximityTechArrayValid","description":"isProximityTechArrayValid","nodeType":"MULTIDECISION"}}