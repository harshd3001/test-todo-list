{"fetchWorkOrderTaskDetails":{"filter":"{$workOrderTaskId} = {@workOrderTaskId}","models":["customerPortalOrderDetails"],"connectors":[{"exitPortType":"NextStep","nodeId":"processData"}],"columns":{"workOrderTaskId":"jobId","zones":"zones"},"name":"fetchWorkOrderTaskDetails","description":"fetchWorkOrderTaskDetails","inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"workOrderTaskData"},"nodeType":"QUERY"},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processData","description":"processData","processRule":"{ if (Array.isArray(contextVar.workOrderTaskData)) { for (let val in contextVar.workOrderTaskData[0]) { contextVar[val] = contextVar.workOrderTaskData[0][val]; } contextVar.dynamicComponent = []; if (contextVar.zones) { contextVar.zones = JSON.parse(contextVar.zones); for (let val in contextVar.zones) { let obj = JSON.parse(JSON.stringify(contextVar.section)); obj.id = val; obj.isDynamic = true; obj.label = contextVar.zones[val].title; let index = 0; for (let value of contextVar.zones[val].fields) { if (value.component !== 'text') { let componentObj = JSON.parse(JSON.stringify(contextVar.textarea)); componentObj.id = value.options.label ? (val + '_' + value.options.label.replace(' ', '_') + index) : (value.options.title ? (val + '_' + value.options.title.replace(' ', '_') + index) : val + index); componentObj.title = value.options.title ? value.options.title : (value.options.label ? value.options.label : value.options.name); componentObj.label = value.options.label ? value.options.label : (value.options.title ? value.options.title : value.options.name); if (value.component === 'switch') { componentObj.value = 'No'; if (value.options.value) { componentObj.value = 'Yes'; } } else if (value.component === 'checkbox') { componentObj.value = value.options.value.join(','); } else { componentObj.value = value.options.value; } obj.children.push(componentObj); index++; } } contextVar.dynamicComponent.push(obj); } } } }","nodeType":"PROCESS","jsEngine":"es6"},"workflowContext":{"textarea":{"isDynamic":true,"disabled":false,"readOnly":true,"id":"textarea_2027","label":"TextArea","type":"textarea","title":"textarea_2027","value":"","placeHolder":""},"section":{"isDynamic":true,"hidden":false,"children":[],"id":"id","label":"title","type":"section"}},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchWorkOrderTaskDetails"}],"name":"start","description":"start","nodeType":"START"},"end":{"name":"end","description":"End","inputVarMap":{"dynamicComponent":"dynamicComponent"},"outputVarMap":{"dynamicComponent":"dynamicComponent"},"nodeType":"END"},"workflowNodes":["start","fetchWorkOrderTaskDetails","processData","end"]}