{"getWorkGroupFilterMethods":{"filter":"{$listOptionAnswer.listOptionId} = {@workGroupFilterMethodListOptionId}","models":["listOptionAnswer"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkGroupFilterMethodList"}],"columns":{"filterMethod":"listOptionAnswer.id"},"name":"getWorkGroupFilterMethods","description":"getWorkGroupFilterMethods","inputVarMap":{"workGroupFilterMethodListOptionId":"workGroupFilterMethodListOptionId"},"outputVarMap":{"data":"workGroupFilterMethodList"},"nodeType":"QUERY"},"fetchWorkOrderTaskInfo":{"filter":"{$workOrderTask.id} IN {@workOrderTaskIdList}","models":["workOrderTask","site","workOrder"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkOrderTaskInfo"}],"columns":{"taskType":"workOrderTask.taskTypeId","workOrderType":"workOrder.workOrderTypeId","workOrderTaskId":"workOrderTask.id","region":"site.regionId","customer":"workOrder.customerId"},"name":"fetchWorkOrderTaskInfo","distinct":true,"description":"fetchWorkOrderTaskInfo","links":{"workOrder":"workOrderTask","site":"workOrderTask"},"inputVarMap":{"workOrderTaskIdList":"workOrderTaskIdList"},"outputVarMap":{"data":"workOrderTaskInfo"},"nodeType":"QUERY"},"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreBatchesPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"contextVar.noOfBatches = Math.ceil(contextVar.userWorkGroupFilterDataCount / contextVar.customBatchSize);contextVar.userWorkGroupFilterDataBatchNumber++;","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"getWorkGroupFilterMethods"}],"name":"start","description":"Start","nodeType":"START"},"processWorkGroupFilterData":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processWorkGroupFilterData","description":"processWorkGroupFilterData","processRule":"{ if (typeof contextVar.workOrderTaskIdList !== 'undefined' && contextVar.workOrderTaskIdList.length > 0) { /* In this if condition, we process and construct data when this workflow is called with a taskId*/ var filterIdMapForTask = {}; /* In the below code, we are making an object key pair of all the filterIds as key and array of all its workGroupIds as value */ if (typeof contextVar.workGroupDataForTaskFilters !== 'undefined' && contextVar.workGroupDataForTaskFilters.length > 0) { contextVar.workGroupDataForTaskFilters.forEach(function (element) { if (typeof filterIdMapForTask[element.filterId] === 'undefined') { filterIdMapForTask[element.filterId] = { 'filterMethod': element.filterMethod, 'filterIds': [element.workGroupId] } } else { filterIdMapForTask[element.filterId].filterIds.push(element.workGroupId); } }); } /*In the below code snippet, we are forming the final data with workOrderTaskIds as key and all the work group data as value */ if (typeof contextVar.workOrderTaskInfo !== 'undefined' && contextVar.workOrderTaskInfo.length > 0) { contextVar.workOrderTaskInfo.forEach(function (task) { var data = { 'isAllFilterApplied': false }; for (var key in task) { if (key !== 'workOrderTaskId') { data[key] = { 'workGroupIdList': (filterIdMapForTask[task[key]] !== undefined && filterIdMapForTask[task[key]].filterMethod == key) ? filterIdMapForTask[task[key]].filterIds : {}, 'filterIdList': [task[key]] } } } contextVar.finalFilteredData[task.workOrderTaskId] = data; }); } } else { /* In this else condition, we process and construct data when this workflow is called with a userId*/ if (typeof contextVar.userWorkGroupFilterData !== 'undefined' && Array.isArray(contextVar.userWorkGroupFilterData) && contextVar.userWorkGroupFilterData.length > 0) { contextVar.userWorkGroupFilterData.forEach(function (element) { if (typeof contextVar.finalFilteredData[element.userId] === 'undefined') { contextVar.finalFilteredData[element.userId] = { 'isAllFilterApplied': false }; } if (element.filterMethod === 'all') { contextVar.finalFilteredData[element.userId].isAllFilterApplied = true; } else if (contextVar.finalFilteredData[element.userId].isAllFilterApplied !== true) { if (typeof contextVar.finalFilteredData[element.userId][element.filterMethod] === 'undefined') { contextVar.finalFilteredData[element.userId][element.filterMethod] = { 'workGroupIdList': [], 'filterIdList': [] }; } if (contextVar.finalFilteredData[element.userId][element.filterMethod].workGroupIdList.indexOf(element.workGroupId) < 0) { contextVar.finalFilteredData[element.userId][element.filterMethod].workGroupIdList.push(element.workGroupId); } if (contextVar.finalFilteredData[element.userId][element.filterMethod].filterIdList.indexOf(element.filterId) < 0) { contextVar.finalFilteredData[element.userId][element.filterMethod].filterIdList.push(element.filterId); } } }); } else { contextVar.userList.forEach(function (user) { contextVar.finalFilteredData[user] = { 'isAllFilterApplied': true }; }) } } }","nodeType":"PROCESS"},"getUserWorkGroupFilters":{"models":["workforceWorkGroup","workGroupFilter","workGroup"],"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfBatches"}],"columns":{"filterId":"workGroupFilter.filterId","filterMethod":"workGroup.filterMethod","userId":"workforceWorkGroup.workforceUserId","workGroupId":"workforceWorkGroup.workGroupId"},"outerJoinOnModel":"workGroup","distinct":true,"description":"getUserWorkGroupFilters","inputVarMap":{"customBatchSize":"batchSize","userList":"userList","userWorkGroupFilterDataBatchNumber":"batchNumber"},"nodeType":"QUERY","filter":"{$userId} IN {@userList}","name":"getUserWorkGroupFilters","links":{"workforceWorkGroup":"workGroup","workGroupFilter":"workGroup"},"outputVarMap":{"data":"userWorkGroupFilterData","count":"userWorkGroupFilterDataCount","batchNumber":"userWorkGroupFilterDataBatchNumber"},"batchSize":"batchSize","getCount":true,"batchNumber":"batchNumber"},"workflowApproachDecision":{"connectors":[{"exitPortType":"FalseStep","nodeId":"getUserWorkGroupFilters"},{"exitPortType":"TrueStep","nodeId":"fetchWorkOrderTaskInfo"}],"name":"workflowApproachDecision","description":"workflowApproachDecision","processRule":"typeof contextVar.workOrderTaskIdList !== 'undefined' && contextVar.workOrderTaskIdList.length>0","nodeType":"DECISION"},"processWorkOrderTaskInfo":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchWorkGroupsForTaskFilters"}],"contextChangePermitted":true,"name":"processWorkOrderTaskInfo","description":"processWorkOrderTaskInfo","processRule":"{ contextVar.workOrderTaskFilterIds = []; if (Array.isArray(contextVar.workOrderTaskInfo) && contextVar.workOrderTaskInfo.length > 0) { contextVar.workOrderTaskInfo.forEach(function (task) { for (var key in task) { if (key !== 'workOrderTaskId') contextVar.workOrderTaskFilterIds.push(task[key]); } contextVar.workOrderTaskFilterIds = Array.from(new Set(contextVar.workOrderTaskFilterIds)); }); } }","nodeType":"PROCESS","jsEngine":"es6"},"workflowNodes":["start","getWorkGroupFilterMethods","processWorkGroupFilterMethodList","workflowApproachDecision","getUserWorkGroupFilters","findNumberOfBatches","areMoreBatchesPresent","getMoreUserWorkGroupFilters","appendUserWorkGroupData","fetchWorkOrderTaskInfo","processWorkOrderTaskInfo","fetchWorkGroupsForTaskFilters","processWorkGroupFilterData","end"],"areMoreBatchesPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getMoreUserWorkGroupFilters"},{"exitPortType":"FalseStep","nodeId":"processWorkGroupFilterData"}],"name":"areMoreBatchesPresent","description":"areMoreBatchesPresent","processRule":"contextVar.noOfBatches >= 2 && contextVar.noOfBatches >= contextVar.userWorkGroupFilterDataBatchNumber","nodeType":"DECISION"},"workflowContext":{"customBatchSize":1000,"workGroupFilterMethodListOptionId":"workGroupFilter","customBatchNumber":0,"finalFilteredData":{},"filterMethods":[]},"appendUserWorkGroupData":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreBatchesPresent"}],"contextChangePermitted":true,"name":"appendUserWorkGroupData","description":"appendUserWorkGroupData","processRule":"{ if (Array.isArray(contextVar.userWorkGroupFilterDataToAppend)) { contextVar.userWorkGroupFilterData = contextVar.userWorkGroupFilterData.concat(contextVar.userWorkGroupFilterDataToAppend); contextVar.userWorkGroupFilterDataBatchNumber++; } }","nodeType":"PROCESS"},"processWorkGroupFilterMethodList":{"connectors":[{"exitPortType":"NextStep","nodeId":"workflowApproachDecision"}],"contextChangePermitted":true,"name":"processWorkGroupFilterMethodList","description":"processWorkGroupFilterMethodList","processRule":"{ if (Array.isArray(contextVar.workGroupFilterMethodList) && contextVar.workGroupFilterMethodList.length > 0) { contextVar.workGroupFilterMethodList.forEach(function(element){ contextVar.filterMethods.push(element.filterMethod); }); } }","nodeType":"PROCESS"},"end":{"name":"end","description":"End","inputVarMap":{"finalFilteredData":"finalFilteredData","filterMethods":"filterMethods"},"outputVarMap":{"finalFilteredData":"finalFilteredData","filterMethods":"filterMethods"},"nodeType":"END"},"fetchWorkGroupsForTaskFilters":{"filter":"{$workGroupFilter.filterId} IN {@workOrderTaskFilterIds}","models":["workGroup","workGroupFilter"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkGroupFilterData"}],"columns":{"filterId":"workGroupFilter.filterId","filterMethod":"workGroup.filterMethod","workGroupId":"workGroup.id"},"name":"fetchWorkGroupsForTaskFilters","description":"fetchWorkGroupsForTaskFilters","links":{"workGroup":"workGroupFilter"},"inputVarMap":{"workOrderTaskFilterIds":"workOrderTaskFilterIds"},"outputVarMap":{"data":"workGroupDataForTaskFilters"},"nodeType":"QUERY","getCount":true},"getMoreUserWorkGroupFilters":{"models":["workforceWorkGroup","workGroupFilter","workGroup"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendUserWorkGroupData"}],"columns":{"filterId":"workGroupFilter.filterId","filterMethod":"workGroup.filterMethod","userId":"workforceWorkGroup.workforceUserId","workGroupId":"workforceWorkGroup.workGroupId"},"outerJoinOnModel":"workGroup","distinct":true,"description":"getMoreUserWorkGroupFilters","inputVarMap":{"customBatchSize":"batchSize","userList":"userList","userWorkGroupFilterDataBatchNumber":"batchNumber"},"nodeType":"QUERY","filter":"{$userId} IN {@userList}","name":"getMoreUserWorkGroupFilters","links":{"workforceWorkGroup":"workGroup","workGroupFilter":"workGroup"},"outputVarMap":{"data":"userWorkGroupFilterDataToAppend"},"batchSize":"batchSize","getCount":true,"batchNumber":"batchNumber"}}