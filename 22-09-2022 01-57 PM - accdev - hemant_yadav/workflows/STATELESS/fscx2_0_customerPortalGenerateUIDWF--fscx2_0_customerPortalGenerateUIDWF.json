{"generateUID":{"connectors":[{"exitPortType":"NextStep","nodeId":"processUIDData"}],"name":"generateUID","description":"generateUID","networkId":"fscx2_0_createUid","inputVarMap":{"UIDData":"payload"},"outputVarMap":{"data":"UIDUpsertData"},"nodeType":"NETWORK"},"isCustomerPortalInstalled":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processTaskData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isCustomerPortalInstalled","description":"isCustomerPortalInstalled","processRule":"{typeof contextVar.isCustomerPortalOrderDetailsModelPresent != 'undefined' && contextVar.isCustomerPortalOrderDetailsModelPresent == true}","nodeType":"DECISION","jsEngine":"es6"},"newUIDRequired":{"connectors":[{"condition":"!Array.isArray(contextVar.customerPortalOrderDetailsData) && contextVar.data.isAppointmentBasedTask && contextVar.data.statusId != 'workOrderTaskDraft'","exitPortType":"NextStep","nodeId":"fetchEntityConfig"},{"condition":"Array.isArray(contextVar.customerPortalOrderDetailsData) && !contextVar.data.isAppointmentBasedTask && contextVar.data.statusId != 'workOrderTaskDraft'","exitPortType":"NextStep","nodeId":"upsertOrDeleteCustomerPortalOrderDetailsData"},{"DefaultStep":true,"condition":"Array.isArray(contextVar.customerPortalOrderDetailsData)","exitPortType":"NextStep","nodeId":"end"}],"name":"newUIDRequired","description":"newUIDRequired","nodeType":"MULTIDECISION"},"processTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getCustomerPortalOrderDetails"}],"contextChangePermitted":true,"name":"processTaskData","description":"processTaskData","processRule":"{ if (contextVar.data) { for (let key in contextVar.data) { contextVar[key] = contextVar.data[key]; } } }","nodeType":"PROCESS","jsEngine":"es6"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"name":"start","description":"start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfCustomerPortalOrderDetailsModelPresentWF"}],"name":"logContextVar","description":"logContextVar","inputVarMap":{"featureLoggerWF":"processId","featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"callTaskDataWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processData"}],"ignoreSubContext":true,"name":"callTaskDataWF","description":"callTaskDataWF","inputVarMap":{"id":"workOrderTaskId","taskDataProcessId":"processId"},"outputVarMap":{"workOrderTaskData":"workOrderTaskData"},"nodeType":"WORKFLOW"},"upsertOrDeleteCustomerPortalOrderDetailsData":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"fscx2_0_customerPortalOrderDetailsModelWF","ignoreSubContext":true,"name":"upsertOrDeleteCustomerPortalOrderDetailsData","description":"upsertOrDeleteCustomerPortalOrderDetailsData","inputVarMap":{"customerPortalOrderDetailsData":"customerPortalOrderDetails","operation":"operation"},"outputVarMap":{},"nodeType":"WORKFLOW"},"workflowNodes":["start","logContextVar","checkIfCustomerPortalOrderDetailsModelPresentWF","isCustomerPortalInstalled","processTaskData","getCustomerPortalOrderDetails","newUIDRequired","fetchEntityConfig","callTaskDataWF","processData","generateUID","processUIDData","upsertOrDeleteCustomerPortalOrderDetailsData","end"],"checkIfCustomerPortalOrderDetailsModelPresentWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"isCustomerPortalInstalled"}],"contextChangePermitted":true,"name":"checkIfCustomerPortalOrderDetailsModelPresentWF","description":"checkIfCustomerPortalOrderDetailsModelPresentWF","inputVarMap":{"customerPortalOrderDetailsModelPresentProcessId":"processId"},"outputVarMap":{"isCustomerPortalOrderDetailsModelPresent":"isCustomerPortalOrderDetailsModelPresent"},"nodeType":"WORKFLOW"},"processUIDData":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertOrDeleteCustomerPortalOrderDetailsData"}],"contextChangePermitted":true,"name":"processUIDData","description":"processUIDData","processRule":"{contextVar.customerPortalOrderDetailsData = []; var zonePresent = false; if (typeof contextVar.zones != 'undefined' && Object.keys(contextVar.zones).length) { for (let key in contextVar.zones) { let fields = contextVar.zones[key].fields; for (let ele of fields) { if (ele.component != 'text') { zonePresent = true; break; } } break; } } if (Array.isArray(contextVar.UIDUpsertData) && contextVar.UIDUpsertData.length > 0 && typeof contextVar.confirmationNeededInPortal != 'undefined' && contextVar.confirmationNeededInPortal && !zonePresent) { contextVar.customerPortalOrderDetailsData.push({ 'UID': contextVar.UIDUpsertData[0].data[0].UID, 'jobId': contextVar.UIDUpsertData[0].data[0].taskIdentifier, 'sendCustomerNotifications': true, 'statusId': contextVar.workOrderTaskData.workOrderTaskAppointmentWindowStartDate ? 'fscx2_0_userBookingUnconfirmed' : 'fscx2_0_bookingCreated', 'statusTargetModel': 'customerPortalOrderDetails' }); } else if (Array.isArray(contextVar.UIDUpsertData) && contextVar.UIDUpsertData.length > 0 && zonePresent) { contextVar.customerPortalOrderDetailsData.push({ 'UID': contextVar.UIDUpsertData[0].data[0].UID, 'jobId': contextVar.UIDUpsertData[0].data[0].taskIdentifier, 'sendCustomerNotifications': true, 'statusId': contextVar.workOrderTaskData.workOrderTaskAppointmentWindowStartDate ? 'fscx2_0_additionalInformationNotSubmitted' : 'fscx2_0_bookingCreated', 'statusTargetModel': 'customerPortalOrderDetails' }); } else { contextVar.customerPortalOrderDetailsData.push({ 'UID': contextVar.UIDUpsertData[0].data[0].UID, 'jobId': contextVar.UIDUpsertData[0].data[0].taskIdentifier, 'sendCustomerNotifications': true, 'statusId': contextVar.workOrderTaskData.workOrderTaskAppointmentWindowStartDate ? 'fscx2_0_bookingConfirmed' : 'fscx2_0_bookingCreated', 'statusTargetModel': 'customerPortalOrderDetails' }); }}","nodeType":"PROCESS","jsEngine":"es6"},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"generateUID"}],"contextChangePermitted":true,"name":"processData","description":"processData","processRule":"{ if (Array.isArray(contextVar.entityConfigData)) { for (let value of contextVar.entityConfigData) { if (value.configKey === 'configurations') { value.configValue = JSON.parse(value.configValue); for (let key in value.configValue) { contextVar[key] = value.configValue[key]; } } } } contextVar.operation = 'upsert'; if (contextVar.workOrderTaskData) { contextVar.UIDData = {}; let data = []; data.push({ 'taskIdentifier': contextVar.id, 'preferredNotification': contextVar.preferredNotification ? contextVar.preferredNotification : 'SMS', 'phone': contextVar.workOrderTaskData.siteContactPhone, 'email': contextVar.workOrderTaskData.siteContactEmail }); contextVar.UIDData.data = data; } }","nodeType":"PROCESS","jsEngine":"es6"},"workflowContext":{"customerPortalOrderDetailsModelPresentProcessId":"checkIfCustomerPortalOrderDetailsModelPresentWF","featureLoggerWF":"featureLoggerWF","configScopeArray":["customerPortal"],"featureName":"customerPortal","extraMsg":"fscx2_0_customerPortalGenerateUIDWF","operation":"delete","taskDataProcessId":"FQJXQ58NSK"},"getCustomerPortalOrderDetails":{"filter":"{$jobId} = {@id}","models":["customerPortalOrderDetails"],"connectors":[{"exitPortType":"NextStep","nodeId":"newUIDRequired"}],"columns":{"jobId":"jobId","UID":"UID","statusId":"statusId","recver":"recver"},"name":"getCustomerPortalOrderDetails","description":"getCustomerPortalOrderDetails","inputVarMap":{"id":"id"},"outputVarMap":{"data":"customerPortalOrderDetailsData"},"nodeType":"QUERY"},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"fetchEntityConfig":{"filter":"{$configScope} IN {@configScopeArray}","models":["EntityConfig"],"connectors":[{"exitPortType":"NextStep","nodeId":"callTaskDataWF"}],"columns":{"configKey":"EntityConfig.configKey","valueType":"EntityConfig.valueType","configScope":"EntityConfig.configScope","configValue":"EntityConfig.configValue"},"name":"fetchEntityConfig","description":"fetchEntityConfig","inputVarMap":{"configScopeArray":"configScopeArray"},"outputVarMap":{"data":"entityConfigData"},"nodeType":"QUERY"}}