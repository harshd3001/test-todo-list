{"processLoopData":{"connectors":[{"exitPortType":"NextStep","nodeId":"baseConstraintsWFCall"}],"contextChangePermitted":true,"name":"processLoopData","description":"processLoopData","processRule":"{ contextVar.tech = {}; contextVar.taskDetail = {}; contextVar.tech['id'] = contextVar.baseConstraintsLoopQuery_currentElement; contextVar.taskDetail['id'] = contextVar.workOrderTaskId; }","nodeType":"PROCESS"},"processMobileTechnicianData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isProximityTechArrayValid"}],"contextChangePermitted":true,"name":"processMobileTechnicianData","description":"processMobileTechnicianData","processRule":"{ contextVar.proximityTechArray = []; if (contextVar.technicianListData != undefined && contextVar.technicianListData.length > 0) { contextVar.technicianListData.forEach(function (element) { if (contextVar.proximityTechArray.indexOf(element.workforceUserId) == -1) contextVar.proximityTechArray.push(element.workforceUserId); }); } }","nodeType":"PROCESS"},"logger":{"connectors":[{"exitPortType":"NextStep","nodeId":"initializeParams"}],"name":"logger","description":"logger","inputVarMap":{"logLevel":"logLevel","message":"message"},"nodeType":"LOGGER"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"logger"}],"name":"start","description":"Start","nodeType":"START"},"isCallFromRecommendTechnician":{"connectors":[{"condition":"(typeof contextVar.workflowCall !== 'undefined' && contextVar.workflowCall === 'recommendTechnician' && contextVar.techArray.length > 0)","exitPortType":"NextStep","nodeId":"baseConstraintsLoopQuery"},{"condition":"(typeof contextVar.workflowCall === 'undefined' && contextVar.techArray.length > 0)","exitPortType":"NextStep","nodeId":"getWorkOrderTaskData"},{"DefaultStep":true,"condition":"(typeof contextVar.techArray === 'undefined' || contextVar.techArray.length === 0)","exitPortType":"NextStep","nodeId":"end"}],"name":"isCallFromRecommendTechnician","description":"isCallFromRecommendTechnician","nodeType":"MULTIDECISION"},"callProximityScoreWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"getSchedulerSettingData"}],"processId":"S5WSVP8VZ0","name":"callProximityScoreWF","description":"callProximityScoreWF","inputVarMap":{"proximityTechArray":"proximityTechArray","workOrderTaskId":"workOrderTaskId"},"outputVarMap":{},"nodeType":"WORKFLOW"},"processSchedulerSettingData":{"connectors":[{"exitPortType":"NextStep","nodeId":"processProximityScoreData"}],"contextChangePermitted":true,"name":"processSchedulerSettingData","description":"processSchedulerSettingData","processRule":"{ if (typeof contextVar.schedulerSettingData != 'undefined' && contextVar.schedulerSettingData.length > 0) { contextVar.optimizeAllTask = contextVar.schedulerSettingData[0].schedulerSettingOptimizeFor; contextVar.schedulerSettingUseSkills = contextVar.schedulerSettingData[0].schedulerSettingUseSkills; contextVar.proximityDistanceValue = parseInt(contextVar.schedulerSettingData[0].schedulerSettingProximityRange); } else { contextVar.proximityDistanceValue = 1000; contextVar.optimizeAllTask = 'experienceScore'; } }","nodeType":"PROCESS"},"workflowNodes":["start","logger","initializeParams","getMobileTechnicianData","processMobileTechnicianData","isProximityTechArrayValid","callProximityScoreWF","getSchedulerSettingData","processSchedulerSettingData","processProximityScoreData","isCallFromRecommendTechnician","baseConstraintsLoopQuery","processLoopData","baseConstraintsWFCall","processBaseConstraintsLoopData","getWorkOrderTaskData","processWorkOrderTaskData","constraintsCalculationProcessEventCall","processPublishEventData","end"],"initializeParams":{"connectors":[{"exitPortType":"NextStep","nodeId":"getMobileTechnicianData"}],"contextChangePermitted":true,"name":"initializeParams","description":"Initialize params for workflow","processRule":"{ if (typeof contextVar.workflowCall === 'undefined' && contextVar.techList.length > 0) { contextVar.techList.forEach(function (element) { contextVar.schedulerTechArray.push(element.id); }); contextVar.workOrderTaskId = contextVar.taskDetails.id; contextVar.filter = '{$workforceUserId} IN {@schedulerTechArray} AND {$User.status} != {@userStatus} AND {$workforce.statusId} = {@workforceStatusId} AND ({$taskType.mobileProcessId}={$ZProcess.id} and {$ZProcess.projectId}={$ZProjectUser.projectId} and {$workOrderTaskId}={@workOrderTaskId} and {$ZProjectUser.groupId}={$UserGroup.groupId})'; } else if (typeof contextVar.workflowCall !== 'undefined' && contextVar.workflowCall === 'recommendTechnician') { if (typeof contextVar === 'undefined' || typeof contextVar.filter === 'undefined' || contextVar.filter === '') { contextVar.filter = '({$taskType.mobileProcessId}={$ZProcess.id} AND {$User.status} != {@userStatus} AND {$workforce.statusId} = {@workforceStatusId} and {$ZProcess.projectId}={$ZProjectUser.projectId} and {$workOrderTaskId}={@workOrderTaskId} and {$ZProjectUser.groupId}={$UserGroup.groupId})'; } else { contextVar.filter = '(' + contextVar.filter + ') AND {$User.status} != {@userStatus} AND {$workforce.statusId} = {@workforceStatusId} and ({$taskType.mobileProcessId}={$ZProcess.id} and {$ZProcess.projectId}={$ZProjectUser.projectId} and {$workOrderTaskId}={@workOrderTaskId} and {$ZProjectUser.groupId}={$UserGroup.groupId})'; } } }","id":"initializeParams","nodeType":"PROCESS"},"getSchedulerSettingData":{"models":["schedulerSetting"],"connectors":[{"exitPortType":"NextStep","nodeId":"processSchedulerSettingData"}],"columns":{"schedulerSettingUseSkills":"schedulerSetting.useSkills","schedulerSettingOptimizeFor":"schedulerSetting.optimizeFor","schedulerSettingId":"schedulerSetting.id","schedulerSettingProximityRange":"schedulerSetting.proximityRange"},"name":"getSchedulerSettingData","description":"getSchedulerSettingData","distinct":true,"inputVarMap":{},"outputVarMap":{"data":"schedulerSettingData"},"nodeType":"QUERY","getCount":true},"processProximityScoreData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isCallFromRecommendTechnician"}],"contextChangePermitted":true,"name":"processProximityScoreData","description":"processProximityScoreData","processRule":"{ contextVar.techArray = []; if (typeof contextVar.technicianListData != 'undefined' && typeof contextVar.proximityScoreData != 'undefined') { contextVar.proximityTechArray.forEach(function (element) { if (typeof contextVar.proximityScoreData[element] === 'undefined' || typeof contextVar.proximityScoreData[element].value === 'undefined') { return; } else if ((parseInt(contextVar.proximityScoreData[element].distanceValue) / 1000) > contextVar.proximityDistanceValue) { return; } else { contextVar.techArray.push(element); } }); } }","nodeType":"PROCESS"},"getWorkOrderTaskData":{"filter":"{$taskId}={@workOrderTaskId}","models":["taskType","workOrderTask","site","taskTypeSkill"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkOrderTaskData"}],"columns":{"taskTypeSkillSkillId":"taskTypeSkill.skillId","estimatedTaskDuration":"workOrderTask.estimatedDuration","latitude":"site.latitude","destinations":"CONCAT({$site.latitude},',',{$site.longitude},'|')","taskStartTime":"workOrderTask.scheduledDate","taskTypeId":"workOrderTask.taskTypeId","taskType":"taskType.name","site":"site.name","modifiedDate":"workOrderTask.modifiedDate","siteId":"site.id","taskTypeSkillMinSkillLevelId":"taskTypeSkill.minSkillLevelId","id":"workOrderTask.id","taskId":"workOrderTask.id","status":"workOrderTask.statusId","longitude":"site.longitude","taskEndTime":"workOrderTask.dueDate"},"name":"getWorkOrderTaskData","description":"getWorkOrderTaskData","distinct":true,"links":{"taskType":"workOrderTask","site":"workOrderTask","taskTypeSkill":"taskType"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"workOrderTaskData"},"nodeType":"QUERY","getCount":true},"workflowContext":{"techArray":[],"userStatus":"Deactivated","skillList":[],"utilizationScoreData":{},"recommendTechArray":[],"minimunSkillLevelList":[],"proximityScoreData":{},"message":"calling tech rec WF","workforceStatusId":"workforceActive","schedulerTechArray":[],"experienceScoreData":{},"logLevel":"INFO","proximityTechArray":[],"minSkillLevel":[]},"constraintsCalculationProcessEventCall":{"eventId":"constraintsCalculationProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"processPublishEventData"}],"contextChangePermitted":true,"name":"constraintsCalculationProcessEventCall","description":"constraintsCalculationProcessEventCall","inputVarMap":{"techArray":"techArray","workOrderTaskSiteId":"workOrderTaskSiteId","workOrderTaskTaskTypeId":"workOrderTaskTaskTypeId","taskStartTime":"taskStartTime"},"outputVarMap":{},"nodeType":"PUBLISH","captureOutput":true},"baseConstraintsWFCall":{"connectors":[{"exitPortType":"NextStep","nodeId":"baseConstraintsLoopQuery"}],"processId":"baseConstraintsWF","name":"baseConstraintsWFCall","description":"baseConstraintsWFCall","inputVarMap":{"tech":"tech","taskDetail":"taskDetail","workflowCall":"workflowCall","recommendTechArray":"recommendTechArray"},"outputVarMap":{},"nodeType":"WORKFLOW"},"processWorkOrderTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"constraintsCalculationProcessEventCall"}],"contextChangePermitted":true,"name":"processWorkOrderTaskData","description":"processWorkOrderTaskData ","processRule":"{ if (typeof contextVar.workOrderTaskData !== 'undefined' && contextVar.workOrderTaskData.length > 0) { contextVar.workOrderTaskTaskTypeId = contextVar.workOrderTaskData[0].taskTypeId; contextVar.workOrderTaskSiteId = contextVar.workOrderTaskData[0].siteId; contextVar.taskStartTime = contextVar.workOrderTaskData[0].taskStartTime; } }","nodeType":"PROCESS"},"getMobileTechnicianData":{"filter":"filter","models":["workOrderTask","taskType","ZProcess","workforce","ZProjectUser","UserGroup","User","calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"processMobileTechnicianData"}],"columns":{"workOrderTaskTaskType":"workOrderTask.taskTypeId","userStatus":"User.status","calendarId":"workforce.calendarId","userPhoneNumber":"User.phoneNumber","workOrderTaskId":"workOrderTask.id","userEmail":"User.emailId","userName":"User.name","workforceUserId":"workforce.userId","userId":"User.id"},"name":"getMobileTechnicianData","description":"getMobileTechnicianData","distinct":true,"inputVarMap":{"filter":"filter","userStatus":"userStatus","workOrderTaskId":"workOrderTaskId","workforceStatusId":"workforceStatusId","schedulerTechArray":"schedulerTechArray"},"links":{"calendar":"workforce","workOrderTask":"taskType","workforce":"User"},"outputVarMap":{"data":"technicianListData"},"nodeType":"QUERY","getCount":true},"processPublishEventData":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processPublishEventData","description":"processPublishEventData ","processRule":"@1EV675AOYF","nodeType":"PROCESS"},"processBaseConstraintsLoopData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getWorkOrderTaskData"}],"contextChangePermitted":true,"name":"processBaseConstraintsLoopData","description":"processBaseConstraintsLoopData","processRule":"{ contextVar.techArray = []; if (typeof contextVar.recommendTechArray !== 'undefined' && contextVar.recommendTechArray.length > 0) { contextVar.recommendTechArray.forEach(function (element) { contextVar.techArray.push(element); }); } }","nodeType":"PROCESS"},"end":{"name":"End","description":"end","inputVarMap":{"data":"data"},"outputVarMap":{"data":"data"},"nodeType":"END"},"baseConstraintsLoopQuery":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processLoopData"},{"exitPortType":"FalseStep","nodeId":"processBaseConstraintsLoopData"}],"data":"techArray","name":"baseConstraintsLoopQuery","description":"baseConstraintsLoopQuery","inputVarMap":{},"outputVarMap":{},"nodeType":"FOREACHLOOP"},"isProximityTechArrayValid":{"connectors":[{"exitPortType":"TrueStep","nodeId":"callProximityScoreWF"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isProximityTechArrayValid","description":"isProximityTechArrayValid","processRule":"(contextVar.proximityTechArray.length > 0 )","nodeType":"DECISION"}}