{"fetchInstances":{"filter":"{$ZProcessInstance.mainTitle} = {@taskId} AND {$ZProcessInstance.assignedToUserId} = {@memberList}","models":["ZProcessInstance"],"connectors":[{"exitPortType":"NextStep","nodeId":"isInstancePresent"}],"columns":{"resumeKey":"ZProcessInstance.resumeKey","estimatedDurationInHours":"ZProcessInstance.estimatedDurationInHours","processId":"ZProcessInstance.processId","workOrderTaskScheduledDate":"ZProcessInstance.plannedStartTime","id":"ZProcessInstance.id","userId":"ZProcessInstance.assignedToUserId"},"name":"fetchInstances","description":"fetchInstances","inputVarMap":{"loopUser":"memberList","workOrderTaskId":"taskId"},"outputVarMap":{"data":"fetchInstances"},"nodeType":"QUERY"},"initializeData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isReinstationRequired"}],"contextChangePermitted":true,"name":"initializeData","description":"initializeData","processRule":"contextVar.travelStatus = '{%checkedOut}';contextVar.viewTravelStatus = contextVar.viewTravelStatus || true;contextVar.loopThroughUsers_index = -1;contextVar.loopThroughUsers_currentElement = '';","id":"initializeData","nodeType":"PROCESS","jsEngine":"es6"},"processInstanceId":{"connectors":[{"exitPortType":"NextStep","nodeId":"reCastSubmitType"}],"contextChangePermitted":true,"name":"processInstanceId","description":"processInstanceId","processRule":"function findTheIndex(ar, o) { if (checkIfArray(ar)) { for (let i = 0; i < ar.length; i++) { if (ar[i].workforceUserId === o) { return i; } } } return -1; } function checkData(a){ return (typeof a !== 'undefined' && a !== '') } if (checkData(contextVar.zProcessInstanceId)){ let userId = contextVar.loopUser; let index = findTheIndex(contextVar.attendanceInfo, userId); if(index !== -1){ contextVar.attendanceInfo[index].processInstanceId = contextVar.zProcessInstanceId; } }","nodeType":"PROCESS","jsEngine":"es6"},"emptyInstanceId":{"connectors":[{"exitPortType":"NextStep","nodeId":"createInstance"}],"contextChangePermitted":true,"name":"emptyInstanceId","description":"emptyInstanceId","processRule":"contextVar.zProcessInstanceId = '';","id":"emptyInstanceId","nodeType":"PROCESS"},"createInstance":{"connectors":[{"exitPortType":"NextStep","nodeId":"processInstanceId"}],"processId":"taskInProgressInstanceCreationWF","name":"createInstance","description":"createInstance","inputVarMap":{"loopUser":"assignedToUserId","submitProgressComments":"submitProgressComments","userData":"userData","workforceCrewStatusId":"workforceCrewStatusId","crewAttendanceDetailsList":"crewAttendanceDetailsList","endDate":"endDate","taskDescription":"taskDescription","tmpUserEmail":"userEmail","crewMobileAccess":"crewMobileAccess","workOrderTaskAssignedToCrewId":"workOrderTaskAssignedToCrewId","partsForRemoval":"partsForRemoval","leadUserId":"leadUserId","webTask":"webTask","correctiveTaskRequestReasons":"correctiveTaskRequestReasons","scheduleBreakDown":"scheduleBreakDown","taskLogData":"taskLogData","workOrderTaskOpen":"workOrderTaskOpen","workOrderCompleted":"workOrderCompleted","workOrderInProgress":"workOrderInProgress","workOrderTaskDraft":"workOrderTaskDraft","recordInitialEvidenceLocationCoordinates":"recordInitialEvidenceLocationCoordinates","cancellationNotes":"cancellationNotes","partsForOthers":"partsForOthers","siteAddress":"siteAddress","mobileProcessId":"mobileProcessId","leadDetails":"leadDetails","customerName":"customerName","crewTask":"crewTask","partsForInstallation":"partsForInstallation","servicesDataGrid":"servicesDataGrid","statusId":"statusId","siteLatitude":"siteLatitude","workOrderOpen":"workOrderOpen","fetchNotSuggestedParts":"fetchNotSuggestedParts","assetsList":"assetsList","taskProgress":"taskProgress","workOrderTaskTaskTypeId":"workOrderTaskTaskTypeId","submitType":"submitType","breakDownData":"breakDownData","latitude":"latitude","taskData":"taskData","siteName":"siteName","additionalMaterialsDataGrid":"additionalMaterialsDataGrid","checkInIncidentReasonsListOptions":"checkInIncidentReasonsListOptions","notCheckedInTravelStatus":"notCheckedInTravelStatus","taskDetail":"taskDetail","submitServicesLocationCoordinates":"submitServicesLocationCoordinates","workOrderTaskDispatched":"workOrderTaskDispatched","workOrderTaskEstimatedDuration":"workOrderTaskEstimatedDuration","fetchActivityIncidentListOptions":"fetchActivityIncidentListOptions","workOrderTaskReOpenCount":"workOrderTaskReOpenCount","assetRemovalListOptions":"assetRemovalListOptions","address":"address","loopUserName":"userName","incorrectAddress":"incorrectAddress","cancellationReason":"cancellationReason","taskPriority":"taskPriority","services":"services","fetchReportIssue":"fetchReportIssue","workOrderScheduled":"workOrderScheduled","initialEvidenceDataGrid":"initialEvidenceDataGrid","workOrderTaskSiteChangeRequest":"workOrderTaskSiteChangeRequest","assetMaintenanceListOptions":"assetMaintenanceListOptions","workOrderTaskInTransit":"workOrderTaskInTransit","travelStatus":"travelStatus","recordSubmitServicesTime":"recordSubmitServicesTime","workOrderTaskIncident":"workOrderTaskIncident","workOrderTaskScheduledDate":"workOrderTaskScheduledDate","contactPhone":"contactPhone","dueDate":"dueDate","incidentType":"incidentType","workOrderData":"workOrderData","custData":"custData","pendingReviewStatus":"workOrderTaskPendingReview","workOrderTaskPendingReview":"workOrderTaskPendingReview","fullTaskScheduleGridData":"fullTaskScheduleGridData","partialAccess":"partialAccess","workOrderTaskId":"workOrderTaskId","checkOutCheckBoxForSubmitCapturedTime":"checkOutCheckBoxForSubmitCapturedTime","fetchMaterialsInCatalogNS":"fetchMaterialsInCatalogNS","checkOutCheckBoxForSubmit":"checkOutCheckBoxForSubmit","currentUserDetail":"currentUserDetail","userStatusFilter":"userStatusFilter","longitude":"longitude","recordInitialEvidenceTime":"recordInitialEvidenceTime","workOrder":"workOrder","workOrderTaskApproved":"workOrderTaskApproved","initialComments":"initialComments","tmpUserPhoneNumber":"userPhoneNumber","catalogList":"catalogList","workOrderTaskPendingApproval":"workOrderTaskPendingApproval","workOrderTaskDiscontinued":"workOrderTaskDiscontinued","modesOfTransport":"modesOfTransport","workOrderTaskRejected":"workOrderTaskRejected","isCrewTask":"isCrewTask","partsForService":"partsForService","enableServices":"enableServices","workOrderTaskDelayed":"workOrderTaskDelayed","name":"name","newLocationPhoto":"newLocationPhoto","workOrderId":"workOrderId","workOrderTaskScheduled":"workOrderTaskScheduled","submitProgressEvidenceDataGrid":"submitProgressEvidenceDataGrid","viewTravelStatus":"viewTravelStatus","workOrderTaskInProgress":"workOrderTaskInProgress","submitTypeListOptions":"submitTypeListOptions","fetchTransportModes":"fetchTransportModes","crewMemberSubmitTypeListOptions":"crewMemberSubmitTypeListOptions","siteChangeReq":"siteChangeReq","workOrderTaskCompleted":"workOrderTaskCompleted","timezone":"timezone","dateArray":"dateArray","travelIncidentReasonsListOptions":"travelIncidentReasonsListOptions","scheduledDate":"scheduledDate","taskTypeName":"taskTypeName","fetchSuggestedPartsData":"fetchSuggestedPartsData","taskType":"taskType","loopUser1":"userId","reasonOfwrongSite":"reasonOfwrongSite","workOrderTaskCancelled":"workOrderTaskCancelled","checkOutCheckBoxForSubmitLocationCoordinates":"checkOutCheckBoxForSubmitLocationCoordinates","siteLongitude":"siteLongitude","workOrderDraft":"workOrderDraft","workOrderTaskAssignedToUserId":"workOrderTaskAssignedToUserId","estimatedTaskDuration":"estimatedTaskDuration","taskTypeData":"taskTypeData","autoCheckoutReqd":"autoCheckoutReqd","workOrderPendingReview":"workOrderPendingReview","serviceList":"serviceList","siteId":"siteId","incorrectSiteComments":"incorrectSiteComments","fetchSuggestedMaterials":"fetchSuggestedMaterials","crewAttendanceDetailsDataGrid":"crewAttendanceDetailsDataGrid","taskDetailBackwardCompatibility":"taskDetailBackwardCompatibility","timeTakenForTask":"timeTakenForTask","taskId":"taskId","workOrderTaskData":"workOrderTaskData"},"outputVarMap":{},"nodeType":"WORKFLOW","captureOutput":true},"loopThroughUsers":{"connectors":[{"exitPortType":"TrueStep","nodeId":"userProcessor"},{"exitPortType":"FalseStep","nodeId":"processFinal"}],"data":"recreateUserList","name":"loopThroughUsers","description":"loopThroughUsers","inputVarMap":{},"id":"loopThroughUsers","outputVarMap":{},"nodeType":"FOREACHLOOP"},"deleteProcessInstanceDecision":{"connectors":[{"exitPortType":"TrueStep","nodeId":"deleteInstance"},{"exitPortType":"FalseStep","nodeId":"emptyInstanceId"}],"name":"deleteProcessInstanceDecision","description":"deleteProcessInstanceDecision","processRule":"(contextVar.loopUser !== contextVar.assignedToUserId  && typeof contextVar.resumeKey !== 'undefined' && contextVar.resumeKey !== '' && typeof contextVar.instanceId !== 'undefined' && contextVar.instanceId !== '')","nodeType":"DECISION"},"afterContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"featureLoggerWF","name":"afterContextVar","description":"afterContextVar","inputVarMap":{"afterContextVar":"featureName","afterContextVarExtraMsg":"extraMsg"},"id":"afterContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"initializeData"}],"name":"start","description":" Start","id":"start","nodeType":"START"},"userProcessor":{"connectors":[{"exitPortType":"NextStep","nodeId":"moveFwdProcess"}],"contextChangePermitted":true,"name":"userProcessor","description":"userProcessor","processRule":"contextVar.loopUser = contextVar.loopThroughUsers_currentElement; contextVar.loopUser1 = contextVar.loopThroughUsers_currentElement;","id":"userProcessor","nodeType":"PROCESS"},"isReinstationRequired":{"connectors":[{"exitPortType":"TrueStep","nodeId":"loopThroughUsers"},{"exitPortType":"FalseStep","nodeId":"processFinal"}],"name":"isReinstationRequired","description":"check if update required for crew attendance","processRule":"(contextVar.recreateInstances === true && contextVar.recreateUserList.length > 0)","id":"isReinstationRequired","nodeType":"DECISION"},"reCastSubmitType":{"connectors":[{"exitPortType":"NextStep","nodeId":"loopThroughUsers"}],"contextChangePermitted":true,"name":"reCastSubmitType","description":"reCastSubmitType","processRule":"for (var key in contextVar.backckUp) { contextVar[key] = contextVar.backckUp[key]; }","id":"reCastSubmitType","nodeType":"PROCESS","jsEngine":"es6"},"processFinal":{"connectors":[{"exitPortType":"NextStep","nodeId":"afterContextVar"}],"contextChangePermitted":true,"name":"processFinal","description":"processFinal","processRule":"for (var key in contextVar.backckUp) { contextVar[key] = contextVar.backckUp[key]; }","id":"processFinal","nodeType":"PROCESS"},"workflowNodes":["start","initializeData","isReinstationRequired","loopThroughUsers","userProcessor","moveFwdProcess","goForward","fetchInstances","isInstancePresent","parseInstanceData","deleteProcessInstanceDecision","deleteInstance","emptyInstanceId","createInstance","reCastSubmitType","processInstanceId","processFinal","afterContextVar","end"],"isInstancePresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"parseInstanceData"},{"exitPortType":"FalseStep","nodeId":"createInstance"}],"name":"isInstancePresent","description":"isInstancePresent","processRule":"(Array.isArray(contextVar.fetchInstances) && contextVar.fetchInstances.length > 0)","nodeType":"DECISION"},"workflowContext":{"afterContextVar":"processedDetails","afterContextVarExtraMsg":"Recreate Instance"},"moveFwdProcess":{"connectors":[{"exitPortType":"NextStep","nodeId":"goForward"}],"contextChangePermitted":true,"name":"moveFwdProcess","description":"moveFwdProcess","processRule":"function arrayCheck(a) { return (typeof a !== 'undefined' && Array.isArray(a) && a.length > 0); } function findTheIndex(ar, o) { if (arrayCheck(ar)) { for (let i = 0; i < ar.length; i++) { if (ar[i].workforceUserId === o) { return i; } } } return -1; } function findTheIndexInDG(ar, o) { if (arrayCheck(ar)) { for (let i = 0; i < ar.length; i++) { if (ar[i].workforceCrewWorkforceUserId === o) { return i; } } } return -1; } contextVar.goFwd = true; let assignedToUserId = contextVar.loopUser; let isCrewTask = contextVar.isCrewTask; let taskDetails = contextVar.existingTaskDetails;let leaduserId = taskDetails[0].taskUserId; let leadDetails = arrayCheck(contextVar.leadDetails) ? contextVar.leadDetails : [{}]; let crewAttendanceDetailsDataGrid = contextVar.crewAttendanceDetailsDataGrid; contextVar.tmpUserPhoneNumber = contextVar.userPhoneNumber; contextVar.tmpUserEmail = contextVar.userEmail; contextVar.loopUserName = contextVar.userName; if (contextVar.crewMobileAccess === 'partialAccess') { let index = findTheIndex(contextVar.attendanceInfo, contextVar.loopUser); if (index !== -1) { if(leaduserId !== assignedToUserId){ let memIndex = findTheIndexInDG(crewAttendanceDetailsDataGrid, contextVar.loopUser); contextVar.tmpUserPhoneNumber = crewAttendanceDetailsDataGrid[memIndex].crewMemberPhoneNumber; contextVar.tmpUserEmail = crewAttendanceDetailsDataGrid[memIndex].crewMemberEmailId; contextVar.loopUserName = crewAttendanceDetailsDataGrid[memIndex].crewMemberName; }else{ contextVar.tmpUserPhoneNumber = contextVar.leadDetails[0].leadPhoneNumber; contextVar.tmpUserEmail = contextVar.leadDetails[0].leadEmailId; contextVar.loopUserName = contextVar.leadDetails[0].leadName; } let attendance = contextVar.attendanceInfo[index].attendance; if (typeof attendance !== 'undefined' && Array.isArray(attendance) && attendance.length > 0) { if (attendance[attendance.length - 1].endTask === true) { contextVar.goFwd = false; } } } }","id":"moveFwdProcess","nodeType":"PROCESS","jsEngine":"es6"},"parseInstanceData":{"connectors":[{"exitPortType":"NextStep","nodeId":"deleteProcessInstanceDecision"}],"contextChangePermitted":true,"name":"parseInstanceData","description":"parseInstanceData","processRule":"function findTheIndex(ar, o) { if (checkIfArray(ar)) { for (let i = 0; i < ar.length; i++) { if (ar[i].workforceUserId === o) { return i; } } } return -1; } function checkData(a) { return (typeof a !== 'undefined' && a !== ''); } var currentElement = contextVar.fetchInstances[0]; contextVar.resumeKey = currentElement.resumeKey; contextVar.instanceId = currentElement.id; contextVar.mobileProcessId = currentElement.processId; contextVar.timeTakenForTask = checkData(contextVar.timeTakenForTask) ? contextVar.timeTakenForTask : parseInt(currentElement.estimatedDurationInHours); contextVar.workOrderTaskEstimatedDuration = checkData(contextVar.workOrderTaskEstimatedDuration) ? contextVar.workOrderTaskEstimatedDuration : (contextVar.timeTakenForTask * 60); contextVar.userId = currentElement.userId; contextVar.workOrderTaskScheduledDate = checkData(contextVar.workOrderTaskScheduledDate) ? contextVar.workOrderTaskScheduledDate : currentElement.workOrderTaskScheduledDate;","id":"parseInstanceData","nodeType":"PROCESS","jsEngine":"es6"},"deleteInstance":{"connectors":[{"exitPortType":"NextStep","nodeId":"emptyInstanceId"}],"processId":"deleteInProgressWF","name":"deleteInstance","description":"deleteInstance","inputVarMap":{"resumeKey":"resumeKey","instanceId":"instanceId"},"outputVarMap":{},"nodeType":"WORKFLOW"},"goForward":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchInstances"},{"exitPortType":"FalseStep","nodeId":"loopThroughUsers"}],"name":"goForward","description":"goForward","processRule":"(contextVar.goFwd)","id":"goForward","nodeType":"DECISION"},"end":{"name":"end","description":"end","inputVarMap":{},"outputVarMap":{},"nodeType":"END"}}