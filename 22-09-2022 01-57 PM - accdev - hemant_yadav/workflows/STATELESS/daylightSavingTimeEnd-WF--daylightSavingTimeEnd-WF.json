{"fetchHolidayData":{"models":["holiday"],"connectors":[{"exitPortType":"NextStep","nodeId":"processHolidayData"}],"columns":{"date":"holiday.date","name":"holiday.name","id":"holiday.id"},"description":"Provide some description for your query","distinct":false,"inputVarMap":{},"nodeType":"QUERY","filter":"","name":"fetchHolidayData","id":"fetchHolidayData","outputVarMap":{"data":"holidayData"},"subFilters":[],"selectColumns":[]},"processAppointmentWindowData":{"connectors":[{"exitPortType":"NextStep","nodeId":"updateAppointmentWindowData"}],"contextChangePermitted":true,"name":"processAppointmentWindowData","description":"","processRule":"function formatDate(date) { if (date) { var d = new Date(new Date(date).getTime()); return (d.getHours() + 1 + ':' + (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes()) + ':00'); } }; for (var i = 0; i < contextVar.appointmentWindowData.length; i++) { contextVar.appointmentWindowData[i].startTime = formatDate(contextVar.appointmentWindowData[i].startTime); contextVar.appointmentWindowData[i].endTime = formatDate(contextVar.appointmentWindowData[i].endTime); } ","id":"processAppointmentWindowData","nodeType":"PROCESS"},"checkAppointmentWindowData":{"models":["appointmentWindow"],"connectors":[{"exitPortType":"NextStep","nodeId":""}],"columns":{"name":"appointmentWindow.name","startTime":"appointmentWindow.startTime","id":"appointmentWindow.id","endTime":"appointmentWindow.endTime"},"name":"checkAppointmentWindowData","description":"Provide some description for your query","distinct":false,"inputVarMap":{},"outputVarMap":{"data":"appointmentWindowData1"},"id":"checkAppointmentWindowData","nodeType":"QUERY"},"queryServiceWindowsData":{"models":["calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"nextNodeId"}],"havingClause":"","inputs":{"id":""},"columns":{"calendarType":"calendar.calendarType","id":"calendar.id"},"description":"Provide some description for your query","outerJoinOnModel":"","orderBy":"","distinct":false,"inputVarMap":{},"groupBy":"","nodeType":"QUERY","filter":"{$calendarType}='serviceWindow'","name":"queryServiceWindowsData","links":{},"id":"queryServiceWindowsData","outputVarMap":{"data":"serviceWindowData"},"subFilters":[],"selectColumns":[]},"fetchWorkOrderTaskData":{"models":["workOrderTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkOrderTaskData"}],"havingClause":"","inputs":{"id":""},"columns":{"scheduledDate":"workOrderTask.scheduledDate","id":"workOrderTask.id"},"description":"Provide some description for your query","outerJoinOnModel":"","orderBy":"","distinct":false,"inputVarMap":{"currentDate":"currentDate"},"groupBy":"","nodeType":"QUERY","filter":"{$scheduledDate} > {@currentDate}","name":"fetchWorkOrderTaskData","links":{},"id":"fetchWorkOrderTaskData","outputVarMap":{"data":"workOrderTaskData"},"subFilters":[],"selectColumns":[]},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchAppointmentWindowData"}],"name":"start","description":"Start","id":"start","nodeType":"START"},"fetchAppointmentWindowData":{"models":["appointmentWindow"],"connectors":[{"exitPortType":"NextStep","nodeId":"processAppointmentWindowData"}],"columns":{"name":"appointmentWindow.name","startTime":"appointmentWindow.startTime","id":"appointmentWindow.id","endTime":"appointmentWindow.endTime"},"name":"fetchAppointmentWindowData","description":"Provide some description for your query","distinct":false,"inputVarMap":{},"outputVarMap":{"data":"appointmentWindowData"},"id":"fetchAppointmentWindowData","nodeType":"QUERY"},"updateServiceWindowData":{"modelName":"weeklySchedule","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"multirecord":true,"name":"updateServiceWindowData","description":"","inputVarMap":{"serviceWindowData":"data"},"id":"updateServiceWindowData","outputVarMap":{},"nodeType":"MODEL","operation":4},"workflowNodes":["start","end","fetchAppointmentWindowData","processAppointmentWindowData","updateAppointmentWindowData","checkAppointmentWindowData","queryServiceWindowsData","fetchHolidayData","processHolidayData","updateHolidayData","fetchWorkOrderTaskData","processWorkOrderTaskData","updateWorkOrderTaskData","fetchServiceWindowData","processServiceWindowData","updateServiceWindowData"],"processHolidayData":{"contextChangePermitted":true,"connectors":[{"exitPortType":"NextStep","nodeId":"updateHolidayData"}],"name":"processHolidayData","description":"Use this for processing data in workflow","processRule":"function formatDate(date) { if (date) { var d = new Date(new Date(date)); return (d.getFullYear() + '-' + (parseInt(d.getMonth() + 1) < 10 ? '0' + parseInt(d.getMonth() + 1) : parseInt(d.getMonth() + 1)) + '-' + (d.getDate() < 10 ? '0' + d.getDate() : d.getDate()) + ' ' + (parseInt(d.getHours() + 1) < 10 ? '0' + parseInt(d.getHours() + 1) : parseInt(d.getHours() + 1)) + ':' + (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes()) + ':00.000'); } }; for(var i=0;i<contextVar.holidayData.length;i++){ contextVar.date=formatDate(contextVar.holidayData[i].date); contextVar.holidayData[i].date=contextVar.date; } contextVar.currentDate= new Date().toISOString().replace(/T/, ' ').replace(/\\..+/, '').replace(/Z/, ''); ","id":"processHolidayData","nodeType":"PROCESS"},"fetchServiceWindowData":{"models":["weeklySchedule"],"connectors":[{"exitPortType":"NextStep","nodeId":"processServiceWindowData"}],"havingClause":"","inputs":{"id":""},"columns":{"schedule":"weeklySchedule.schedule","calendarId":"weeklySchedule.calendarId","displayOrder":"weeklySchedule.displayOrder","day":"weeklySchedule.day","open":"weeklySchedule.isOpen"},"description":"Provide some description for your query","outerJoinOnModel":"","orderBy":"","distinct":true,"inputVarMap":{},"groupBy":"","nodeType":"QUERY","filter":"{$open}!='false'","name":"fetchServiceWindowData","links":{},"id":"fetchServiceWindowData","outputVarMap":{"data":"serviceWindowData"},"subFilters":[],"selectColumns":[]},"updateHolidayData":{"modelName":"holiday","connectors":[{"exitPortType":"NextStep","nodeId":"fetchWorkOrderTaskData"}],"name":"updateHolidayData","description":"Provide some description for your model node","inputVarMap":{"holidayData":"data"},"id":"updateHolidayData","outputVarMap":{},"multiRecord":true,"nodeType":"MODEL","operation":4},"updateWorkOrderTaskData":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"fetchServiceWindowData"}],"name":"updateWorkOrderTaskData","description":"Provide some description for your model node","inputVarMap":{"workOrderTaskData":"data"},"id":"updateWorkOrderTaskData","outputVarMap":{},"multiRecord":true,"nodeType":"MODEL","operation":4},"processWorkOrderTaskData":{"contextChangePermitted":true,"connectors":[{"exitPortType":"NextStep","nodeId":"updateWorkOrderTaskData"}],"name":"processWorkOrderTaskData","description":"Use this for processing data in workflow","processRule":"function formatDate(date) { if (date) { var d = new Date(new Date(date)); return (d.getFullYear() + '-' + (parseInt(d.getMonth() + 1) < 10 ? '0' + parseInt(d.getMonth() + 1) : parseInt(d.getMonth() + 1)) + '-' + (d.getDate() < 10 ? '0' + d.getDate() : d.getDate()) + ' ' + (parseInt(d.getHours() + 1) < 10 ? '0' + parseInt(d.getHours() + 1) : parseInt(d.getHours() + 1)) + ':' + (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes()) + ':00.000'); } }; for( var i=0; i<contextVar.workOrderTaskData.length;i++){ contextVar.scheduledDate=formatDate(contextVar.workOrderTaskData[i].scheduledDate); contextVar.workOrderTaskData[i].scheduledDate=contextVar.scheduledDate; } ","id":"processWorkOrderTaskData","nodeType":"PROCESS"},"end":{"name":"end","description":"End","inputVarMap":{"appointmentWindowData1":"data"},"outputVarMap":{"appointmentWindowData1":"data"},"id":"end","nodeType":"END"},"updateAppointmentWindowData":{"modelName":"appointmentWindow","connectors":[{"exitPortType":"NextStep","nodeId":"fetchHolidayData"}],"name":"updateAppointmentWindowData","description":"Provide some description for your model node","inputVarMap":{"appointmentWindowData":"data"},"id":"updateAppointmentWindowData","outputVarMap":{},"multiRecord":true,"nodeType":"MODEL","operation":4},"processServiceWindowData":{"contextChangePermitted":true,"connectors":[{"exitPortType":"NextStep","nodeId":"updateServiceWindowData"}],"name":"processServiceWindowData","description":"Use this for processing data in workflow","processRule":"function formatDate(date) { if (date) { var d = new Date(new Date(date).getTime()); return (d.getHours() + 1 + ':' + (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes()) + ':00.000'); } }; for(var i=0 ; i<contextVar.serviceWindowData.length ; i++){ contextVar.serviceWindowData[i].schedule[0].start=formatDate(contextVar.serviceWindowData[i].schedule[0].start); contextVar.serviceWindowData[i].schedule[0].end=formatDate(contextVar.serviceWindowData[i].schedule[0].end); }","id":"processServiceWindowData","nodeType":"PROCESS"}}