{"pageContext":{},"actionOnLoad":["@actions.getSchedulerSettingData","@actions.initialData"],"jslib":{"isOvertimeAllowed":"function (pageContext) { if (typeof pageContext.overtimeAllowed !== 'undefined' && pageContext.overtimeAllowed !== '') { return !(pageContext.overtimeAllowed); } else return true; }","isSaveDisabled":"function (pageContext) { return ((pageContext.schedulerSettingUseSkills === pageContext.initialUseSkills || pageContext.schedulerSettingUseSkills === pageContext.initialUseSkills.toString()) && (Number(pageContext.schedulerSettingProximityRange) === pageContext.initialProximityRange) && pageContext.schedulerSettingOptimizeFor === pageContext.initialOptimizeFor && (pageContext.initialOvertimeAllowed === pageContext.overtimeAllowed && Number(pageContext.initialOvertimeCount) === Number(pageContext.overtimeCount)) || (pageContext.schedulerSettingProximityRange === '') || (Number(pageContext.schedulerSettingProximityRange) > 9999) || (Number(pageContext.schedulerSettingProximityRange) < 0) || (pageContext.overtimeAllowed === true && (Number(pageContext.overtimeCount) <= 0 || pageContext.overtimeCount === ''))); }","setNumber":"function (pageContext) { if (typeof pageContext.schedulerSettingProximityRange !== 'undefined' ) { return (pageContext.schedulerSettingProximityRange === ''|| (Number(pageContext.schedulerSettingProximityRange) < 0) || (Number(pageContext.schedulerSettingProximityRange) > 9999)); } return false; }","checkOvertimeCount":"function (pageContext) { if (Number(pageContext.overtimeCount) <= 0 || pageContext.overtimeCount === '') { return true; } return false; }"},"header":{"children":[{"buttonType":"primary","actionOnClick":["@actions.setSubActionUpsert","@actions.fireProcessEvent","@actions.closePanel","@actions.clearPageContext","@actions.setBannerType","@actions.refreshDataGrid"],"disabled":"@jslib.isSaveDisabled","id":"submit","type":"button","title":"@lang.['s12','Save']"},{"icon":"@iconlib.NavigationCloseGrey","actionOnClick":["@actions.clearPageContext","@actions.closePanel","@actions.refreshDataGrid"],"id":"close","type":"buttonIcon"}],"title":"@lang.['ss2','Scheduling Settings']"},"body":{"children":[{"children":[{"id":"infoText","type":"infoText","value":"@lang.['tsautcdaosaittsm','These settings allow you to configure different aspects of scheduling automation in the Task Scheduling module. Review the default options below and make adjustments if needed.']"}],"label":"@lang.['d','Description']","id":"schedulerSettingDescription","type":"section"},{"children":[{"children":[{"children":[{"id":"infoname","type":"infoText","value":"@lang.['etwdhtnsbottt','Exclude Technicians who do not have the necessary skills based on the task type.']"}],"flex":"5","type":"column"},{"children":[{"isRequired":true,"options":[{"name":"@lang.['y','Yes']","id":true},{"name":"@lang.['n1','No']","id":false}],"id":"schedulerSettingUseSkills","optTitleKey":"name","optValueKey":"id","type":"select","value":"@pageContext.schedulerSettingUseSkills"}],"flex":"1","id":"viewUseSkillsButton","type":"column"}],"id":"selectUseSkillsTextRow","type":"row"}],"label":"@lang.['us','Use Skills']","id":"useSkillsSection","type":"section","value":"@pageContext.useSkillsSection"},{"children":[{"id":"infoText","type":"infoText","value":"@pageContext.proximitySection"},{"errorText":"@lang.['psapfvb0a9','Please set a proximity filter value between 0 and 9,999.']","validator":"@jslib.setNumber","inputType":"number","id":"schedulingSettingRange","label":"@lang.['r2','Range (Kilometers)']","type":"input","value":"@pageContext.schedulerSettingProximityRange"}],"label":"@lang.['p1','Proximity']","id":"proximitySection","type":"section","value":"@pageContext.proximitySection"},{"children":[{"options":[{"name":"@lang.['estptmet','Experience Score to prioritize the most experienced technicians']","id":"experienceScore"},{"name":"@lang.['utedtat','Utilization to even distribute tasks amongst technicians']","id":"utilizationScore"},{"name":"@lang.['rtmttbt','Route to minimize travel time between tasks']","id":"travelTime"}],"optTitleKey":"name","optValueKey":"id","id":"schedulerSettingOptimizeFor","title":"@lang.['of','Optimize For']","type":"select","value":"@pageContext.schedulerSettingOptimizeFor"}],"label":"@lang.['pom','Primary Optimization Method']","id":"primaryOptimizationMethodSection","type":"section","value":"@pageContext.primaryOptimizationMethodSection"},{"children":[{"actionOnChange":["@actions.setOvertimeCount"],"id":"overtimeAllowed","label":"","placeholder":"@lang.['estuo','Extend shift timings using overtime']","type":"switchComponent","value":"@pageContext.overtimeAllowed"},{"errorText":"@lang.['odsbgt0','Overtime duration should be greater than 0.']","hidden":"@jslib.isOvertimeAllowed","validator":"@jslib.checkOvertimeCount","inputType":"number","id":"overtimeCount","label":"@lang.['mobam','Maximum Overtime Buffer Allowed (In Minutes)']","type":"input","value":"@pageContext.overtimeCount"}],"label":"@lang.['o','Overtime']","id":"overtime","type":"section"}]},"actions":[{"endPoint":"event/start","alertMessage":true,"name":"fireProcessEvent","outputVarMap":{"data":"@pageContext.data"},"type":"api","actionDef":{"data":[{"eventId":"1YTICY84RS","contextVar":{"subAction":"@pageContext.subAction","schedulerSetting":{"useSkills":"@pageContext.schedulerSettingUseSkills","recver":"@pageContext.SchedulerSettingRecver","proximityRange":"@pageContext.schedulerSettingProximityRange","id":"@pageContext.schedulerSettingId","overtimeAllowed":"@pageContext.overtimeAllowed","overtimeCount":"@pageContext.overtimeCount","optimizeFor":"@pageContext.schedulerSettingOptimizeFor"}}}]}},{"name":"clearPageContext","type":"clearPageContext"},{"name":"closePanel","type":"closePanel"},{"name":"getSchedulerSettingData","outputVarMap":{"data":"@pageContext.schedulerSettingData"},"type":"query","actionDef":{"models":["schedulerSetting"],"columns":{"schedulerSettingRecver":"schedulerSetting.recver","schedulerSettingUseSkills":"schedulerSetting.useSkills","schedulerSettingUpdatedDate":"schedulerSetting.modifiedDate","schedulerSettingOvertimeAllowed":"schedulerSetting.overtimeAllowed","schedulerSettingOptimizeFor":"schedulerSetting.optimizeFor","schedulerSettingId":"schedulerSetting.id","schedulerSettingProximityRange":"schedulerSetting.proximityRange","schedulerSettingOvertimeCount":"schedulerSetting.overtimeCount"}}},{"name":"setOvertimeCount","type":"script","actionDef":"function (pageContext) { if (!pageContext.overtimeAllowed) { pageContext.overtimeCount = '0'; }else { if(Number(pageContext.initialOvertimeCount) === 0){ pageContext.overtimeCount = '30'; }else{ pageContext.overtimeCount = pageContext.initialOvertimeCount; } } }"},{"name":"initialData","type":"script","actionDef":"function (pageContext) { if (typeof pageContext.schedulerSettingData !== 'undefined' && pageContext.schedulerSettingData.length > 0) { pageContext.schedulerSettingProximityRange = pageContext.schedulerSettingData[0].schedulerSettingProximityRange; pageContext.schedulerSettingId = pageContext.schedulerSettingData[0].schedulerSettingId; pageContext.schedulerSettingOptimizeFor = pageContext.schedulerSettingData[0].schedulerSettingOptimizeFor; pageContext.schedulerSettingUseSkills = pageContext.schedulerSettingData[0].schedulerSettingUseSkills; pageContext.overtimeAllowed = pageContext.schedulerSettingData[0].schedulerSettingOvertimeAllowed; pageContext.overtimeCount = pageContext.schedulerSettingData[0].schedulerSettingOvertimeCount; } pageContext.proximitySection = `@lang.[' fotwacloblootr','Filter out technicians with a current location or base location outside of this range.']`; pageContext.initialUseSkills = pageContext.schedulerSettingUseSkills; pageContext.initialProximityRange = pageContext.schedulerSettingProximityRange; pageContext.initialOptimizeFor = pageContext.schedulerSettingOptimizeFor; pageContext.initialOvertimeAllowed = pageContext.overtimeAllowed; pageContext.initialOvertimeCount = pageContext.overtimeCount; pageContext.inValidCount = 'false'; }"},{"name":"setSubActionUpsert","type":"script","actionDef":"function(pageContext){pageContext.subAction = 'upsertSchedulerSetting';}"},{"name":"setBannerType","type":"script","actionDef":"function(pageContext){pageContext.bannerType = 'showBanner';}"},{"name":"refreshDataGrid","type":"refreshDataGrid"}]}