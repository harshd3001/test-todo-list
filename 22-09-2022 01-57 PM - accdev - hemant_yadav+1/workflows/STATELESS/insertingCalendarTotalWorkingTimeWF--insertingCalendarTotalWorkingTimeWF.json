{"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreWeeklySchedulePresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"contextVar.noOfBatches = Math.ceil(contextVar.weeklyScheduleCount / contextVar.customBatchSize);contextVar.newBatchNumber = contextVar.weeklyScheduleBatchNumber + 1;","id":"findNumberOfBatches","nodeType":"PROCESS"},"appendWeeklySchedulePresent":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreWeeklySchedulePresent"}],"contextChangePermitted":true,"name":"appendWeeklySchedulePresent","description":"appendWeeklySchedulePresent","processRule":"{if (Array.isArray(contextVar.dataToAppend)) { contextVar.weeklyScheduleData.concat(contextVar.dataToAppend); } contextVar.newBatchNumber = contextVar.newBatchNumber + 1;}","id":"appendWeeklySchedulePresent","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"queryCalendarData"}],"name":"start","description":"Start","id":"start","nodeType":"START"},"processCalendarData":{"connectors":[{"exitPortType":"NextStep","nodeId":"queryWeeklyScheduleData"}],"contextChangePermitted":true,"name":"processCalendarData","description":"Use this for processing data in workflow","processRule":"{ contextVar.calendarIds = []; if (Array.isArray(contextVar.calendarData) && contextVar.calendarData.length > 0) { contextVar.calendarData.forEach(function (element) { contextVar.calendarIds.push(element.id); }); } }","id":"processCalendarData","nodeType":"PROCESS"},"areMoreWeeklySchedulePresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchWeeklySchedulePresent"},{"exitPortType":"FalseStep","nodeId":"processData"}],"name":"areMoreWeeklySchedulePresent","description":"areMoreWeeklySchedulePresent","processRule":"contextVar.noOfBatches >= 2 && contextVar.noOfBatches >= contextVar.newBatchNumber","id":"areMoreWeeklySchedulePresent","nodeType":"DECISION"},"workflowNodes":["start","processCalendarData","queryCalendarData","areDataPresent","processCalendarData","queryWeeklyScheduleData","findNumberOfBatches","areMoreWeeklySchedulePresent","fetchWeeklySchedulePresent","appendWeeklySchedulePresent","processData","updateCalendarData","end"],"queryWeeklyScheduleData":{"filter":"{$calendarId} IN {@calendarIds}","models":["weeklySchedule"],"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfBatches"}],"columns":{"schedule":"weeklySchedule.schedule","calendarId":"weeklySchedule.calendarId"},"name":"queryWeeklyScheduleData","description":"Provide some description for your query","inputVarMap":{"customBatchSize":"batchSize","calendarIds":"calendarIds"},"id":"queryWeeklyScheduleData","outputVarMap":{"data":"weeklyScheduleData","count":"weeklyScheduleCount","batchNumber":"weeklyScheduleBatchNumber"},"batchSize":"batchSize","nodeType":"QUERY","getCount":true},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"updateCalendarData"}],"contextChangePermitted":true,"name":"processData","description":"Use this for processing data in workflow","processRule":"{ contextVar.calendarData.forEach(function (cal) { cal.totalWorkingDuration = 0; contextVar.weeklyScheduleData.forEach(function (element) { if (cal.id === element.calendarId) { element.schedule.forEach(function (data) { cal.totalWorkingDuration += Math.floor(Math.abs(((new Date(data.startTime)).getTime() - (new Date(data.endTime)).getTime()) / 1000) / 60); }); } }); }); }","id":"processData","nodeType":"PROCESS"},"workflowContext":{"customBatchSize":1000},"queryCalendarData":{"filter":"{$calendar.totalWorkingDuration} IS NULL || {$calendar.totalWorkingDuration} = 0 || {$calendar.totalWorkingDuration} = ''","models":["calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"areDataPresent"}],"columns":{"recver":"calendar.recver","id":"calendar.id","totalWorkingDuration":"calendar.totalWorkingDuration"},"name":"queryCalendarData","description":"Provide some description for your query","inputVarMap":{"customBatchSize":"batchSize"},"outputVarMap":{"data":"calendarData","count":"calendarCount"},"batchSize":"batchSize","nodeType":"QUERY","getCount":true},"updateCalendarData":{"modelName":"calendar","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"multirecord":true,"name":"updateCalendarData","description":"Provide some description for your model node","inputVarMap":{"calendarData":"data"},"id":"updateCalendarData","outputVarMap":{},"nodeType":"MODEL","operation":4},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"id":"end","nodeType":"END"},"areDataPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processCalendarData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"areDataPresent","description":"areDataPresent","processRule":"(typeof contextVar.calendarData !== 'undefined' && contextVar.calendarData.length > 0)","nodeType":"DECISION"},"fetchWeeklySchedulePresent":{"models":["weeklySchedule"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendWeeklySchedulePresent"}],"columns":{"schedule":"weeklySchedule.schedule","calendarId":"weeklySchedule.calendarId"},"description":"Fetch Task Details","distinct":true,"inputVarMap":{"customBatchSize":"batchSize","calendarIds":"calendarIds","newBatchNumber":"batchNumber"},"nodeType":"QUERY","filter":"filter","name":"fetchWeeklySchedulePresent","id":"fetchWeeklySchedulePresent","outputVarMap":{"data":"dataToAppend"},"batchSize":"batchSize","getCount":true,"batchNumber":"batchNumber"}}