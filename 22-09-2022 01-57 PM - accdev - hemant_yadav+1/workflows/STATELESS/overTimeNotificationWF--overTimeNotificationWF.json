{"hasChangedDates":{"connectors":[{"exitPortType":"TrueStep","nodeId":"notifyTechnicianNode"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"hasChangedDates","description":"check if start and end dates are chanded","processRule":"contextVar.workforceOvertime[0].initialWorkforceOvertimeStartDate != contextVar.startDateTime || contextVar.workforceOvertime[0].initialWorkforceOvertimeEndDate != contextVar.endDateTime || contextVar.subAction == 'deleteWorkforceOvertime'","nodeType":"DECISION"},"workflowContext":{"deleteShortText":"Overtime Removed","addLongText":"Overtime has been added to your schedule: {@startDateTime} to {@endDateTime}","updatedShortText":"Overtime Updated","dataPayload":{"targetType":"Task"},"deleteLongText":"Your overtime from {@startDateTime} to {@endDateTime} has been removed.","updatedLongText":"Your overtime schedule has been updated: {@startDateTime} to {@endDateTime}","addShortText":"Overtime Added"},"processTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"hasChangedDates"}],"contextChangePermitted":true,"name":"processTaskData","description":"processTaskData","processRule":" contextVar.startDateTime = contextVar.workforceOvertime[0].startDate; contextVar.endDateTime = contextVar.workforceOvertime[0].endDate; contextVar.userId = contextVar.workforceOvertime[0].workforceUserId; if (contextVar.subAction == 'deleteWorkforceOvertime') { contextVar.longText = contextVar.deleteLongText.replace('{@startDateTime}', contextVar.notificationStartDate).replace('{@endDateTime}', contextVar.notificationEndDate); contextVar.shortText = contextVar.deleteShortText; } else if (contextVar.subAction == 'upsertWorkforceOvertime' && contextVar.overTimeAction == 'add') { contextVar.longText = contextVar.addLongText.replace('{@startDateTime}', contextVar.notificationStartDate).replace('{@endDateTime}', contextVar.notificationEndDate); contextVar.shortText = contextVar.addShortText; } else if (contextVar.subAction == 'upsertWorkforceOvertime' && contextVar.overTimeAction == 'edit') { contextVar.longText = contextVar.updatedLongText.replace('{@startDateTime}', contextVar.notificationStartDate).replace('{@endDateTime}', contextVar.notificationEndDate); contextVar.shortText = contextVar.updatedShortText; }","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskData"}],"name":"start","description":"start","nodeType":"START"},"end":{"name":"End","description":"end","processRule":"","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"notifyTechnicianNode":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"notifyTechnicianNode","description":"notifyTechnicianNode","inputVarMap":{"longText":"longText","dataPayload":"dataPayload","shortText":"shortText","userId":"userId"},"targetType":"user","id":"notifyTechnicianNode","outputVarMap":{},"notificationType":"push","nodeType":"NOTIFY"},"workflowNodes":["start","processTaskData","hasChangedDates","notifyTechnicianNode","end"]}