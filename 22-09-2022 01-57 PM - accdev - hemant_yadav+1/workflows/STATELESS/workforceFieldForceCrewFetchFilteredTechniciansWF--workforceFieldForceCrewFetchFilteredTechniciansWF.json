{"processLocalizedKeys":{"connectors":[{"exitPortType":"NextStep","nodeId":"getTechniciansAvailability"}],"contextChangePermitted":true,"name":"appendTechs","description":"appendTechs","processRule":"{if (typeof contextVar.availibilityStatus !== 'undefined' && contextVar.availibilityStatus.length > 0) { contextVar.localizedStatus = {}; contextVar.availibilityStatus.forEach(function (element) { contextVar.localizedStatus[element.listOptionAnswerId] = element.listOptionAnswerAnswerOptionText; }); }}","nodeType":"PROCESS"},"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTechsPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"{contextVar.finalTechsNoOfBatches = Math.ceil(contextVar.finalTechsCount / contextVar.customBatchSize);contextVar.finalTechsBatchNumber = contextVar.finalTechsBatchNumber + 1;}","id":"findNumberOfBatches","nodeType":"PROCESS"},"areMoreTechsPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getMoreFinalTechniciansData"},{"exitPortType":"FalseStep","nodeId":"addFilteredTechsToArray"}],"name":"areMoreTechsPresent","description":"areMoreTechsPresent","processRule":"contextVar.finalTechsNoOfBatches >= 2 && contextVar.finalTechsNoOfBatches >= contextVar.finalTechsBatchNumber","nodeType":"DECISION"},"processWorkGroupIds":{"connectors":[{"exitPortType":"NextStep","nodeId":"callRegionWorkGroupFilterWF"}],"contextChangePermitted":true,"name":"processWorkGroupIds","description":"processWorkGroupIds","processRule":"{if (typeof contextVar.regionWorkGroupIdsObject !== 'undefined' && contextVar.regionWorkGroupIdsObject.length > 0) { contextVar.workGroupDataObject = { 'region': { 'filterIdList': contextVar.regionIds, 'workGroupIdList': [] } }; contextVar.regionWorkGroupIdsObject.forEach(function (element) { contextVar.workGroupDataObject.region.workGroupIdList.push(element.workGroupId); }); }}","id":"processWorkGroupIds","nodeType":"PROCESS"},"getWorkGroupIds":{"filter":"{$workGroup.filterMethod} ='region' AND {$workGroupFilter.filterId} IN {@regionIds}","models":["workGroup","workGroupFilter"],"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkGroupIds"}],"columns":{"workGroupId":"workGroup.id"},"name":"getWorkGroupIds","distinct":true,"description":"getWorkGroupIds","links":{"workGroup":"workGroupFilter"},"inputVarMap":{"regionIds":"regionIds"},"outputVarMap":{"data":"regionWorkGroupIdsObject"},"nodeType":"QUERY","getCount":true},"getMoreFinalTechniciansData":{"models":["User","workforce","calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendTechs"}],"columns":{"contractor":"[workforce]->[contractorWorkforce]->[contractorRegion]->[contractor](name)","workforceCity":"workforce.city","shiftName":"calendar.name","skill":"[workforce]->[workforceSkill]->[Skill](name)","userPhoneNumber":"User.phoneNumber","userName":"User.name","workforceUserId":"workforce.userId","region":"[workforce]->[contractorWorkforce]->[contractorRegion]->[region](name)","workforceCalendarId":"workforce.calendarId"},"outerJoinOnModel":"workforce","distinct":true,"description":"getMoreFinalTechniciansData","inputVarMap":{"filter":"filter","contractorFilteredTechs":"contractorFilteredTechs","customBatchSize":"batchSize","calendarId":"calendarId","skillFilteredTechs":"skillFilteredTechs","finalTechsBatchNumber":"batchNumber","allRegionTechsId":"allRegionTechsId","unavailableTechs":"unavailableTechs"},"nodeType":"QUERY","filter":"filter","name":"getMoreFinalTechniciansData","links":{"calendar":"workforce","workforce":"User"},"outputVarMap":{"data":"appendFinalTechniciansData"},"getCount":true},"addFilteredTechsToArray":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfTechniciansArePresent"}],"contextChangePermitted":true,"name":"addFilteredTechsToArray","description":"addFilteredTechsToArray","processRule":"if (typeof contextVar.finalTechniciansData !== 'undefined' && contextVar.finalTechniciansData.length > 0) { contextVar.finalTechniciansData.forEach(function (element) { contextVar.finalTechniciansArray.push(element.workforceUserId); }); }else{ contextVar.finalTechniciansData = []; contextVar.finalTechniciansArray = []; }","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processFilters"}],"name":"start","description":"Start","nodeType":"START"},"getFinalTechniciansData":{"models":["User","workforce","calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfBatches"}],"columns":{"contractor":"[workforce]->[contractorWorkforce]->[contractorRegion]->[contractor](name)","workforceCity":"workforce.city","shiftName":"calendar.name","skill":"[workforce]->[workforceSkill]->[Skill](name)","userPhoneNumber":"IF({$User.phoneNumber} IS NULL,'-',{$User.phoneNumber})","userName":"User.name","workforceUserId":"workforce.userId","region":"[workforce]->[contractorWorkforce]->[contractorRegion]->[region](name)","workforceCalendarId":"workforce.calendarId"},"outerJoinOnModel":"workforce","distinct":true,"description":"getFinalTechniciansData","inputVarMap":{"filter":"filter","contractorFilteredTechs":"contractorFilteredTechs","customBatchSize":"batchSize","calendarId":"calendarId","skillFilteredTechs":"skillFilteredTechs","allRegionTechsId":"allRegionTechsId","unavailableTechs":"unavailableTechs"},"nodeType":"QUERY","filter":"filter","name":"getFinalTechniciansData","links":{"calendar":"workforce","workforce":"User"},"outputVarMap":{"data":"finalTechniciansData","count":"finalTechsCount","batchNumber":"finalTechsBatchNumber"},"getCount":true},"processFilters":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchFilteredTechniciansEventCall"}],"contextChangePermitted":true,"name":"processFilters","description":"processFilters","processRule":"contextVar.skillFilter = '({$workforceType}!=\"webUser\" || {$workforceType} IS NULL) '; contextVar.contractorFilter = '({$workforceType}!=\"webUser\" || {$workforceType} IS NULL) '; if (typeof contextVar.skillLevelList !== 'undefined' && contextVar.skillLevelList !== '') { contextVar.skillLevelList.forEach(function(skillLevel){ contextVar.skillLevelIds.push(skillLevel.value); }); contextVar.skillFilter += 'AND {$workforceSkill.skillLevelId} IN {@skillLevelIds}'; } if (typeof contextVar.contractorList !== 'undefined' && contextVar.contractorList !== '') { contextVar.contractorList.forEach(function(contractor){ contextVar.contractorIds.push(contractor.value); }); contextVar.contractorFilter += 'AND {$contractor.id} IN {@contractorIds} '; } if (typeof contextVar.regionList !== 'undefined' && contextVar.regionList !== '') { contextVar.regionList.forEach(function(region){ contextVar.regionIds.push(region.value); }); } if (typeof contextVar.calendarId !== 'undefined' && contextVar.calendarId !== '' && contextVar.shiftFilter==='matchingShift') { contextVar.skillFilter += 'AND {$workforceCalendarId} = {@calendarId} '; contextVar.contractorFilter += 'AND {$workforceCalendarId} = {@calendarId} '; } contextVar.startDayDisplayOrder = new Date(contextVar.startDate).getDay(); contextVar.endDayDisplayOrder = new Date(contextVar.endDate).getDay(); contextVar.startDateFilter = new Date(contextVar.startDate); contextVar.startDateFilter.setUTCHours(0, 0, 0, 0); contextVar.endDateFilter = new Date(contextVar.endDate); contextVar.endDateFilter.setDate(contextVar.endDateFilter.getDate() + 1); contextVar.endDateFilter.setUTCHours(0, 0, 0, 0); contextVar.startDateFilter = new Date(contextVar.startDateFilter).toISOString().replace('T', ' ').replace('Z', ''); contextVar.endDateFilter = new Date(contextVar.endDateFilter).toISOString().replace('T', ' ').replace('Z', '');","nodeType":"PROCESS"},"callProximityScoreWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchLocalizedKeysForAvailabilityStatus"}],"processId":"S5WSVP8VZ0","name":"callProximityScoreWF","description":"callProximityScoreWF","inputVarMap":{"customBatchSize":"batchSize","startDateFilter":"startDateFilter","workflowCall":"proximityCall","endDateFilter":"endDateFilter","finalTechniciansArray":"proximityTechArray","destinations":"destinations","startDate":"taskStartTime"},"outputVarMap":{"validTechList":"validTechList","destinations":"destinations","proximityScoreData":"proximityScoreData"},"nodeType":"WORKFLOW"},"workflowNodes":["start","processFilters","fetchFilteredTechniciansEventCall","processFinalFilterForAllTechs","getFinalTechniciansData","findNumberOfBatches","areMoreTechsPresent","getMoreFinalTechniciansData","appendTechs","addFilteredTechsToArray","checkIfRegionFilterApplied","getWorkGroupIds","processWorkGroupIds","callRegionWorkGroupFilterWF","checkIfTechniciansArePresent","callProximityScoreWF","fetchLocalizedKeysForAvailabilityStatus","processLocalizedKeys","getTechniciansAvailability","processFinalData","end"],"getTechniciansAvailability":{"connectors":[{"exitPortType":"NextStep","nodeId":"processFinalData"}],"processId":"8EIKAE8E10","name":"getTechniciansAvailability","description":"getTechniciansAvailability","inputVarMap":{"customBatchSize":"batchSize","startDateFilter":"startDateFilter","endDate":"endDate","finalTechniciansData":"techniciansData","workflowCall":"workflowCall","endDateFilter":"endDateFilter","finalTechniciansArray":"technicianArray","endDayDisplayOrder":"endDayDisplayOrder","startDayDisplayOrder":"startDayDisplayOrder","startDate":"startDate"},"outputVarMap":{"techniciansData":"techniciansData"},"nodeType":"WORKFLOW"},"appendTechs":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTechsPresent"}],"contextChangePermitted":true,"name":"appendTechs","description":"appendTechs","processRule":"if (Array.isArray(contextVar.appendFinalTechniciansData)) { contextVar.finalTechniciansData = contextVar.finalTechniciansData.concat(contextVar.appendFinalTechniciansData) } contextVar.finalTechsBatchNumber = contextVar.finalTechsBatchNumber + 1;","nodeType":"PROCESS"},"workflowContext":{"customBatchSize":1000,"contractorIds":[],"workflowCall":"crew","finalTechniciansArray":[],"regionIds":[],"skillLevelIds":[],"finalTechsNoOfBatches":0,"regionWorkGroupIds":[]},"fetchFilteredTechniciansEventCall":{"eventId":"workforceFieldForceCrewFetchAvailableTechniciansProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"checkIfRegionFilterApplied"}],"contextChangePermitted":true,"name":"fetchFilteredTechniciansEventCall","description":"fetchFilteredTechniciansEventCall","inputVarMap":{"customBatchSize":"customBatchSize","startDateFilter":"startDateFilter","endDate":"endDate","endDateFilter":"endDateFilter","workflowCall":"workflowCall","crewId":"crewId","startDate":"startDate"},"outputVarMap":{"data":"processEventData"},"nodeType":"PUBLISH","captureOutput":true},"checkIfTechniciansArePresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"callProximityScoreWF"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"checkIfTechniciansArePresent","description":"checkIfTechniciansArePresent","processRule":"typeof contextVar.finalTechniciansData !== 'undefined' && contextVar.finalTechniciansData.length>0","nodeType":"DECISION"},"processFinalData":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processFinalData","description":"processFinalData","processRule":"{ var sort = function (a, b) { if (a.workforceUserId < b.workforceUserId) { return -1; } if (a.workforceUserId > b.workforceUserId) { return 1; } }; contextVar.finalTechniciansData.sort(sort); contextVar.techniciansData.sort(sort); var localizedKeys = {}; contextVar.finalTechniciansData.forEach(function (element, index) { element.availability = contextVar.techniciansData[index].availability; element.isAvailableForCrews = contextVar.techniciansData[index].isAvailable; if (contextVar.proximityScoreData[element.workforceUserId].value != '') { var time = contextVar.proximityScoreData[element.workforceUserId].value; hours = Math.floor(time / 3600); minutes = Math.floor((time % 3600) / 60); if (typeof localizedKeys.hoursTD !== 'undefined' && typeof localizedKeys.minutesTD !== 'undefined') { element['travelTime'] = (hours === 0) ? minutes + localizedKeys.minutesTD : ((minutes === 0) ? (hours + localizedKeys.hoursTD) : (hours + localizedKeys.hoursTD + ' ' + minutes + localizedKeys.minutesTD)); } else { element['travelTime'] = (hours === 0) ? minutes + 'm' : ((minutes === 0) ? (hours + 'h') : (hours + 'h ' + minutes + 'm')); } } else { element['travelTime'] = '-'; } var userSkill = '', userContractor = '', userRegion = ''; if (typeof element.skill !== 'undefined' && element.skill.length > 0) { element.skill.forEach(function (item, index) { userSkill = (index === 0) ? item.name : userSkill + ', ' + item.name; element.skill = userSkill; }); } else { element.skill = '-' } if (typeof element.contractor !== 'undefined' && element.contractor.length > 0) { element.contractor.forEach(function (item, index) { userContractor = (index === 0) ? item.name : userContractor + ', ' + item.name; element.contractor = userContractor; }); } else { element.contractor = '-' } if (typeof element.region !== 'undefined' && element.region.length > 0) { element.region.forEach(function (item, index) { userRegion = (index === 0) ? item.name : userRegion + ', ' + item.name; element.region = userRegion; }); } else { element.region = '-' } }); if (contextVar.availabilityFilter == 'availableTechs') { contextVar.finalTechniciansData = contextVar.finalTechniciansData.filter(function (element) { return element.isAvailableForCrews; }) } }","nodeType":"PROCESS"},"fetchLocalizedKeysForAvailabilityStatus":{"filter":"{$listOptionAnswer.listOptionId}='availabilityStatus'","models":["listOptionAnswer"],"connectors":[{"exitPortType":"NextStep","nodeId":"processLocalizedKeys"}],"columns":{"listOptionAnswerId":"listOptionAnswer.id","listOptionAnswerAnswerOptionText":"listOptionAnswer.answerOptionText"},"name":"fetchLocalizedKeysForAvailabilityStatus","description":"fetchLocalizedKeysForAvailabilityStatus","outputVarMap":{"data":"availibilityStatus"},"nodeType":"QUERY","translate":true},"checkIfRegionFilterApplied":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getWorkGroupIds"},{"exitPortType":"FalseStep","nodeId":"processFinalFilterForAllTechs"}],"name":"checkIfRegionFilterApplied","description":"checkIfRegionFilterApplied","processRule":"typeof contextVar.regionIds !== 'undefined' && contextVar.regionIds.length>0","nodeType":"DECISION"},"callRegionWorkGroupFilterWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processFinalFilterForAllTechs"}],"processId":"taskSchedulingCalendarRegionBatchDataWF","name":"callRegionWorkGroupFilterWF","description":"callRegionWorkGroupFilterWF","inputVarMap":{"workGroupDataObject":"workGroupDataObject"},"outputVarMap":{"eligibleTechsIds":"allRegionTechsId"},"nodeType":"WORKFLOW"},"processFinalFilterForAllTechs":{"connectors":[{"exitPortType":"NextStep","nodeId":"getFinalTechniciansData"}],"contextChangePermitted":true,"name":"processFinalFilterForAllTechs","description":"processFinalFilterForAllTechs","processRule":"{contextVar.filter='({$workforce.workforceType} IS NULL OR {$workforce.workforceType} != \"webUser\" ) AND ({$workforce.statusId} != \"workforceDeactivated\" OR {$workforce.statusId} IS NULL ) AND  {$User.status}!=\"Deactivated\"';if(contextVar.shiftFilter==='matchingShift'){contextVar.filter+=' AND {$workforce.calendarId} = {@calendarId}';} if(typeof contextVar.contractorFilteredTechs!=='undefined'&&contextVar.contractorFilteredTechs!==''){contextVar.filter+=' AND {$workforceUserId} IN {@contractorFilteredTechs}';} if(typeof contextVar.skillFilteredTechs!=='undefined'&&contextVar.skillFilteredTechs!==''){contextVar.filter+=' AND {$workforceUserId} IN {@skillFilteredTechs}';} if(typeof contextVar.unavailableTechs!=='undefined'&&contextVar.unavailableTechs.length>0){contextVar.filter+=' AND {$workforceUserId} NOT IN {@unavailableTechs}';} if(typeof contextVar.allRegionTechsId!=='undefined'&&contextVar.allRegionTechsId.length>0){contextVar.filter+=' AND {$workforceUserId} IN {@allRegionTechsId}';}}","nodeType":"PROCESS"},"end":{"name":"end","description":"End","inputVarMap":{"finalTechniciansData":"techniciansData"},"outputVarMap":{"techniciansData":"techniciansData"},"nodeType":"END"}}