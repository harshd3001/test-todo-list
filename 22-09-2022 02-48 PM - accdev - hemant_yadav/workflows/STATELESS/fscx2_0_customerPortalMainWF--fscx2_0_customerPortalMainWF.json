{"callCustomerPortalWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"callCustomerPortalWF","description":"callCustomerPortalWF","inputVarMap":{"jobId":"jobId","timezoneOffset":"timezoneOffset","fetchWindowForA":"fetchWindowForA","customerPortalProcessId":"processId","workOrderTaskId":"workOrderTaskId","scheduledDate":"scheduledDate","userIdArray":"userIdArray","workOrderTaskData":"workOrderTaskData","bookingDetails":"bookingDetails"},"outputVarMap":{"customerResponseData":"customerResponseData"},"nodeType":"WORKFLOW"},"processTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"callCustomerPortalWF"}],"contextChangePermitted":true,"name":"processTaskData","description":"processTaskData","processRule":"{ contextVar.bookingDetails = {}; if (contextVar.jobId) { contextVar.bookingDetails.jobId = contextVar.jobId; contextVar.status = true; } else { contextVar.status = false; contextVar.responseTitle = 'Job Id not present'; } contextVar.bookingDetails.confirmationNumber = contextVar.confirmationNumber; if (contextVar.status) { if (contextVar.workOrderTaskData && contextVar.workOrderTaskData.workOrderTaskAppointmentBasedFlag) { contextVar.bookingDetails.startTimeInUTC = contextVar.workOrderTaskData.workOrderTaskAppointmentWindowStartDate; contextVar.bookingDetails.endTimeInUTC = contextVar.workOrderTaskData.workOrderTaskAppointmentWindowEndDate; contextVar.bookingDetails.fileNumber = contextVar.workOrderTaskData.fileNumber; contextVar.fileNumber = contextVar.workOrderTaskData.fileNumber; contextVar.bookingDetails.appointmentWindowId = contextVar.workOrderTaskData.workOrderTaskAppointmentWindowId; contextVar.userIdArray = []; if (contextVar.workOrderTaskData.workOrderTaskAssignedToUserId) { contextVar.userIdArray.push(contextVar.workOrderTaskData.workOrderTaskAssignedToUserId); } } else { contextVar.status = false; contextVar.responseTitle = 'Non-appointment based task'; } } }","nodeType":"PROCESS","jsEngine":"es6"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"name":"start","description":"start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"isActionPresent"}],"name":"logContextVar","description":"logContextVar","inputVarMap":{"featureLoggerWF":"processId","featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"callTaskDataWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskData"}],"ignoreSubContext":true,"name":"callTaskDataWF","description":"callTaskDataWF","inputVarMap":{"workOrderTaskId":"workOrderTaskId","taskDataProcessId":"processId"},"outputVarMap":{"workOrderTaskData":"workOrderTaskData"},"nodeType":"WORKFLOW"},"processCustomerPortalOrderDetails":{"connectors":[{"exitPortType":"NextStep","nodeId":"isProcessIdPresent"}],"contextChangePermitted":true,"name":"processCustomerPortalOrderDetails","description":"processCustomerPortalOrderDetails","processRule":"{ if (Array.isArray(contextVar.customerPortalOrderDetailsData) && contextVar.customerPortalOrderDetailsData.length > 0) { for (let key in contextVar.customerPortalOrderDetailsData[0]) { contextVar[key] = contextVar.customerPortalOrderDetailsData[0][key]; } } contextVar.workOrderTaskId = contextVar.jobId; if (Array.isArray(contextVar.customerPortalActionWorkflowsData)) { contextVar.customerPortalProcessId = contextVar.customerPortalActionWorkflowsData[0].processId; } else { contextVar.status = false; contextVar.responseTitle = 'Process id not present'; } }","nodeType":"PROCESS","jsEngine":"es6"},"workflowNodes":["start","logContextVar","processInitialData","publishEvent","isActionPresent","getCustomerPortalOrderDetails","getCustomerPortalActionWorkflowsDetails","processCustomerPortalOrderDetails","isProcessIdPresent","callTaskDataWF","processTaskData","callCustomerPortalWF","end"],"workflowContext":{"featureLoggerWF":"featureLoggerWF","featureName":"customerPortal","extraMsg":"fscx2_0_customerPortalMainWF","taskDataProcessId":"FQJXQ58NSK"},"isProcessIdPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"callTaskDataWF"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isProcessIdPresent","description":"isProcessIdPresent","processRule":"contextVar.workOrderTaskId !== ''","nodeType":"DECISION"},"publishEvent":{"eventId":"fscx_2_0_customerPortalLogProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"getCustomerPortalOrderDetails"}],"contextChangePermitted":true,"name":"publishEvent","description":"publishEvent","inputVarMap":{"customerPortalLog":"customerPortalLog"},"outputVarMap":{},"nodeType":"PUBLISH"},"getCustomerPortalActionWorkflowsDetails":{"filter":"{$action} = {@action}","models":["customerPortalActionWorkflows"],"connectors":[{"exitPortType":"NextStep","nodeId":"processCustomerPortalOrderDetails"}],"columns":{"processId":"customerPortalActionWorkflows.processId","action":"customerPortalActionWorkflows.action"},"name":"getCustomerPortalActionWorkflowsDetails","description":"getCustomerPortalActionWorkflowsDetails","distinct":true,"inputVarMap":{"action":"action"},"outputVarMap":{"data":"customerPortalActionWorkflowsData"},"nodeType":"QUERY","getCount":true},"getCustomerPortalOrderDetails":{"filter":"{$customerPortalOrderDetails.UID} = {@confirmationNumber}","models":["customerPortalOrderDetails"],"connectors":[{"exitPortType":"NextStep","nodeId":"getCustomerPortalActionWorkflowsDetails"}],"columns":{"jobId":"customerPortalOrderDetails.jobId","UID":"customerPortalOrderDetails.UID","statusId":"customerPortalOrderDetails.statusId","zones":"customerPortalOrderDetails.zones"},"name":"getCustomerPortalOrderDetails","description":"getCustomerPortalOrderDetails","distinct":true,"inputVarMap":{"confirmationNumber":"confirmationNumber"},"links":{},"outputVarMap":{"data":"customerPortalOrderDetailsData"},"nodeType":"QUERY","getCount":true},"end":{"name":"end","description":"End","inputVarMap":{"customerResponseData":"customerResponseData"},"outputVarMap":{"customerResponseData":"customerResponseData"},"nodeType":"END"},"isActionPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processInitialData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isActionPresent","description":"isActionPresent","processRule":"typeof contextVar.action !== 'undefined' && contextVar.action !== ''","nodeType":"DECISION"},"processInitialData":{"connectors":[{"exitPortType":"NextStep","nodeId":"publishEvent"}],"contextChangePermitted":true,"name":"processInitialData","description":"processInitialData","processRule":"{ contextVar.customerPortalLog = []; contextVar.customerPortalLog.push({ 'UID': contextVar.confirmationNumber, 'action': contextVar.action, 'zRequestId': contextVar.zRequestId, requestPayload: JSON.parse(JSON.stringify(contextVar)) }); if (contextVar.zones) { contextVar.newZoneData = { ...contextVar.zones }; } }","nodeType":"PROCESS","jsEngine":"es6"}}