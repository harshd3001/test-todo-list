{"processRemovingTimeZoneFromDate":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processRemovingTimeZoneFromDate","description":"processRemovingTimeZoneFromDate","processRule":"{ for (i = 0; i < contextVar.appointmentWindowData.length; i++) { if (contextVar.appointmentWindowData[i].timeZoneId !== '' || typeof contextVar.appointmentWindowData[i].timeZoneId !== 'undefined') { if (contextVar.appointmentWindowData[i].timeZoneId == 'America/New_York') { timezoneOffset = 240; } else if (contextVar.appointmentWindowData[i].timeZoneId == 'America/Denver') { timezoneOffset = 360; } else if (contextVar.appointmentWindowData[i].timeZoneId == 'America/Los_Angeles') { timezoneOffset = 420; } else if (contextVar.appointmentWindowData[i].timeZoneId == 'America/Chicago') { timezoneOffset = 300; } else { timezoneOffset = 0; } contextVar.appointmentWindowData[i].appointmentWindowStartTime = JSON.stringify(new Date(new Date('2022-01-01 ' + contextVar.appointmentWindowData[i].appointmentWindowStartTime).getTime() - timezoneOffset * 60000)).slice(12, 20); contextVar.appointmentWindowData[i].appointmentWindowEndTime = JSON.stringify(new Date(new Date('2022-01-01 ' + contextVar.appointmentWindowData[i].appointmentWindowEndTime).getTime() - timezoneOffset * 60000)).slice(12, 20); } } contextVar.count = contextVar.appointmentWindowData.length; }","id":"processRemovingTimeZoneFromDate","nodeType":"PROCESS","jsEngine":"es6"},"queryAppointmentWindowData":{"models":["appointmentWindow","listOptionAnswer"],"connectors":[{"exitPortType":"NextStep","nodeId":"processRemovingTimeZoneFromDate"}],"columns":{"appointmentWindowId":"appointmentWindow.id","appointmentWindowStartTime":"appointmentWindow.startTime","appointmentWindowMaxTasks":"appointmentWindow.maxTasks","timeZoneId":"appointmentWindow.accTimeZone","appointmentWindowName":"appointmentWindow.name","accTimeZone":"listOptionAnswer.answerOptionText","appointmentWindowEndTime":"appointmentWindow.endTime","appointmentWindowRecver":"appointmentWindow.recver","appointmentWindowDescription":"appointmentWindow.description"},"name":"queryAppointmentWindowData","description":"queryAppointmentWindowData","distinct":true,"outerJoinOnModel":"appointmentWindow","links":{"appointmentWindow":"listOptionAnswer"},"inputVarMap":{"filter":"filter"},"outputVarMap":{"data":"appointmentWindowData"},"nodeType":"QUERY","getCount":true},"processFilter":{"connectors":[{"exitPortType":"NextStep","nodeId":"queryAppointmentWindowData"}],"contextChangePermitted":true,"name":"processFilter","description":"processFilter","processRule":"if (contextVar.filter != '' && typeof contextVar.filter != 'undefined') { contextVar.filter = contextVar.filter; } else { contextVar.filter = ''; }","id":"processFilter","nodeType":"PROCESS","jsEngine":"es6"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processFilter"}],"name":"start","description":"Start","nodeType":"START"},"end":{"name":"end","description":"End","inputVarMap":{"appointmentWindowData":"appointmentWindowData","count":"count"},"outputVarMap":{"appointmentWindowData":"appointmentWindowData","count":"count"},"nodeType":"END"},"workflowNodes":["start","processFilter","queryAppointmentWindowData","processRemovingTimeZoneFromDate","end"]}