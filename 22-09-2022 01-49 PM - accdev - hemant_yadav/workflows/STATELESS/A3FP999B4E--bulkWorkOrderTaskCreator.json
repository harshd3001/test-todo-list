{"queryZJFse":{"filter":"{$workOrderType.name}={@workOrderType}","models":["workOrderType"],"connectors":[{"exitPortType":"NextStep","nodeId":"querye7JF1"}],"columns":{"id":"workOrderType.id"},"name":"queryZJFse","description":"Provide some description for your query","inputVarMap":{"workOrderType":"workOrderType"},"id":"queryZJFse","outputVarMap":{"data":"workOrderTypeData"},"nodeType":"QUERY"},"decisionNslCT":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processVWriu"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"decisionNslCT","description":"Use this for decision in workflow","processRule":"(contextVar.flag)","id":"decisionNslCT","nodeType":"DECISION"},"decisionuu6De":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getAllPriorityData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"decisionuu6De","description":"Use this for decision in workflow","processRule":"(typeof contextVar.workOrderType !== 'undefined' && typeof contextVar.taskType !== 'undefined' && typeof contextVar.region !== 'undefined' && contextVar.isDateValid && contextVar.totalCount > 0 && contextVar.fromDate < contextVar.toDate && (contextVar.totalCount * contextVar.noOfDays < 1000))","id":"decisionuu6De","nodeType":"DECISION"},"modelE7i2m":{"modelName":"workOrder","connectors":[{"exitPortType":"NextStep","nodeId":"processOpKun"}],"multirecord":true,"name":"modelE7i2m","description":"Provide some description for your model node","inputVarMap":{"workOrderList":"data"},"id":"modelE7i2m","outputVarMap":{"data":"workOrderOutput"},"nodeType":"MODEL","operation":1},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processcBLgT"}],"name":"start","description":"Start","id":"start","nodeType":"START"},"querye7JF1":{"filter":"{$taskType.name}={@taskType}","models":["taskType"],"connectors":[{"exitPortType":"NextStep","nodeId":"querykBQKP"}],"columns":{"id":"taskType.id","estimatedDuration":"taskType.estimatedDuration"},"name":"querye7JF1","description":"Provide some description for your query","inputVarMap":{"taskType":"taskType"},"id":"querye7JF1","outputVarMap":{"data":"taskTypeData"},"nodeType":"QUERY"},"getAllPriorityData":{"models":["ZPriority"],"connectors":[{"exitPortType":"NextStep","nodeId":"querym7NKN"}],"columns":{"ZPriorityTargetModel":"ZPriority.targetModel","ZPriorityPriorityId":"ZPriority.priority","ZPriorityPriorityName":"ZPriority.name"},"description":"getAllPriorityData","inputVarMap":{},"nodeType":"QUERY","filter":"{$ZPriorityTargetModel} = 'workOrder'","name":"getAllPriorityData","outputVarMap":{"data":"priorityList"},"id":"getAllPriorityData","batchSize":20,"getCount":true,"batchNumber":1},"processVWriu":{"connectors":[{"exitPortType":"NextStep","nodeId":"modelE7i2m"}],"contextChangePermitted":true,"name":"processVWriu","description":"xvvsgsdf","processRule":"@VRDOPI939O","id":"processVWriu","nodeType":"PROCESS"},"workflowNodes":["start","processcBLgT","decisionuu6De","getAllPriorityData","querykBQKP","decisionNslCT","querym7NKN","processVWriu","processgHD5c","querykh50R","querydEfuO","queryZJFse","querye7JF1","modelE7i2m","processOpKun","processNxy9N","queryqoiTK","modelwFNxB","processaWPS5","end"],"processgHD5c":{"connectors":[{"exitPortType":"NextStep","nodeId":"decisionNslCT"}],"contextChangePermitted":true,"name":"processgHD5c","description":"Use this for processing data in workflow","processRule":"{ contextVar.flag = true; function checkForNull(data) { if(typeof data === 'undefined' || data == null || data == '' || data.length <= 0) { return true; } else { return false; } } var message = 'Missing data from models - '; if (checkForNull(contextVar.priorityList)) { message = message + 'priority'; contextVar.flag = false; } if (checkForNull(contextVar.slaData)) { message = message + 'sla '; contextVar.flag = false; } if (checkForNull(contextVar.workOrderTypeData)) { message = message + 'workOrderType '; contextVar.flag = false; } if (checkForNull(contextVar.taskTypeData)) { message = message + 'taskType '; contextVar.flag = false; } if (checkForNull(contextVar.regionSiteCustomerData)) { message = message + 'region '; contextVar.flag = false; } if (checkForNull(contextVar.calendarData)) { message = message + 'calendar '; contextVar.flag = false; } if (checkForNull(contextVar.technicianData)) { message = message + 'technician '; contextVar.flag = false; } contextVar.message = message; }","id":"processgHD5c","nodeType":"PROCESS"},"querykh50R":{"filter":"","models":["calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"querydEfuO"}],"columns":{"calendarId":"calendar.id","weeklySchedule":"[calendar]->[weeklySchedule](day,openingTime,closingTime)","holidays":"[calendar]->[calendarHoliday]->[holiday](name,date)"},"name":"querykh50R","description":"Provide some description for your query","outerJoinOnModel":"calendar","links":{},"inputVarMap":{},"id":"querykh50R","outputVarMap":{"data":"calendarData"},"nodeType":"QUERY"},"queryqoiTK":{"filter":"{$id} in {@queryWorkOrderIds}","models":["workOrder"],"connectors":[{"exitPortType":"NextStep","nodeId":"processNxy9N"}],"columns":{"customerId":"workOrder.customerId","id":"workOrder.id"},"name":"queryqoiTK","description":"Provide some description for your query","inputVarMap":{"queryWorkOrderIds":"queryWorkOrderIds"},"id":"queryqoiTK","outputVarMap":{"data":"customerWorkOrderData"},"nodeType":"QUERY"},"processaWPS5":{"contextChangePewrmitted":true,"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"processaWPS5","description":"Use this for processing data in workflow","processRule":"contextVar.message = 'Number of tasks created = ' + contextVar.taskListOutput.length;","id":"processaWPS5","nodeType":"PROCESS"},"modelwFNxB":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"processaWPS5"}],"multirecord":true,"name":"modelwFNxB","description":"Provide some description for your model node","inputVarMap":{"taskList":"data"},"id":"modelwFNxB","outputVarMap":{"data":"taskListOutput"},"nodeType":"MODEL","operation":1},"processNxy9N":{"connectors":[{"exitPortType":"NextStep","nodeId":"modelwFNxB"}],"contextChangePermitted":true,"name":"processNxy9N","description":"Use this for processing data in workflow","processRule":"var regionSiteCustomerData = contextVar.regionSiteCustomerData; var siteCustomerLink = {}; for(var i = 0; i< regionSiteCustomerData.length; i++){ siteCustomerLink[regionSiteCustomerData[i].siteId] = regionSiteCustomerData[i].customerId; } var custWorkOrderLink = {}; for(var i = 0;i < contextVar.customerWorkOrderData.length; i++){ custWorkOrderLink[contextVar.customerWorkOrderData[i].customerId] = contextVar.customerWorkOrderData[i].id; } contextVar.taskList.forEach(function(obj){ obj.workOrderId = custWorkOrderLink[siteCustomerLink[obj.siteId]]; });","id":"processNxy9N","nodeType":"PROCESS"},"processOpKun":{"connectors":[{"exitPortType":"NextStep","nodeId":"queryqoiTK"}],"contextChangePermitted":true,"name":"processOpKun","description":"Use this for processing data in workflow","processRule":"contextVar.queryWorkOrderIds = []; for(var i = 0;i < contextVar.workOrderOutput.length; i++){ contextVar.queryWorkOrderIds.push(contextVar.workOrderOutput[i].id); }","id":"processOpKun","nodeType":"PROCESS"},"processcBLgT":{"connectors":[{"exitPortType":"NextStep","nodeId":"decisionuu6De"}],"contextChangePermitted":true,"name":"processcBLgT","description":"Use this for processing data in workflow","processRule":"{ function initalizer() { if(typeof contextVar.workOrderType === 'undefined') { contextVar.message = 'Work Order type has not been specified'; return; } if(typeof contextVar.taskType === 'undefined') { contextVar.message = 'Task type has not been specified'; return; } if(typeof contextVar.region === 'undefined') { contextVar.message = 'Region has not been specified'; return; } contextVar.openCount = contextVar.status && contextVar.status.open ? parseInt(contextVar.status.open) : 0; contextVar.scheduledCount = contextVar.status && contextVar.status.scheduled ? parseInt(contextVar.status.scheduled) : 0; contextVar.totalCount = contextVar.openCount + contextVar.scheduledCount; if(contextVar.totalCount <= 0) { contextVar.message = 'Specify number of open and scheduled tasks to be created'; return; } contextVar.startDate = new Date(contextVar.fromDate); contextVar.endDate = new Date(contextVar.toDate); contextVar.isDateValid = (contextVar.startDate instanceof Date && !isNaN(contextVar.startDate)) && (contextVar.endDate instanceof Date && !isNaN(contextVar.endDate)); if (!contextVar.isDateValid) { contextVar.message = 'Not able to create tasks. Date should be in the format YYYY-MM-DD'; return; } if(contextVar.startDate > contextVar.endDate){ contextVar.message = 'Start date is greater than end date'; return; } if(contextVar.startDate.toJSON().slice(0,10) == contextVar.endDate.toJSON().slice(0,10)){ contextVar.noOfDays = 1; }else{ var diffTime = Math.abs(contextVar.endDate - contextVar.startDate); var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); contextVar.noOfDays = diffDays; } if(contextVar.totalCount * contextVar.noOfDays >= 1000) { contextVar.message = 'More than 1000 tasks cannot be created per run . Number of days = ' + contextVar.noOfDays + ' , Task per day = ' + contextVar.totalCount + ', Total count = ' + (contextVar.totalCount * contextVar.noOfDays); return; } contextVar.openingTime = contextVar.startDate.toLocaleTimeString(); contextVar.closingTime = contextVar.endDate.toLocaleTimeString(); contextVar.totalTasks = contextVar.totalCount * contextVar.noOfDays; return; } initalizer(); contextVar.durationBetweenTasks = contextVar.durationBetweenTasks ? parseInt(contextVar.durationBetweenTasks) : 15; }","id":"processcBLgT","nodeType":"PROCESS"},"end":{"name":"end","description":"End","inputVarMap":{"taskListOutput":"taskListOutput","message":"message"},"outputVarMap":{"taskListOutput":"taskListOutput","message":"message"},"id":"end","nodeType":"END"},"querykBQKP":{"models":["region","customer","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"querykh50R"}],"columns":{"regionId":"region.id","customerId":"customer.id","siteId":"site.id","customerName":"customer.companyName"},"description":"Provide some description for your query","outerJoinOnModel":"site","inputVarMap":{"region":"regionName"},"nodeType":"QUERY","filter":"{$region.name}={@regionName}","name":"querykBQKP","links":{"region":"customerSite","customer":"customerSite"},"id":"querykBQKP","outputVarMap":{"data":"regionSiteCustomerData"},"batchSize":1000,"getCount":true},"querym7NKN":{"models":["contract","customer","sla","calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"queryZJFse"}],"columns":{"slaId":"sla.id","contractId":"contract.id","customerId":"customer.id","contractNumber":"contract.contractNumber","serviceWindow":"[contract]->[customer]->[calendar](id,name)","slaData":"[contract]->[sla]->[slaTimeFrame](resolutionTimeAmount,priorityPriority,resolutionTimeUnit)"},"description":"Provide some description for your query","outerJoinOnModel":"contract","inputVarMap":{},"nodeType":"QUERY","filter":"","name":"querym7NKN","links":{"calendar":"contract","slaTimeFrame":"sla","sla":"contract","customer":"contract","ZPriority":"slaTimeFrame"},"id":"querym7NKN","outputVarMap":{"data":"slaData"},"getCount":true},"querydEfuO":{"filter":"","models":["workforce"],"connectors":[{"exitPortType":"NextStep","nodeId":"processgHD5c"}],"columns":{"userId":"userId"},"name":"querydEfuO","description":"Provide some description for your query","inputVarMap":{},"id":"querydEfuO","outputVarMap":{"data":"technicianData"},"nodeType":"QUERY","batchSize":1000,"getCount":true}}