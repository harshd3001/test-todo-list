{"processWeek":{"connectors":[{"exitPortType":"NextStep","nodeId":"areTechsPresent"}],"contextChangePermitted":true,"name":"processWeek","description":"processTaskprocessWeekData","processRule":"{ function toDateString(date) { var dateString = ''; function pad(number) { if (number < 10) { return '0' + number; } return number; } if (date instanceof Date) { dateString = date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + ' ' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + '.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5); } return dateString; } var actualDate = contextVar.taskStartTime; var startDate = new Date(actualDate); var day = new Date(startDate).getDay(); var endDateValue = 6 - day; contextVar.startDay = new Date(startDate.setDate(startDate.getDate() - day)); contextVar.endDay = new Date(new Date(contextVar.taskStartTime).setDate(new Date(contextVar.taskStartTime).getDate() + parseInt(endDateValue))); contextVar.startDay = toDateString(contextVar.startDay).split(' ')[0] + ' 00:00:00.000'; contextVar.endDay = toDateString(contextVar.endDay).split(' ')[0] + ' 23:59:59.000'; contextVar.originalTechnicianArray = JSON.parse(JSON.stringify(contextVar.techArray)); contextVar.noOfTechBatches = Math.ceil(contextVar.originalTechnicianArray.length / contextVar.customBatchSize); }","id":"processWeek","nodeType":"PROCESS"},"processUtilisationRate":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processUtilisationRate","description":"processTaskprocessWeekData","processRule":"{ if (typeof contextVar.queryFreeTechs !== 'undefined' && contextVar.queryFreeTechs !== '' && contextVar.queryFreeTechs.length > 0) { contextVar.utilizationScoreData = {}; contextVar.queryFreeTechs.forEach(function (element) { contextVar.utilizationScoreData[element.userId] = ((parseInt(element.score) / parseInt(element.calendarTotalWorkingDuration)) * 100).toFixed(0); }); } }","id":"processUtilisationRate","nodeType":"PROCESS"},"fetchMoreTechs":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processTechnicianData"},{"exitPortType":"FalseStep","nodeId":"processUtilisationRate"}],"data":"originalTechnicianArray","name":"fetchMoreTechs","description":"fetchMoreTechs","inputVarMap":{},"processRule":"contextVar.noOfTechBatches >= contextVar.newTechBatchNumber","id":"fetchMoreTechs","outputVarMap":{},"nodeType":"WHILELOOP"},"appendTechs":{"connectors":[{"exitPortType":"NextStep","nodeId":"areTechsPresent"}],"contextChangePermitted":true,"name":"appendTechs","description":"appendTechs","processRule":"{ if (Array.isArray(contextVar.appendQueryFreeTechs)) { contextVar.queryFreeTechs = contextVar.queryFreeTechs.concat(contextVar.appendQueryFreeTechs); } }","nodeType":"PROCESS"},"processTechnicianData":{"connectors":[{"exitPortType":"NextStep","nodeId":"queryFreeTechs"}],"contextChangePermitted":true,"name":"processTechnicianData","description":"processTechnicianData","processRule":"{contextVar.loopArray = [];contextVar.loopArray = contextVar.originalTechnicianArray.splice(0,contextVar.customBatchSize);}","nodeType":"PROCESS"},"workflowContext":{"customBatchSize":1000,"noOfBatchesTask":0,"statusFilter":["workOrderTaskScheduled","workOrderTaskDispatched","workOrderTaskInProgress","workOrderTaskIncident","workOrderTaskInTransit","workOrderTaskDelayed","workOrderTaskPendingReview","workOrderTaskCompleted"],"newTechBatchNumber":1,"queryFreeTechs":[]},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processWeek"}],"name":"start","description":"start","id":"start","nodeType":"START"},"areTechsPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchMoreTechs"},{"exitPortType":"FalseStep","nodeId":"processUtilisationRate"}],"name":"areTechsPresent","description":"areTechsPresent","processRule":"typeof contextVar.originalTechnicianArray !== 'undefined' && contextVar.originalTechnicianArray.length > 0","nodeType":"DECISION"},"end":{"name":"End","description":"End","inputVarMap":{"utilizationScoreData":"utilizationScoreData"},"outputVarMap":{"utilizationScoreData":"utilizationScoreData"},"id":"end","nodeType":"END"},"workflowNodes":["start","processWeek","areTechsPresent","fetchMoreTechs","processTechnicianData","queryFreeTechs","appendTechs","processUtilisationRate","end"],"queryFreeTechs":{"models":["workOrderTask","workforce","taskType","ZStatus","calendar"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendTechs"}],"columns":{"score":"SUM({$workOrderTask.estimatedDuration})","calendarTotalWorkingDuration":"calendar.totalWorkingDuration","userId":"workforce.userId"},"description":"Query Free Technicians","distinct":true,"inputVarMap":{"customBatchSize":"batchSize","statusFilter":"statusFilter","startDay":"startDay","endDay":"endDay","loopArray":"loopArray"},"groupBy":"userId","nodeType":"QUERY","filter":"{$userId} IN {@loopArray} AND {$workOrderTask.scheduledDate} BETWEEN {@startDay} AND {@endDay} and {$workOrderTask.statusId} IN {@statusFilter} and {$taskType.webTask} = false","name":"queryFreeTechs","links":{"calendar":"workforce","taskType":"workOrderTask","workforce":"workOrderTask","ZStatus":"workOrderTask"},"id":"queryFreeTechs","outputVarMap":{"data":"appendQueryFreeTechs","batchNumber":"freeTechsNumber"},"batchSize":"batchSize","getCount":true}}