{"workflowContext":{"customBatchSize":1000,"taskTypeHistoryData":[],"workOrderTaskCompleted":"workOrderTaskCompleted","taskTypeTechnicianBatches":0},"appendTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTechsPresent"}],"contextChangePermitted":true,"name":"appendTasks","description":"appendTasks","processRule":"{ if (Array.isArray(contextVar.taskTypeTaskDataToAppend)) { contextVar.taskTypeHistoryData = contextVar.taskTypeHistoryData.concat(contextVar.taskTypeTaskDataToAppend); } }","id":"appendTasks","nodeType":"PROCESS"},"areMoreTechsPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"technicianProcessData"},{"exitPortType":"FalseStep","nodeId":"calculateTaskTypeHistory"}],"name":"areMoreTechsPresent","description":"areMoreTechsPresent","processRule":"typeof contextVar.taskTypeTechnicianIds !== 'undefined' && contextVar.taskTypeTechnicianIds.length > 0","id":"areMoreTechsPresent","nodeType":"DECISION"},"technicianProcessData":{"connectors":[{"exitPortType":"NextStep","nodeId":"getTechsTaskData"}],"contextChangePermitted":true,"name":"technicianProcessData","description":"technicianProcessData","processRule":"{ contextVar.loopArray = []; contextVar.loopArray = contextVar.taskTypeTechnicianIds.splice(0, contextVar.customBatchSize); contextVar.taskTypeHistoryFilter = '{$status} = {@workOrderTaskCompleted} AND {$assignToUserId} IN {@loopArray}  AND {$workOrderTask.taskTypeId} = {@workOrderTaskTaskTypeId}'; }","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfBatchesOfTechnician"}],"name":"start","description":"Start","nodeType":"START"},"end":{"name":"End","description":"end","inputVarMap":{"taskTypeHistoryFinalData":"taskTypeHistoryFinalData"},"outputVarMap":{"taskTypeHistoryFinalData":"taskTypeHistoryFinalData"},"nodeType":"END"},"findNumberOfBatchesOfTechnician":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTechsPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatchesOfTechnician","description":"findNumberOfBatchesOfTechnician","processRule":"{contextVar.taskTypeTechnicianBatches = Math.ceil(contextVar.techArray.length / contextVar.customBatchSize);contextVar.taskTypeTechnicianIds = JSON.parse(JSON.stringify(contextVar.techArray)); }","nodeType":"PROCESS"},"getTechsTaskData":{"models":["workOrderTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendTasks"}],"columns":{"workOrderTaskSiteId":"workOrderTask.siteId","tth":"(count({$workOrderTask.id}))","assignToUserId":"workOrderTask.assignedToUserId","status":"workOrderTask.statusId"},"description":"Fetch Task Details","distinct":true,"inputVarMap":{"customBatchSize":"batchSize","taskTypeHistoryFilter":"filter","workOrderTaskCompleted":"workOrderTaskCompleted","loopArray":"loopArray","workOrderTaskTaskTypeId":"workOrderTaskTaskTypeId"},"groupBy":"assignToUserId","nodeType":"QUERY","filter":"filter","name":"getTechsTaskData","id":"getTechsTaskData","outputVarMap":{"data":"taskTypeTaskDataToAppend"},"batchSize":"batchSize","getCount":true},"workflowNodes":["start","findNumberOfBatchesOfTechnician","areMoreTechsPresent","technicianProcessData","getTechsTaskData","appendTasks","calculateTaskTypeHistory","end"],"calculateTaskTypeHistory":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"calculateTaskTypeHistory","description":"calculateTaskTypeHistory","processRule":"{ contextVar.taskTypeHistoryFinalData = {}; if (typeof contextVar.taskTypeHistoryData != 'undefined' && contextVar.taskTypeHistoryData != '' && contextVar.taskTypeHistoryData.length > 0) { var sortable = []; var high; contextVar.taskTypeHistoryData.forEach(function (element) { if (typeof element.assignToUserId !== 'undefined' && element.assignToUserId !== '' && typeof element.tth !== 'undefined' && element.tth !== '') { sortable.push([element.assignToUserId, element.tth]); } }); if (sortable.length > 0) { sortable.sort(function (a, b) { return b[1] - a[1]; }); high = sortable[0][1]; sortable.forEach(function (element) { if (element[1] == high) { contextVar.taskTypeHistoryFinalData[element[0]] = (element[1] === 0) ? 0 : 100; } else { contextVar.taskTypeHistoryFinalData[element[0]] = Math.ceil((element[1]) / high * 100); } }); } } } ","id":"calculateTaskTypeHistory","nodeType":"PROCESS"}}