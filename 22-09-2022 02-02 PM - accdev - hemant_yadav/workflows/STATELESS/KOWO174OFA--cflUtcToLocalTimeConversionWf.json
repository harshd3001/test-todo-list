{"decisionLatLong":{"connectors":[{"exitPortType":"TrueStep","nodeId":"end"},{"exitPortType":"FalseStep","nodeId":"processLatLong"}],"name":"decisionLatLong","description":"decisionLatLong","processRule":"(typeof contextVar.latitude === 'undefined' || contextVar.latitude === '') && (typeof contextVar.longitude === 'undefined' || contextVar.longitude === '')","nodeType":"DECISION"},"getTimezoneBasedOnLocation":{"connectors":[{"exitPortType":"NextStep","nodeId":"processTimeZoneData"}],"name":"getTimezoneBasedOnLocation","description":"getTimezoneBasedOnLocation","networkId":"UH6NLJO3AC","inputVarMap":{"location":"location","timestamp":"timestamp"},"outputVarMap":{"data":"timeZoneOffsetData"},"nodeType":"NETWORK"},"processLatLong":{"connectors":[{"exitPortType":"NextStep","nodeId":"getTimezoneBasedOnLocation"}],"contextChangePermitted":true,"name":"processLatLong","description":"processLatLong","processRule":"{if((typeof contextVar.latitude==='undefined'||contextVar.latitude===''||isNaN(parseInt(contextVar.latitude)))||(typeof contextVar.longitude==='undefined'||contextVar.longitude===''||isNaN(parseInt(contextVar.longitude)))){contextVar.location='0,0';contextVar.timestamp=(new Date().getTime()/1000);}else{contextVar.latitude=contextVar.latitude.toString();contextVar.longitude=contextVar.longitude.toString();contextVar.location=contextVar.latitude.concat(',',contextVar.longitude);contextVar.timestamp=(new Date().getTime()/1000);}}","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"decisionLatLong"}],"name":"start","description":"start","position":{"x":90,"y":20},"nodeType":"START"},"end":{"name":"end","description":"end","inputVarMap":{"timeZoneName":"timeZoneName","timezoneoffset":"timeZone","status":"timeZoneApiStatus"},"outputVarMap":{"timeZoneApiStatus":"timeZoneApiStatus","timeZoneName":"timeZoneName","timeZone":"timeZone"},"position":{"x":320,"y":20},"nodeType":"END"},"processTimeZoneData":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processTimeZoneData","description":"processTimeZoneData","processRule":"{ if (contextVar.timeZoneOffsetData.length > 0) { contextVar.status = contextVar.timeZoneOffsetData[0].status; if (contextVar.status == 'OK') { var timezoneoffsetRaw = contextVar.timeZoneOffsetData[0].rawOffset; var timezoneoffsetDst = contextVar.timeZoneOffsetData[0].dstOffset; if (timezoneoffsetDst > 0) { timezoneoffsetAdded = timezoneoffsetRaw + timezoneoffsetDst; } else { timezoneoffsetAdded = timezoneoffsetRaw; } var truncate = function (v) { return v < 0 ? Math.ceil(v) : Math.floor(v); }; function timeZoneFormat(duration) { var hrs = truncate(duration / 3600); var mins = truncate((duration % 3600) / 60); var newmins = mins.toString().replace('-', ''); if (hrs > -1) { hrs = '+'.concat(hrs) } var ret = ''; if (parseInt(newmins) > 0) { ret += '' + hrs + ':' + newmins; } else { ret += '' + hrs; } return ret; } contextVar.timezoneoffset = timeZoneFormat(timezoneoffsetAdded); contextVar.timeZoneName = contextVar.timeZoneOffsetData[0].timeZoneName; } else { contextVar.timezoneoffset = 0; } } else { contextVar.timezoneoffset = 0; } }","nodeType":"PROCESS"},"workflowNodes":["start","decisionLatLong","processLatLong","getTimezoneBasedOnLocation","processTimeZoneData","end"]}