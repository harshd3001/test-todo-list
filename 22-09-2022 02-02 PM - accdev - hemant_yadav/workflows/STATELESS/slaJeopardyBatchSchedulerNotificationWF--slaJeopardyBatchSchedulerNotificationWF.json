{"insertIntoAimlRecs":{"modelName":"AimlRecs","connectors":[{"exitPortType":"NextStep","nodeId":"areThereScheduledJobs"}],"multirecord":true,"name":"insertIntoAimlRecs","description":"insertIntoAimlRecs","inputVarMap":{"recommendations":"data"},"id":"insertIntoAimlRecs","outputVarMap":{"data":"retAimlId"},"nodeType":"MODEL","operation":4},"workflowContext":{"customBatchSize":1000,"taskStatusId":"workOrderTaskDispatched","featureName":"batchScheduler","payload":{"aimlRecTypeId":"autoSchedulingTaskFailed","priorityModel":"AimlRecs","rejected":false,"notified":false,"accepted":false,"recommendation":" could not be auto scheduled. Please review this task and schedule it manually.","priority":20,"done":false,"expired":false,"addDecisionToTraining":false,"recommendContext":{},"superseded":false,"status":"recommended"},"extraMsg":"NOTIFICATION: slaJeopardyBatchSchedulerNotificationWF call","recommendations":[]},"areThereOpenJobs":{"connectors":[{"exitPortType":"TrueStep","nodeId":"insertIntoAimlRecs"},{"exitPortType":"FalseStep","nodeId":"areThereScheduledJobs"}],"name":"areThereOpenJobs","description":"areThereOpenJobs","processRule":"(Array.isArray(contextVar.openJobs) && contextVar.openJobs.length > 0)","nodeType":"DECISION"},"areThereScheduledJobs":{"connectors":[{"exitPortType":"TrueStep","nodeId":"callBulkDispatchWF"},{"exitPortType":"FalseStep","nodeId":"processDataForSchedulerLog"}],"name":"areThereScheduledJobs","description":"areThereScheduledJobs","processRule":"(Array.isArray(contextVar.assignedJobs) && contextVar.assignedJobs.length > 0)","nodeType":"DECISION"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processInitialData"}],"name":"Start","description":"Start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchStatusData"}],"processId":"featureLoggerWF","name":"logContextVar","description":"logContextVar","inputVarMap":{"featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"end":{"name":"end","description":"End","inputVarMap":{"schedulerLog":"schedulerLog"},"outputVarMap":{"schedulerLog":"schedulerLog"},"nodeType":"END"},"fetchStatusData":{"filter":"{$ZStatus.id} = {@taskStatusId}","models":["ZStatus"],"connectors":[{"exitPortType":"NextStep","nodeId":"areThereOpenJobs"}],"columns":{"name":"ZStatus.name","colorCode":"ZStatus.colorCode","id":"ZStatus.id"},"name":"fetchStatusData","description":"fetchStatusData","inputVarMap":{"taskStatusId":"taskStatusId"},"outputVarMap":{"data":"statusData"},"nodeType":"QUERY"},"processDataForSchedulerLog":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processDataForSchedulerLog","description":"processDataForSchedulerLog","processRule":"{ contextVar.schedulerLog[0].result = JSON.parse(contextVar.schedulerLog[0].result); if (Array.isArray(contextVar.successTasksList) && contextVar.successTasksList.length > 0) { var successArray = contextVar.successTasksList.map(item => { return item.workOrderTaskId; }); for (let value of contextVar.schedulerLog[0].result) { if (successArray.indexOf(value.id) !== -1) { value.statusId = contextVar.taskStatusId; value.statusName = contextVar.statusData[0].name; value.statusNameColor = contextVar.statusData[0].colorCode; } } } }","nodeType":"PROCESS","jsEngine":"es6"},"workflowNodes":["start","processInitialData","logContextVar","fetchStatusData","areThereOpenJobs","insertIntoAimlRecs","processDataForSchedulerLog","areThereScheduledJobs","callBulkDispatchWF","end"],"processInitialData":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"contextChangePermitted":true,"name":"processInitialData","description":"processInitialData","processRule":"{ if (typeof contextVar.openJobs !== 'undefined' && contextVar.openJobs.length > 0) { var payload; contextVar.openJobs.forEach(function (job) { payload = JSON.parse(JSON.stringify(contextVar.payload)); payload.recommendation = job + contextVar.payload.recommendation; contextVar.recommendations.push(payload); }); } }","id":"processInitialData","nodeType":"PROCESS","jsEngine":"es6"},"callBulkDispatchWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"processDataForSchedulerLog"}],"processId":"taskSchedulingBulkDispatchExecutionWF","name":"callBulkDispatchWF","description":"callBulkDispatchWF","inputVarMap":{"assignedJobs":"tasksDispatchData"},"outputVarMap":{"successTasksList":"successTasksList"},"nodeType":"WORKFLOW"}}