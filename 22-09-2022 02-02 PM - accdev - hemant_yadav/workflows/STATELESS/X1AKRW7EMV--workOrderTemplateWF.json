{"insertWorkOrderTemplateTaskDependency":{"modelName":"templateTaskDependency","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"multirecord":true,"name":"insertWorkOrderTemplateTaskDependency","description":"insertWorkOrderTemplateTaskDependency","inputVarMap":{"tasksDependencyData":"data"},"outputVarMap":{"data":"data"},"nodeType":"MODEL","operation":1},"processTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertWorkOrderTemplateTask"}],"contextChangePermitted":true,"name":"processTaskData","description":"processTaskData","processRule":"{ contextVar.taskJsonObj = []; contextVar.taskIdList = []; if (typeof contextVar.taskData !== 'undefined' && contextVar.taskData.length > 0 && contextVar.templateSubAction === 'upsertTemplate') { contextVar.taskData.forEach(function (element) { contextVar.taskIdList.push(element.taskId); }); contextVar.taskData.forEach(function (element, index) { element['id'] = ''; element['workOrderTemplateId'] = contextVar.workOrderTemplateId; index++; if (index > 9) { element['name'] = 'Task' + (index); } else { element['name'] = 'Task0' + (index); } delete element['taskId']; contextVar.taskJsonObj.push(element); }); } else if (contextVar.templateSubAction === 'upsertTemplateTask') { var obj = {}; obj['id'] = contextVar.id; obj['workOrderTemplateId'] = contextVar.workOrderTemplateId; obj['taskTypeId'] = contextVar.taskTypeId; obj['services'] = contextVar.services; obj['estimatedDuration'] = contextVar.estimatedDuration; obj['enableServices'] = contextVar.enableServices; contextVar.taskJsonObj.push(obj); } }","id":"processZRule","nodeType":"PROCESS"},"mapTaskIdAndworkOrderTemplateTaskId":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchInventory"}],"contextChangePermitted":true,"name":"mapTaskIdAndworkOrderTemplateTaskId","description":"mapTaskIdAndworkOrderTemplateTaskId","processRule":"{ contextVar.mapTaskData = []; if (typeof contextVar.taskIdList !== 'undefined' && contextVar.taskIdList !== '' && contextVar.taskIdList.length > 0 && typeof contextVar.data !== 'undefined' && contextVar.data !== '' && contextVar.data.length > 0) { for (var i = 0; i < contextVar.taskIdList.length; i++) { contextVar.mapTaskData.push({ taskId: contextVar.taskIdList[i], templateTaskId: contextVar.data[i].id }); } } }","id":"mapTaskIdAndworkOrderTemplateTaskId","nodeType":"PROCESS"},"isWorkOrderTemplateTaskAvailable":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processTemplateTaskData"},{"exitPortType":"FalseStep","nodeId":"deleteWorkOrderTemplate"}],"name":"isWorkOrderTemplateTaskAvailable","description":"isWorkOrderTemplateTaskAvailable","processRule":"(contextVar.workOrderTemplateTaskData.length!== 0)","nodeType":"DECISION"},"processTemplateTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"deleteWorkOrderTemplateTasks"}],"contextChangePermitted":true,"name":"processTemplateTaskData","description":"processTemplateTaskData","processRule":"{ if (contextVar.workOrderTemplateTaskData !== 'undefined' && contextVar.workOrderTemplateTaskData.length > 0) { contextVar.templateTaskJsonObj = []; contextVar.workOrderTemplateTaskData.forEach(function (element) { var obj = {}; obj['id'] = element.workOrderTemplateTaskId; obj['recver'] = element.workOrderTemplateTasRecver; contextVar.templateTaskJsonObj.push(obj); }); } }","id":"processTemplateTaskData","nodeType":"PROCESS"},"multiDecision":{"connectors":[{"condition":"contextVar.templateSubAction==='upsertTemplate'","exitPortType":"NextStep","nodeId":"upsertWorkOrderTemplateV2"},{"condition":"contextVar.templateSubAction==='deleteTemplate'","exitPortType":"NextStep","nodeId":"processWorkOrderTemplateId"},{"condition":"contextVar.templateSubAction==='upsertTemplateTask'","exitPortType":"NextStep","nodeId":"processTaskData"},{"DefaultStep":true,"condition":"contextVar.customerSubAction===''","exitPortType":"NextStep","nodeId":"end"}],"name":"multiDecision","description":"MultiDecision","nodeType":"MULTIDECISION"},"workflowContext":{"workFlowName":"workorderTemplateWF"},"isInventoryDataPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processDataForTemplateInventory"},{"exitPortType":"FalseStep","nodeId":"fetchTasksDependency"}],"name":"isInventoryDataPresent","description":"isInventoryDataPresent","processRule":"(Array.isArray(contextVar.inventoryData) && contextVar.inventoryData.length > 0)","nodeType":"DECISION"},"insertWorkOrderTemplateInventoryData":{"modelName":"workOrderTemplateInventory","connectors":[{"exitPortType":"NextStep","nodeId":"fetchTasksDependency"}],"multirecord":true,"name":"insertWorkOrderTemplateInventoryData","description":"insertWorkOrderTemplateInventoryData","inputVarMap":{"inventoryData":"data"},"outputVarMap":{},"nodeType":"MODEL","operation":1},"fetchInventory":{"filter":"{$workOrderInventory.workOrderId}={@workOrderId}","models":["workOrderInventory"],"connectors":[{"exitPortType":"NextStep","nodeId":"isInventoryDataPresent"}],"columns":{"estimatedQty":"CONVERT(sum({$workOrderInventory.estimatedQty}), CHAR)","catalogId":"workOrderInventory.catalogId","workOrderTaskId":"workOrderInventory.workOrderTaskId"},"name":"fetchInventory","description":"fetchInventory","inputVarMap":{"workOrderId":"workOrderId"},"groupBy":"catalogId,workOrderTaskId","outputVarMap":{"data":"inventoryData"},"nodeType":"QUERY"},"end":{"name":"End","description":"end","nodeType":"END"},"processZRule":{"connectors":[{"exitPortType":"NextStep","nodeId":"multiDecision"}],"contextChangePermitted":true,"name":"processZRule","description":"processZRule","processRule":"@INYLRW7O3A","id":"processZRule","nodeType":"PROCESS"},"processDataForTemplateInventory":{"connectors":[{"exitPortType":"NextStep","nodeId":"insertWorkOrderTemplateInventoryData"}],"contextChangePermitted":true,"name":"processDataForTemplateInventory","description":"processDataForTemplateInventory","processRule":"{contextVar.inventoryData.forEach(function (element) { element['workOrderTemplateId'] = contextVar.workOrderTemplateId; if (typeof element.workOrderTaskId != 'undefined' && element.workOrderTaskId != '') { element['workOrderTemplateTaskId'] = getTemplateTaskId(element.workOrderTaskId, contextVar.mapTaskData); delete element.workOrderTaskId; } else { element['workOrderTemplateTaskId'] = '' } }); function getTemplateTaskId(taskId, mapTaskData) { var templateTaskId; for (const ele of mapTaskData) { if (ele.taskId == taskId) { templateTaskId = ele.templateTaskId; break; } } return templateTaskId; }}","nodeType":"PROCESS","jsEngine":"es6"},"upsertWorkOrderTemplateV2":{"modelName":"workOrderTemplateV2","connectors":[{"exitPortType":"NextStep","nodeId":"getWorkOrderTemplateId"}],"multirecord":true,"name":"upsertWorkOrderTemplate","description":"upsertModel","inputVarMap":{"jsonObj":"data"},"outputVarMap":{"data":"workOrderTemplateData"},"nodeType":"MODEL","operation":4},"upsertWorkOrderTemplateTask":{"modelName":"workOrderTemplateTask","connectors":[{"exitPortType":"NextStep","nodeId":"mapTaskIdAndworkOrderTemplateTaskId"}],"multirecord":true,"name":"upsertWorkOrderTemplateTask","description":"upsertWorkOrderTemplateTask","inputVarMap":{"taskJsonObj":"data"},"outputVarMap":{"data":"data"},"nodeType":"MODEL","operation":4},"fetchWorkOrderTemplateTasks":{"filter":"{$workOrderTemplateTask.workOrderTemplateId} = {@workOrderTemplateId}","models":["workOrderTemplateTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"isWorkOrderTemplateTaskAvailable"}],"columns":{"workOrderTemplateTasRecver":"workOrderTemplateTask.recver","workOrderTemplateTaskId":"workOrderTemplateTask.id"},"name":"fetchWorkOrderTemplateTasks","description":"fetchWorkOrderTemplateTasks","inputVarMap":{"workOrderTemplateId":"workOrderTemplateId"},"outputVarMap":{"data":"workOrderTemplateTaskData"},"nodeType":"QUERY"},"processWorkOrderTemplateId":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchWorkOrderTemplateTasks"}],"contextChangePermitted":true,"name":"processWorkOrderTemplateId","description":"processWorkOrderTemplateId","processRule":"{contextVar.workOrderTemplateId=contextVar.jsonObj[0].id}","id":"processZRule","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processZRule"}],"name":"start","description":"Start","nodeType":"START"},"isTaskAvailable":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processTaskData"},{"exitPortType":"FalseStep","nodeId":"fetchInventory"}],"name":"isTaskAvailable","description":"isTaskAvailable","processRule":"(contextVar.taskData.length!== 0)","nodeType":"DECISION"},"fetchTasks":{"filter":"{$workOrderTask.workOrderId}={@workOrderId} AND {$taskType.webTask}= false ","models":["workOrderTask","taskType"],"connectors":[{"exitPortType":"NextStep","nodeId":"isTaskAvailable"}],"columns":{"taskTypeId":"workOrderTask.taskTypeId","enableServices":"workOrderTask.enableServices","services":"workOrderTask.services","estimatedDuration":"workOrderTask.estimatedDuration","taskId":"workOrderTask.id"},"name":"fetchTasks","description":"fetchTasks","links":{"workOrderTask":"taskType"},"inputVarMap":{"workOrderId":"workOrderId"},"outputVarMap":{"data":"taskData"},"nodeType":"QUERY"},"tasksDependencyDecision":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processTasksDependencyData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"tasksDependencyDecision","description":"tasksDependencyDecision","processRule":"(contextVar.tasksDependencyData.length > 0)","nodeType":"DECISION"},"processTasksDependencyData":{"connectors":[{"exitPortType":"NextStep","nodeId":"insertWorkOrderTemplateTaskDependency"}],"contextChangePermitted":true,"name":"processTasksDependencyData","description":"processTasksDependencyData","processRule":"@674L8ODW2S","id":"processTasksDependencyData","nodeType":"PROCESS"},"workflowNodes":["start","processZRule","multiDecision","upsertWorkOrderTemplateV2","getWorkOrderTemplateId","fetchTasks","isTaskAvailable","processTaskData","upsertWorkOrderTemplateTask","mapTaskIdAndworkOrderTemplateTaskId","fetchInventory","isInventoryDataPresent","processDataForTemplateInventory","insertWorkOrderTemplateInventoryData","fetchTasksDependency","tasksDependencyDecision","processTasksDependencyData","insertWorkOrderTemplateTaskDependency","processWorkOrderTemplateId","fetchWorkOrderTemplateTasks","isWorkOrderTemplateTaskAvailable","processTemplateTaskData","deleteWorkOrderTemplateTasks","deleteWorkOrderTemplate","end"],"deleteWorkOrderTemplateTasks":{"modelName":"workOrderTemplateTask","connectors":[{"exitPortType":"NextStep","nodeId":"deleteWorkOrderTemplate"}],"multirecord":true,"name":"deleteWorkOrderTemplateTasks","description":"deleteWorkOrderTemplateTasks","inputVarMap":{"templateTaskJsonObj":"data"},"nodeType":"MODEL","operation":3},"fetchTasksDependency":{"filter":"{$workOrderTemplateId}={@workOrderId}  ","models":["taskDependency"],"connectors":[{"exitPortType":"NextStep","nodeId":"tasksDependencyDecision"}],"columns":{"workOrderTemplateId":"taskDependency.workOrderId","enforceAllDependency":"taskDependency.enforceAllDependency","precedentStatusId":"taskDependency.precedentStatusId","precedentTask":"taskDependency.precedentTask","dependentTask":"taskDependency.dependentTask","id":"taskDependency.id","dependentStatusId":"taskDependency.dependentStatusId","dependentStatusTargetModel":"taskDependency.dependentStatusTargetModel","precedentStatusTargetModel":"taskDependency.precedentStatusTargetModel"},"name":"fetchTasksDependency","description":"fetchTasksDependency","inputVarMap":{"workOrderId":"workOrderId"},"outputVarMap":{"data":"tasksDependencyData"},"nodeType":"QUERY"},"deleteWorkOrderTemplate":{"modelName":"workOrderTemplateV2","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"multirecord":true,"name":"deleteWorkOrderTemplate","description":"deleteWorkOrderTemplate","inputVarMap":{"jsonObj":"data"},"nodeType":"MODEL","operation":3},"getWorkOrderTemplateId":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTasks"}],"contextChangePermitted":true,"name":"getWorkOrderTemplateId","description":"getWorkOrderTemplateId","processRule":"{contextVar.workOrderTemplateId = contextVar.workOrderTemplateData[0].id; contextVar.workOrderId= contextVar.jsonObj[0].workOrderId;}","id":"processZRule","nodeType":"PROCESS"}}