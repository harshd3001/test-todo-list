{"processTechs":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processTechs","description":"processTechs","processRule":"{ var addMinutes = function (date) { let formattedDate = ((new Date(date.getTime() - (contextVar.timezoneOffset * 60000))).toISOString().replace('T', ' ').replace('Z', '')).split(' '); return `${formattedDate[0].split('-')[1]}-${formattedDate[0].split('-')[2]}-${formattedDate[0].split('-')[0]} ${formattedDate[1].split('.')[0]}`; }; if (typeof contextVar.allTechniciansData == 'undefined' || contextVar.allTechniciansData == '') contextVar.allTechniciansData = []; else { contextVar.allTechniciansData.forEach(function (element) { element.contractor = element.contractor.length > 0 ? element.contractor.map(ele => ele.name).join(', ') : '-'; element.region = element.region.length > 0 ? element.region.map(ele => ele.name).join(', ') : '-'; if (typeof element.userLastSeenTime !== 'undefined') element.lastSeenTimeInLocal = addMinutes(new Date(element.userLastSeenTime)); else element.lastSeenTimeInLocal = '-'; }); } if (typeof contextVar.taskData == 'undefined' || contextVar.taskData == '') contextVar.taskData = []; else { contextVar.taskData.forEach(function (task) { if (typeof task.workOrderTaskScheduledDateMapView !== 'undefined' && task.workOrderTaskScheduledDateMapView !== '-') task.workOrderTaskScheduledDateMapView = addMinutes(new Date(task.workOrderTaskScheduledDateMapView)); }); } contextVar.arrayResult = contextVar.taskData.concat(contextVar.allTechniciansData); }","id":"appendTechs","nodeType":"PROCESS","jsEngine":"es6"},"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTechsPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"contextVar.noOfTechBatches = Math.ceil(contextVar.allTechnicianCount / contextVar.fetchTechsBatchSize);contextVar.techBatchNumber = contextVar.techBatchNumber + 1;","nodeType":"PROCESS"},"areMoreTechsPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchMoreTechsData"},{"exitPortType":"FalseStep","nodeId":"getAllTaskDetails"}],"name":"areMoreTechsPresent","description":"areMoreTechsPresent","processRule":"contextVar.noOfTechBatches >= 2 && contextVar.noOfTechBatches >= contextVar.techBatchNumber","id":"areMoreTechsPresent","nodeType":"DECISION"},"areMoreTasksPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getAllTaskDetails"},{"exitPortType":"FalseStep","nodeId":"processTechs"}],"name":"areMoreTasksPresent","description":"areMoreTasksPresent","processRule":"contextVar.noOfTaskBatches >= 2 && contextVar.noOfTaskBatches >= contextVar.taskBatchNumber","id":"areMoreTasksPresent","nodeType":"DECISION"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchEntityConfig"}],"name":"start","description":"start","id":"start","nodeType":"START"},"fetchTechnicianData":{"models":["workforce","User"],"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfBatches"}],"columns":{"contractor":"[workforce]->[contractorWorkforce]->[contractorRegion]->[contractor](name)","userLastSeenTime":"User.lastSeenTime","latitude":"IF({@showTechniciasHomeLocation} = true,{$workforce.latitude}, {$User.latitude})","icon":"IF({$workforce.userId} IS NULL,'','https://d122pusslfmuhu.cloudfront.net/workflow-images/Light-Blue3%401.5x.svg')","techName":"User.name","workforceUserId":"workforce.userId","type":"IF({$workforce.userId} IS NULL,'','Technician')","region":"[workforce]->[contractorWorkforce]->[contractorRegion]->[region](name)","longitude":"IF({@showTechniciasHomeLocation} = true,{$workforce.longitude}, {$User.longitude})"},"distinct":true,"orderBy":"techName ASC","description":"fetchTechnicianData","outerJoinOnModel":"workforce","inputVarMap":{"showTechniciasHomeLocation":"showTechniciasHomeLocation","fetchTechsBatchSize":"batchSize","finalFilteredUserIdList":"finalFilteredUserIdList"},"nodeType":"QUERY","filter":"{$workforce.userId} IN {@finalFilteredUserIdList}","name":"fetchTechnicianData","links":{"workforce":"User"},"outputVarMap":{"data":"allTechniciansData","count":"allTechnicianCount","batchNumber":"techBatchNumber"},"batchSize":"batchSize","getCount":true},"getFilteredUserIdList":{"connectors":[{"exitPortType":"NextStep","nodeId":"areFilteredUserIdPresent"}],"processId":"workGroupFilterForTechniciansAndTasksWF","name":"getFilteredUserIdList","description":"getFilteredUserIdList","inputVarMap":{"userList":"userList"},"outputVarMap":{"finalFilteredUserIdList":"finalFilteredUserIdList"},"nodeType":"WORKFLOW"},"areFilteredUserIdPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"createFilter"},{"exitPortType":"FalseStep","nodeId":"getAllTaskDetails"}],"name":"areFilteredUserIdPresent","description":"areFilteredUserIdPresent","processRule":"typeof contextVar.finalFilteredUserIdList !== 'undefined' && typeof contextVar.finalFilteredUserIdList[contextVar.userList[0]] !== 'undefined' && contextVar.finalFilteredUserIdList[contextVar.userList[0]].length>0","id":"areFilteredUserIdPresent","nodeType":"DECISION"},"createFilter":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTechnicianData"}],"contextChangePermitted":true,"name":"createFilter","description":"createFilter","processRule":"{ contextVar.finalFilteredUserIdList = contextVar.finalFilteredUserIdList[contextVar.userList[0]]; }","nodeType":"PROCESS"},"fetchMoreTechsData":{"models":["workforce","User"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendTechs"}],"columns":{"contractor":"[workforce]->[contractorWorkforce]->[contractorRegion]->[contractor](name)","userLastSeenTime":"User.lastSeenTime","latitude":"IF({@showTechniciasHomeLocation} = true,{$workforce.latitude}, {$User.latitude})","icon":"IF({$workforce.userId} IS NULL,'','https://d122pusslfmuhu.cloudfront.net/workflow-images/Light-Blue3%401.5x.svg')","techName":"User.name","workforceUserId":"workforce.userId","type":"IF({$workforce.userId} IS NULL,'','Technician')","region":"[workforce]->[contractorWorkforce]->[contractorRegion]->[region](name)","longitude":"IF({@showTechniciasHomeLocation} = true,{$workforce.longitude}, {$User.longitude})"},"distinct":true,"orderBy":"techName ASC","description":"fetchMoreTechsData","inputVarMap":{"techBatchNumber":"batchNumber","fetchTechsBatchSize":"batchSize","finalFilteredUserIdList":"finalFilteredUserIdList"},"nodeType":"QUERY","filter":"{$workforce.userId} IN {@finalFilteredUserIdList}","name":"fetchMoreTechsData","links":{"workforce":"User"},"outputVarMap":{"data":"techDataToAppend"},"batchSize":"batchSize","batchNumber":"batchNumber"},"workflowNodes":["start","fetchEntityConfig","getLoggedInUser","processUserIdAndEntityConfig","getFilteredUserIdList","areFilteredUserIdPresent","createFilter","fetchTechnicianData","findNumberOfBatches","areMoreTechsPresent","fetchMoreTechsData","appendTechs","getAllTaskDetails","findNumberOfBatchesOfTasks","areMoreTasksPresent","processTechs","end"],"findNumberOfBatchesOfTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTasksPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatchesOfTasks","description":"findNumberOfBatchesOfTasks","processRule":"contextVar.noOfTaskBatches = Math.ceil(contextVar.count / contextVar.fetchTasksBatchSize);contextVar.taskBatchNumber = contextVar.taskBatchNumber + 1; if (typeof contextVar.taskData !== 'undefined' && Array.isArray(contextVar.taskData)) { contextVar.allTasksData.concat(contextVar.taskData); }","nodeType":"PROCESS"},"appendTechs":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTechsPresent"}],"contextChangePermitted":true,"name":"appendTechs","description":"appendTechs","processRule":"{ if (typeof contextVar.techDataToAppend !== 'undefined' && Array.isArray(contextVar.techDataToAppend)) { contextVar.allTechniciansData.concat(contextVar.techDataToAppend); } contextVar.techBatchNumber = contextVar.techBatchNumber + 1; }","id":"appendTechs","nodeType":"PROCESS"},"workflowContext":{"allTasksData":[],"showTechniciasHomeLocation":false,"techBatchNumber":0,"allTechniciansData":[],"fetchTasksFilter":"( {$statusName} like '%%' || {$workOrderId} like '%%' || {$workOrderTaskId} like '%%' || {$taskTypeName} like '%%' || {$userName} like '%%' )","taskBatchNumber":1,"count":0,"fetchTechsBatchSize":1000,"orderBy":"","noOfTechBatches":0,"fetchTasksBatchSize":1000,"configKeyArray":["showTechniciasHomeLocation"]},"processUserIdAndEntityConfig":{"connectors":[{"exitPortType":"NextStep","nodeId":"getFilteredUserIdList"}],"contextChangePermitted":true,"name":"processUserIdAndEntityConfig","description":"processUserIdAndEntityConfig","processRule":"{if (typeof contextVar.entityConfigData !== 'undefined' && contextVar.entityConfigData.length > 0) contextVar.showTechniciasHomeLocation = contextVar.entityConfigData[0].configValue == 'true' ? true : false; if (typeof contextVar.currentUserDetails !== 'undefined') { contextVar.userList = []; contextVar.userList.push(contextVar.currentUserDetails[0].userId) }; }","nodeType":"PROCESS"},"getAllTaskDetails":{"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfBatchesOfTasks"}],"processId":"NI7F9488VO","name":"getAllTaskDetails","description":"getAllTaskDetails from Workflow","inputVarMap":{"statusFilter":"statusFilter","fetchTasksFilter":"filter","taskBatchNumber":"batchNumber","fetchTasksBatchSize":"batchSize"},"id":"getAllTaskDetails","outputVarMap":{"schedulingAndDispatchData":"taskData"},"execType":"fork","nodeType":"WORKFLOW"},"getLoggedInUser":{"filter":"{$userId}={@userId}","models":["User"],"connectors":[{"exitPortType":"NextStep","nodeId":"processUserIdAndEntityConfig"}],"columns":{"userName":"User.name","userId":"User.id"},"name":"getLoggedInUser","description":"getLoggedInUser","inputVarMap":{"{@userId}":"userId"},"outputVarMap":{"data":"currentUserDetails"},"nodeType":"QUERY"},"end":{"name":"End","description":"end","inputVarMap":{"arrayResult":"arrayResult"},"outputVarMap":{"arrayResult":"arrayResult"},"id":"end","nodeType":"END"},"fetchEntityConfig":{"filter":"{$configKey} IN {@configKeyArray} ","models":["EntityConfig"],"connectors":[{"exitPortType":"NextStep","nodeId":"getLoggedInUser"}],"columns":{"configKey":"EntityConfig.configKey","valueType":"EntityConfig.valueType","configScope":"EntityConfig.configScope","configValue":"EntityConfig.configValue"},"name":"fetchEntityConfig","description":"fetchEntityConfig","inputVarMap":{"configKeyArray":"configKeyArray"},"outputVarMap":{"data":"entityConfigData"},"nodeType":"QUERY"}}