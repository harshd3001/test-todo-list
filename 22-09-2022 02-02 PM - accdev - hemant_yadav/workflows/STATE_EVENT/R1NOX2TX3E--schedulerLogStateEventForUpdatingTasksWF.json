{"checkJobsStatuses":{"connectors":[{"condition":"contextVar.dispatchedJobs.length > 0","exitPortType":"NextStep","nodeId":"recallDispatchedTasks"},{"condition":"contextVar.scheduledJobs.length > 0","exitPortType":"NextStep","nodeId":"unassignScheduledJobs"},{"condition":"contextVar.allJobsToAutoSchedule.length > 0","exitPortType":"NextStep","nodeId":"moveJobsToAutoSchedulingStatus"},{"DefaultStep":true,"condition":"contextVar.allJobsToAutoSchedule.length === 0","exitPortType":"NextStep","nodeId":"end"}],"name":"checkJobsStatuses","description":"checkJobsStatuses","nodeType":"MULTIDECISION"},"getMoreTasks":{"models":["workOrderTask","taskType","ZStatus","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendTasks"}],"columns":{"taskTypeId":"workOrderTask.taskTypeId","statusId":"IF({$workOrderTask.id} IS NOT NULL,{@openTaskStatusId}, {@openTaskStatusId})","statusName":"IF({$workOrderTask.id} IS NOT NULL,{@openTaskStatusName}, {@openTaskStatusName})","siteId":"workOrderTask.siteId","siteName":"site.name","scheduledDate":"workOrderTask.scheduledDate","isAppointmentBasedTask":"workOrderTask.isAppointmentBasedTask","id":"workOrderTask.id","taskTypeName":"taskType.name","statusNameColor":"IF({$workOrderTask.id} IS NOT NULL,{@openTaskStatusNameColor}, {@openTaskStatusNameColor})"},"description":"getMoreTasks","inputVarMap":{"taskIdList":"taskIdList","customBatchSize":"batchSize","openTaskStatusName":"openTaskStatusName","openTaskStatusNameColor":"openTaskStatusNameColor","openTaskStatusId":"openTaskStatusId","taskBatchNumber":"batchNumber"},"nodeType":"QUERY","filter":"{$id} IN {@taskIdList} AND {$workOrderTask.statusId}='workOrderTaskAutoScheduling'","name":"getMoreTasks","links":{"taskType":"workOrderTask","site":"workOrderTask","ZStatus":"workOrderTask"},"outputVarMap":{"data":"appendWorkOrderTaskData","batchNumber":"taskBatchNumber"},"batchSize":"batchSize","getCount":true,"batchNumber":"batchNumber"},"appendTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTaskPresent"}],"contextChangePermitted":true,"name":"appendTasks","description":"appendTasks","processRule":"if (Array.isArray(contextVar.appendWorkOrderTaskData)) { contextVar.unassignedTaskData.push(...contextVar.appendWorkOrderTaskData); } contextVar.taskBatchNumber = contextVar.taskBatchNumber + 1;","nodeType":"PROCESS","jsEngine":"es6"},"areThereOpenJobs":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processTasksToMoveToOpenStatus"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"areThereOpenJobs","description":"areThereOpenJobs","processRule":"(Array.isArray(contextVar.unassignedTaskData) && contextVar.unassignedTaskData.length > 0)","nodeType":"DECISION"},"fetchJobsForBatchScheduler":{"connectors":[{"exitPortType":"NextStep","nodeId":"processFetchedJobs"}],"contextChangePermitted":true,"processId":"schedulerLogStateEventFetchJobsWF","ignoreSubContext":true,"name":"fetchJobsForBatchScheduler","description":"fetchJobsForBatchScheduler","inputVarMap":{"filter":"filter","taskIdList":"taskIdList","taskTypeIdList":"taskTypeIdList","endDate":"endDate","workflowCall":"workflowCall","regionIdList":"regionIdList","startDate":"startDate"},"outputVarMap":{"jobs":"jobs"},"nodeType":"WORKFLOW"},"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTaskPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"{ contextVar.noOfTaskBatches = 0; contextVar.noOfTaskBatches = Math.ceil(contextVar.taskCount / contextVar.customBatchSize); contextVar.taskBatchNumber = contextVar.taskBatchNumber + 1; }","id":"findNumberOfBatches","nodeType":"PROCESS"},"fetchWorkOrderTaskData":{"filter":"{$id} IN {@taskIdList} AND {$workOrderTask.statusId}='workOrderTaskAutoScheduling'","models":["workOrderTask","taskType","ZStatus","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"findNumberOfBatches"}],"columns":{"taskTypeId":"workOrderTask.taskTypeId","statusId":"IF({$workOrderTask.id} IS NOT NULL,{@openTaskStatusId}, {@openTaskStatusId})","statusName":"IF({$workOrderTask.id} IS NOT NULL,{@openTaskStatusName}, {@openTaskStatusName})","siteId":"workOrderTask.siteId","siteName":"site.name","scheduledDate":"workOrderTask.scheduledDate","isAppointmentBasedTask":"workOrderTask.isAppointmentBasedTask","id":"workOrderTask.id","taskTypeName":"taskType.name","statusNameColor":"IF({$workOrderTask.id} IS NOT NULL,{@openTaskStatusNameColor}, {@openTaskStatusNameColor})"},"name":"fetchWorkOrderTaskData","description":"fetchWorkOrderTaskData","links":{"taskType":"workOrderTask","site":"workOrderTask","ZStatus":"workOrderTask"},"inputVarMap":{"taskIdList":"taskIdList","customBatchSize":"batchSize","openTaskStatusName":"openTaskStatusName","openTaskStatusNameColor":"openTaskStatusNameColor","openTaskStatusId":"openTaskStatusId"},"outputVarMap":{"data":"unassignedTaskData","count":"taskCount","batchNumber":"taskBatchNumber"},"batchSize":"batchSize","nodeType":"QUERY","getCount":true},"areMoreTaskPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getMoreTasks"},{"exitPortType":"FalseStep","nodeId":"areThereOpenJobs"}],"name":"areMoreTaskPresent","description":"areMoreTaskPresent","processRule":"contextVar.noOfTaskBatches >= 2 && contextVar.noOfTaskBatches >= contextVar.taskBatchNumber","nodeType":"DECISION"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"name":"start","description":"Start","nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"processModelData"}],"processId":"featureLoggerWF","name":"logContextVar","description":"logContextVar","inputVarMap":{"featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"fetchOpenStatusColor":{"filter":"{$statusId}='workOrderTaskOpen'","models":["ZStatus"],"connectors":[{"exitPortType":"NextStep","nodeId":"setStatusIdAndStatusColor"}],"columns":{"statusId":"ZStatus.id","statusName":"ZStatus.name","statusNameColor":"ZStatus.colorCode"},"name":"fetchOpenStatusColor","description":"fetchOpenStatusColor","outputVarMap":{"data":"openStatusData"},"batchSize":1,"nodeType":"QUERY"},"upsertIntoSchedulerLog":{"eventId":"schedulerLogModelProcessEvent","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"name":"upsertIntoSchedulerLog","description":"upsertIntoSchedulerLog","inputVarMap":{"schedulerLog":"schedulerLog"},"outputVarMap":{},"nodeType":"PUBLISH"},"setStatusIdAndStatusColor":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchWorkOrderTaskData"}],"contextChangePermitted":true,"name":"setStatusIdAndStatusColor","description":"setStatusIdAndStatusColor","processRule":"{ contextVar.openTaskStatusId = contextVar.openStatusData[0].statusId; contextVar.openTaskStatusNameColor = contextVar.openStatusData[0].statusNameColor; contextVar.openTaskStatusName = contextVar.openStatusData[0].statusName; }","id":"setStatusIdAndStatusColor","nodeType":"PROCESS"},"processTasksToMoveToOpenStatus":{"connectors":[{"exitPortType":"NextStep","nodeId":"moveTasksToOpenStatus"}],"contextChangePermitted":true,"name":"processTasksToMoveToOpenStatus","description":"processFetchedJobs","processRule":"{ contextVar.moveToOpenJobs = []; if (typeof contextVar.unassignedTaskData !== 'undefined' && contextVar.unassignedTaskData.length > 0) { contextVar.unassignedTaskData.forEach(function (job) { contextVar.moveToOpenJobs.push({ 'statusId': 'workOrderTaskOpen', 'eventType': 'workOrderTaskOpen', 'id': job.id }); }); } contextVar.schedulerLog = [{ unassignedJobs: contextVar.unassignedTaskData, id: contextVar.id }]; }","nodeType":"PROCESS","jsEngine":"es6"},"workflowNodes":["start","logContextVar","processModelData","multiDecisionNode","fetchJobsForBatchScheduler","processFetchedJobs","checkJobsStatuses","recallDispatchedTasks","unassignScheduledJobs","moveJobsToAutoSchedulingStatus","fetchOpenStatusColor","setStatusIdAndStatusColor","fetchWorkOrderTaskData","findNumberOfBatches","areMoreTaskPresent","getMoreTasks","appendTasks","areThereOpenJobs","processTasksToMoveToOpenStatus","moveTasksToOpenStatus","upsertIntoSchedulerLog","end"],"unassignScheduledJobs":{"connectors":[{"exitPortType":"NextStep","nodeId":"moveJobsToAutoSchedulingStatus"}],"processId":"workOrderTaskModelWF","ignoreSubContext":true,"name":"unassignScheduledJobs","description":"unassignScheduledJobs","inputVarMap":{"scheduledJobs":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"},"workflowContext":{"customBatchSize":1000,"dispatchedJobs":[],"featureName":"batchScheduler","workflowCall":"firstSchedulerLogStateEvent","scheduledJobs":[],"extraMsg":"SCHEDULER LOG STATE EVENT 1: schedulerLogStateEventForUpdatingTasksWF call","allJobsToAutoSchedule":[]},"recallDispatchedTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"unassignScheduledJobs"}],"processId":"workOrderTaskModelWF","ignoreSubContext":true,"name":"recallDispatchedTasks","description":"recallDispatchedTasks","inputVarMap":{"dispatchedJobs":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"},"multiDecisionNode":{"connectors":[{"condition":"contextVar.status === 'schedulerLogInProgress'","exitPortType":"NextStep","nodeId":"end"},{"condition":"contextVar.status !== 'schedulerLogQueued'","exitPortType":"NextStep","nodeId":"fetchOpenStatusColor"},{"condition":"typeof contextVar.jobs !== 'undefined' && contextVar.jobs.length > 0","exitPortType":"NextStep","nodeId":"processFetchedJobs"},{"DefaultStep":true,"condition":"typeof contextVar.jobs === 'undefined' || contextVar.jobs.length === 0","exitPortType":"NextStep","nodeId":"fetchJobsForBatchScheduler"}],"name":"multiDecisionNode","description":"multiDecisionNode","nodeType":"MULTIDECISION"},"processFetchedJobs":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkJobsStatuses"}],"contextChangePermitted":true,"name":"processFetchedJobs","description":"processFetchedJobs","processRule":"{ if (typeof contextVar.jobs !== 'undefined' && contextVar.jobs.length > 0) { contextVar.jobs.forEach(function (job) { if (job.statusId === 'workOrderTaskDispatched' || job.statusId === 'workOrderTaskScheduled') { if (job.statusId === 'workOrderTaskDispatched') { contextVar.dispatchedJobs.push({ 'statusId': 'workOrderTaskScheduled', 'eventType': 'workOrderTaskRecalled', 'id': job.id }) } contextVar.scheduledJobs.push({ 'statusId': 'workOrderTaskOpen', 'eventType': 'workOrderTaskUnassigned', 'id': job.id, 'assignedToUserId': '' }); } contextVar.allJobsToAutoSchedule.push({ 'statusId': 'workOrderTaskAutoScheduling', 'eventType': 'workOrderTaskAutoScheduling', 'assignedToUserId': '', 'id': job.id }); }); } }","nodeType":"PROCESS","jsEngine":"es6"},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"processModelData":{"connectors":[{"exitPortType":"NextStep","nodeId":"multiDecisionNode"}],"contextChangePermitted":true,"name":"processModelData","description":"processModelData","processRule":"{ for (const key in contextVar.data) { contextVar[key] = contextVar.data[key]; } for (const key in contextVar.context) { contextVar[key] = contextVar.context[key]; } contextVar.filter = '{$id} IN {@loopArray}'; }","nodeType":"PROCESS","jsEngine":"es6"},"moveJobsToAutoSchedulingStatus":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"workOrderTaskModelWF","ignoreSubContext":true,"name":"moveJobsToAutoSchedulingStatus","description":"moveJobsToAutoSchedulingStatus","inputVarMap":{"allJobsToAutoSchedule":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"},"moveTasksToOpenStatus":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertIntoSchedulerLog"}],"processId":"workOrderTaskModelWF","ignoreSubContext":true,"name":"moveTasksToOpenStatus","description":"moveTasksToOpenStatus","inputVarMap":{"moveToOpenJobs":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"}}