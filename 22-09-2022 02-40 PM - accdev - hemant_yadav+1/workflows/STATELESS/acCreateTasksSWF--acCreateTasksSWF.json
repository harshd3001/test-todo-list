{"callWorkOrderTaskWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkAssignmentType"}],"processId":"QIFGIU7FDJ","name":"callWorkOrderTaskWF","description":"Provide some description for your workflow node","inputVarMap":{"taskActionAW":"subActionAW","taskAppointmentWindow":"workOrderTaskAppointmentWindow","analystWOTask":"workOrderTask","taskSubAction":"subAction","workOrderTaskAction":"workOrderTaskAction"},"id":"callWorkOrderTaskWF","outputVarMap":{"data":"analystTaskDet"},"nodeType":"WORKFLOW"},"callWorkOrderTaskWFForAppraiserTask":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"QIFGIU7FDJ","name":"callWorkOrderTaskWFForAppraiserTask","description":"Provide some description for your workflow node","inputVarMap":{"appraiserWOTask":"workOrderTask","taskSubAction":"subAction","workOrderTaskAction":"workOrderTaskAction"},"id":"callWorkOrderTaskWFForAppraiserTask","outputVarMap":{"data":"appraiserTaskDet"},"nodeType":"WORKFLOW"},"processAnalystTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"callWorkOrderTaskWF"}],"contextChangePermitted":true,"name":"processAnalystTaskData","description":"Use this for processing data in workflow","processRule":"{ contextVar.taskServices = contextVar.analystTaskDetails[0].taskServices; contextVar.taskTypeId = contextVar.analystTaskDetails[0].taskTypeId; contextVar.analystWOTask = { 'statusTargetModel': 'workOrderTask', 'acIsImported': true, 'acIsPreAssigned': 'No', 'dueDate': contextVar.dealineDate, 'estimatedDuration': contextVar.analystTaskDetails[0].duration, 'services': contextVar.taskServices, 'eventType': 'workOrderTaskOpen', 'taskTypeId': contextVar.taskTypeId, 'assets': [], 'statusId': 'workOrderTaskOpen', 'recver': 0, 'enableServices': true, 'isLongDurationTask': false, 'siteId': contextVar.siteId, 'workOrderId': contextVar.workOrderId, 'isAppointmentBasedTask': true, 'acProcessStatus': contextVar.recData.processStatus }; contextVar.taskSubAction = 'upsertWorkOrderTask'; contextVar.workOrderTaskAction = 'add'; contextVar.taskActionAW = 'updateAW'; } ","id":"processAnalystTaskData","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"logContextVar"}],"nodeSource":"./static/media/start.018acd1a.svg","name":"start","description":"Start","id":"start","position":{"x":-464,"y":-456},"nodeType":"START"},"logContextVar":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfAppointmentDateIsPresent"}],"name":"logContextVar","description":"logContextVar","inputVarMap":{"featureLoggerWF":"processId","featureName":"featureName","extraMsg":"extraMsg"},"id":"logContextVar","outputVarMap":{},"nodeType":"WORKFLOW"},"processAppointmentDate":{"contextChangePermitted":true,"connectors":[{"exitPortType":"NextStep","nodeId":"fetchAppointmentWindowDetails"}],"name":"processAppointmentDate","description":"Use this for processing data in workflow","processRule":"{contextVar.aptDate=new Date(contextVar.recData.appointmentDate).toLocaleDateString();contextVar.aptTime=new Date(contextVar.recData.appointmentDate).toLocaleTimeString();contextVar.awFilter = '{$startTime} <= {@aptTime} AND {$endTime} >= {@aptTime}';}","id":"processAppointmentDate","nodeType":"PROCESS"},"workflowNodes":["start","end","fetchAnalystDataForTaskType","processDataForTasks","processAnalystTaskData","callWorkOrderTaskWF","checkAssignmentType","fetchAppraiserTaskTypeData","processAppraiserTaskData","callWorkOrderTaskWFForAppraiserTask","checkIfAppointmentDateIsPresent","processAppointmentDate","fetchAppointmentWindowDetails","logContextVar"],"checkIfAppointmentDateIsPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processAppointmentDate"},{"exitPortType":"FalseStep","nodeId":"processDataForTasks"}],"name":"checkIfAppointmentDateIsPresent","description":"Use this for decision in workflow","processRule":"(contextVar.recData.appointmentDate!=''&& typeof contextVar.recData.appointmentDate!='undefined')","id":"checkIfAppointmentDateIsPresent","nodeType":"DECISION"},"workflowContext":{"featureLoggerWF":"featureLoggerWF","configScopeArray":["customerPortal"],"featureName":"customerPortal","extraMsg":"acCreateTasksSWF","siteDataProcessId":"fetchSiteCustomerTaskTypeDetails","taskDataProcessId":"FQJXQ58NSK"},"checkAssignmentType":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchAppraiserTaskTypeData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"checkAssignmentType","description":"Use this for decision in workflow","processRule":"(contextVar.assignmentTypeToBeHandled=='NTS')","id":"checkAssignmentType","nodeType":"DECISION"},"processDataForTasks":{"contextChangePermitted":true,"connectors":[{"exitPortType":"NextStep","nodeId":"fetchAnalystDataForTaskType"}],"name":"processDataForTasks","description":"Use this for processing data in workflow","processRule":"{ contextVar.analystTask = contextVar.taskTypesToBeCreated.analyst; contextVar.appraiserTask = contextVar.taskTypesToBeCreated.appraiser; function calculateDateInSiteTZ(date, offset) { var givenDate = new Date(date); var timeInUtc = givenDate.getTime() + (givenDate.getTimezoneOffset() * 60000); var dateInSiteTZ = new Date(timeInUtc - 1000 * offset).toISOString().replace(/T/, ' ').replace(/\\..+/, '').replace(/Z/, ''); return dateInSiteTZ; } contextVar.awStartTime = ''; contextVar.awEndTime = ''; if (typeof contextVar.recData.appointmentDate != 'undefined' && contextVar.recData.appointmentDate != '' && contextVar.awDetails.length > 0) { contextVar.awStartTime = calculateDateInSiteTZ(contextVar.aptDate + ' ' + contextVar.awDetails[0].startTime, contextVar.tzOffsetInSeconds); contextVar.awEndTime = calculateDateInSiteTZ(contextVar.aptDate + ' ' + contextVar.awDetails[0].endTime, contextVar.tzOffsetInSeconds); contextVar.taskAppointmentWindow = [{ 'appointmentWindowId': contextVar.awDetails[0].id, 'startDate': contextVar.awStartTime, 'endDate': contextVar.awEndTime }]; } } ","id":"processDataForTasks","nodeType":"PROCESS"},"fetchAppointmentWindowDetails":{"models":["appointmentWindow"],"connectors":[{"exitPortType":"NextStep","nodeId":"processDataForTasks"}],"columns":{"startTime":"appointmentWindow.startTime","id":"appointmentWindow.id","endTime":"appointmentWindow.endTime"},"description":"Provide some description for your query","distinct":false,"inputVarMap":{"aptTime":"aptTime","awFilter":"filter"},"groupBy":"","nodeType":"QUERY","filter":"","name":"fetchAppointmentWindowDetails","links":{},"id":"fetchAppointmentWindowDetails","outputVarMap":{"data":"awDetails"}},"end":{"nodeSource":"./static/media/end.5c5273bd.svg","name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"id":"end","position":{"x":84,"y":-162},"nodeType":"END"},"fetchAnalystDataForTaskType":{"models":["taskType"],"connectors":[{"exitPortType":"NextStep","nodeId":"processAnalystTaskData"}],"havingClause":"","columns":{"duration":"taskType.estimatedDuration","taskTypeId":"taskType.id","taskTypeName":"taskType.name","taskServices":"taskType.services"},"description":"Provide some description for your query","outerJoinOnModel":"","orderBy":"","inputVarMap":{"analystTask":"taskType"},"groupBy":"","nodeType":"QUERY","filter":"{$taskTypeName}={@taskType}","name":"fetchAnalystDataForTaskType","id":"fetchAnalystDataForTaskType","outputVarMap":{"data":"analystTaskDetails"},"distinctFilter":false},"fetchAppraiserTaskTypeData":{"models":["taskType"],"connectors":[{"exitPortType":"NextStep","nodeId":"processAppraiserTaskData"}],"havingClause":"","columns":{"duration":"taskType.estimatedDuration","taskTypeId":"taskType.id","taskTypeName":"taskType.name","taskServices":"taskType.services"},"description":"Provide some description for your query","outerJoinOnModel":"","orderBy":"","inputVarMap":{"appraiserTask":"taskType"},"groupBy":"","nodeType":"QUERY","filter":"{$taskTypeName}={@taskType}","name":"fetchAppraiserTaskTypeData","links":{},"id":"fetchAppraiserTaskTypeData","outputVarMap":{"data":"appraiserTaskDetails"},"subFilters":[],"selectColumns":[],"distinctFilter":false},"processAppraiserTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"callWorkOrderTaskWFForAppraiserTask"}],"contextChangePermitted":true,"name":"processAppraiserTaskData","description":"Use this for processing data in workflow","processRule":"{ contextVar.taskServices = contextVar.appraiserTaskDetails[0].taskServices; contextVar.taskTypeId = contextVar.appraiserTaskDetails[0].taskTypeId; contextVar.appraiserWOTask = { 'statusTargetModel': 'workOrderTask', 'acIsImported': true, 'acIsPreAssigned': 'No', 'dueDate': contextVar.dealineDate, 'services': contextVar.taskServices, 'estimatedDuration': contextVar.appraiserTaskDetails[0].duration, 'eventType': 'workOrderTaskOpen', 'taskTypeId': contextVar.taskTypeId, 'assets': [], 'statusId': 'workOrderTaskOpen', 'recver': 0, 'enableServices': true, 'isLongDurationTask': false, 'siteId': contextVar.siteId, 'workOrderId': contextVar.workOrderId, 'isAppointmentBasedTask': false, 'acProcessStatus': contextVar.recData.processStatus }; contextVar.taskSubAction = 'upsertWorkOrderTask'; contextVar.workOrderTaskAction = 'add'; contextVar.taskActionAW = 'updateAW'; } ","id":"processAppraiserTaskData","nodeType":"PROCESS"}}