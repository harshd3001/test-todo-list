{"pageContext":{},"actionOnLoad":["@actions.decisionAction","@actions.setInitialData","@actions.checkIfCustomerPortalInstalled","@actions.setData","@actions.decisionActionForCustomerPortal","@actions.decisionActionForAppointmentWindow","@actions.refreshScheduleBreakdownGrid"],"localPageContext":true,"jslib":{"isNotesDisableAndPublishHidden":"function(pageContext){if((pageContext.workOrderTaskAction == 'view') || (pageContext.workOrderTaskStatusId == 'workOrderTaskDispatched')){return true}}","isDraftDisabled":"function(pageContext) { if (pageContext.schedulingTypeDropdown === 'multiDay' && (typeof pageContext.scheduleStartDateAndTime !== 'undefined' && pageContext.scheduleStartDateAndTime !== '') && (typeof pageContext.bannerType === 'undefined' || pageContext.bannerType === '') && (typeof pageContext.scheduleEndDateAndTime !== 'undefined' && pageContext.scheduleEndDateAndTime !== '') && (typeof pageContext.workOrderTaskTaskTypeId !== 'undefined' && pageContext.workOrderTaskTaskTypeId !== '')) { return false; } else if (!((pageContext.schedulingTypeDropdown === 'exactTime' && (((typeof pageContext.scheduledDateAbsolute === 'undefined' || pageContext.scheduledDateAbsolute === '')) || (typeof pageContext.scheduledDateAbsolute !== 'undefined' && pageContext.scheduledDateAbsolute !== '' && typeof pageContext.scheduledTimeAbsolute !== 'undefined' && pageContext.scheduledTimeAbsolute !== ''))) || ((typeof pageContext.scheduledDateAWAbsolute == 'undefined' || pageContext.scheduledDateAWAbsolute == '') && (pageContext.schedulingTypeDropdown === 'appointmentWindow')) || (pageContext.schedulingTypeDropdown === 'multiDay' && (typeof pageContext.bannerType === 'undefined' || pageContext.bannerType === '') && ((typeof pageContext.scheduleStartDateAndTime !== 'undefined' && pageContext.scheduleStartDateAndTime !== '') && (typeof pageContext.scheduleEndDateAndTime !== 'undefined' && pageContext.scheduleEndDateAndTime !== ''))) || (typeof pageContext.scheduledDateAWAbsolute != 'undefined' && pageContext.scheduledDateAWAbsolute != '' && pageContext.schedulingTypeDropdown === 'appointmentWindow' && typeof pageContext.selectedRowIds !== 'undefined' && pageContext.selectedRowIds.length > 0))) { return true; } if (((typeof pageContext.workOrderTaskTaskTypeId === 'undefined' || pageContext.workOrderTaskTaskTypeId === '') && (typeof pageContext.workOrderTaskEstimatedDuration === 'undefined' || pageContext.workOrderTaskEstimatedDuration === '') && (typeof pageContext.siteId === 'undefined' || pageContext.siteId === '')) || (pageContext.initialWorkOrderTaskTaskTypeId == pageContext.workOrderTaskTaskTypeId && pageContext.initialWorkOrderTaskEstimatedDuration === pageContext.workOrderTaskEstimatedDuration && pageContext.initialSiteId === pageContext.siteId && pageContext.initialcontactPerson == pageContext.contactPerson && pageContext.initialcontactEmail == pageContext.contactEmail && pageContext.initialcontactPhone == pageContext.contactPhone && pageContext.initialWorkOrderTaskNotes === pageContext.workOrderTaskNotes && pageContext.initialSelectedCatalog === pageContext.selectedCatalog && !(pageContext.initialSchedulingTypeDropdown === 'appointmentWindow' && pageContext.schedulingTypeDropdown == 'exactTime' && pageContext.initialWorkOrderTaskScheduledDate === pageContext.workOrderTaskScheduledDate) && ((pageContext.schedulingTypeDropdown === 'exactTime' && pageContext.initialSchedulingTypeDropdown === 'exactTime' && pageContext.initialWorkOrderTaskScheduledDate === pageContext.workOrderTaskScheduledDate) || (typeof pageContext.scheduledDateAWAbsolute != 'undefined' && pageContext.scheduledDateAWAbsolute != '' && pageContext.schedulingTypeDropdown === 'appointmentWindow' && typeof pageContext.selectedRowIds !== 'undefined' && pageContext.selectedRowIds.length > 0 && pageContext.appointmentWindowId === pageContext.selectedRowIds[0].id && pageContext.initialScheduledDateAWAbsolute === pageContext.scheduledDateAWAbsolute)))) { if (typeof pageContext.initialWorkOrderTaskServices === 'undefined' && typeof pageContext.workOrderTaskServices === 'undefined') { return true; } else if (_(pageContext.initialWorkOrderTaskServices).xorWith(pageContext.workOrderTaskServices, _.isEqual).isEmpty()) { return true; } else { return false; } } else { return false; } }","isAssetsTabHidden":"function (pageContext) { return (pageContext.taskTypeWebTask || (pageContext.workOrderTaskAction === 'add' ) || (typeof pageContext.siteId === 'undefined' || pageContext.siteId === '') );}","isDurationHidden":"function(pageContext){if(typeof pageContext.schedulingTypeDropdown !== 'undefined' && pageContext.schedulingTypeDropdown == 'multiDay'){return true}else{return false}}","isCancelTaskHidden":"function (pageContext) { return (pageContext.workOrderTaskStatusId == 'workOrderTaskCancelled' || pageContext.workOrderTaskStatusId == 'workOrderTaskDraft' || pageContext.workOrderTaskStatusId == 'workOrderTaskCompleted' || pageContext.workOrderTaskStatusId == 'workOrderTaskSiteChangeRequest' || pageContext.workOrderTaskStatusId == 'workOrderTaskRejected' || pageContext.workOrderTaskAction == 'add' || pageContext.workOrderTaskStatusId == 'workOrderTaskAutoScheduling') }","isDeleteTaskHidden":"function(pageContext){return !(pageContext.workOrderTaskStatusId == 'workOrderTaskCancelled' || pageContext.workOrderTaskStatusId == 'workOrderTaskCompleted')}","isStatusDispatched":"function(pageContext){return pageContext.workOrderTaskStatusId === 'workOrderTaskDispatched' || pageContext.siteId === '' || typeof pageContext.selectedCustomerSite==='undefined' || pageContext.selectedCustomerSite==='' || pageContext.selectedCustomerSite[0]=== null}","minScheduledDateAbsolute":"function (pageContext) { var addMinutes = function (date) { return (new Date(date.getTime() - (pageContext.timezoneOffset * 60000))).toISOString().replace('T', ' ').replace('Z', ''); }; return addMinutes(new Date()).split(' ')[0]; }","isAppointmentWindowNotSelected":"function(pageContext){if (pageContext.schedulingTypeDropdown == 'appointmentWindow' && (pageContext.workOrderTaskStatusId == 'workOrderTaskOpen' || pageContext.workOrderTaskStatusId == 'workOrderTaskDraft')) { return false; } else { return true; }}","isEnableServiceSelectionHidden":"function (pageContext) { return (typeof pageContext.workOrderTaskTaskTypeId === 'undefined' || pageContext.workOrderTaskTaskTypeId === '' || pageContext.taskTypeEnableService === false || pageContext.workOrderTaskAction == 'view') }","hideAlert":"function(pageContext) {if(pageContext.schedulingTypeDropdown !=='multiDay'){ return false;} return true;}","hideCloseButton":"function(pageContext) {if(pageContext.action){return false;}else{return true;}}","isDuration1Hidden":"function(pageContext){if(typeof pageContext.schedulingTypeDropdown !== 'undefined' && pageContext.schedulingTypeDropdown !== 'appointmentWindow'){return true}else{return false}}","showBanner":"function (pageContext) { if(pageContext.banner !== 'show'){return false;} else {return true;}}","showErrMsgForEstDuration":"function (pageContext) { if(typeof pageContext.workOrderTaskEstimatedDuration !== 'undefined' && pageContext.workOrderTaskEstimatedDuration !== ''){ if (pageContext.workOrderTaskEstimatedDuration <= 0 || pageContext.workOrderTaskEstimatedDuration > 24) { pageContext.errTxt = 'Estimated task duration must be between .25 and 24 hours'; return true; } else if (pageContext.workOrderTaskEstimatedDuration % 0.25 > 0) { pageContext.errTxt = 'This field only accepts values ending in .25, .50, .75 or .00'; return true; } else { return false; } } }","minScheduledTimeAbsolute":"function (pageContext) { var addMinutes = function (date) { return (new Date(date.getTime() - (pageContext.timezoneOffset * 60000))).toISOString().replace('T', ' ').replace('Z', ''); }; var currentDateInAbsolute = addMinutes(new Date()); if (pageContext.scheduledDateAbsolute === currentDateInAbsolute.split(' ')[0]) return currentDateInAbsolute.split(' ')[1]; else return ''; }","dynamicHeaderText":"function(pageContext){ if(pageContext.workOrderTaskAction === 'add'){return '@lang.[\"ant1\",\"Add New Task\"]'}else if(pageContext.workOrderTaskAction === 'edit'){return '@lang.[\"et1\",\"Edit Task\"]'} else if (pageContext.workOrderTaskAction==='view'){return '@lang.[\"vt\",\"View Task\"]'}}","getLocationCoordinates":"function (pageContext) { if (typeof pageContext.siteLatitude != 'undefined' &&  pageContext.siteLatitude != '' && typeof pageContext.siteLongitude != 'undefined' && pageContext.siteLongitude != '') { pageContext.coordinates = [pageContext.siteLatitude, pageContext.siteLongitude]; return pageContext.coordinates; } else { pageContext.siteAddress = '-'; return pageContext.coordinates = [0, 0]; } }","showErrorMessageForEstSchDuration":"function (pageContext) { return (typeof pageContext.estimatedScheduledDuration === 'undefined' || pageContext.estimatedScheduledDuration === '' || typeof pageContext.workOrderTaskEstimatedDuration === 'undefined' || pageContext.workOrderTaskEstimatedDuration === '' || Number(pageContext.estimatedScheduledDuration) === Number(pageContext.workOrderTaskEstimatedDuration)) }","isReadOnlyAppointmentWindowHidden":"function(pageContext){return !(pageContext.workOrderTaskIsAppointmentBasedTask && (pageContext.workOrderTaskAction === 'view' || pageContext.workOrderTaskStatusId == 'workOrderTaskScheduled'))}","isBackHidden":"function(pageContext) {if (pageContext.action == 'dispatch') {return true}}","isWorkOrderTaskActionAdd":"function(pageContext){return pageContext.workOrderTaskAction === 'add';}","isExactTime":"function(pageContext) { if (typeof pageContext.schedulingTypeDropdown != 'undefined' && pageContext.schedulingTypeDropdown != '' && pageContext.schedulingTypeDropdown == 'exactTime') { return true; } else { return false; } }","isWorkOrderTaskActionNotAdd":"function(pageContext){return pageContext.workOrderTaskAction !== 'add';}","multipleBreakdown":"function (pageContext) { if ((typeof pageContext.taskScheduleMultipleBreakdown != 'undefined' && pageContext.taskScheduleMultipleBreakdown != '' && pageContext.taskScheduleMultipleBreakdown.length > 1) || (pageContext.workOrderTaskStatusId === 'workOrderTaskSiteChangeRequest')) { return true; } }","isWorkOrderTaskActionNotView":"function(pageContext){return pageContext.workOrderTaskAction !== 'view'}","singleBreakdown":"function (pageContext) { if (typeof pageContext.taskScheduleMultipleBreakdown === 'undefined' || pageContext.taskScheduleMultipleBreakdown == '' || pageContext.taskScheduleMultipleBreakdown == [] || pageContext.taskScheduleMultipleBreakdown.length < 2 || pageContext.workOrderTaskStatusId === 'workOrderTaskSiteChangeRequest') { return true; } }","isWarningServicesSaveHidden":"function(pageContext){if(pageContext.bannerType === 'warning'){return false;} else  {return true;}}","isAppointmentWindowSelected":"function(pageContext){return pageContext.schedulingTypeDropdown === 'appointmentWindow' || pageContext.schedulingTypeDropdown === 'multiDay';}","isDeleteDraftTaskHidden":"function(pageContext){return !(pageContext.workOrderTaskAction === 'edit' && pageContext.workOrderTaskStatusId === 'workOrderTaskDraft')}","isLogsTabHidden":"function(pageContext){return pageContext.workOrderTaskAction === 'add';}","isBannerHidden":"function (pageContext) { return !(pageContext.workOrderTaskStatusId == 'workOrderTaskAutoScheduling')}","isScheduledStartEndDateTimeRowHidden":"function(pageContext){if ((pageContext.workOrderTaskIsLongDurationTask && pageContext.workOrderTaskAction == 'edit' && typeof pageContext.schedulingTypeDropdown !== 'undefined' && pageContext.schedulingTypeDropdown == 'multiDay') || (typeof pageContext.schedulingTypeDropdown !== 'undefined' && pageContext.schedulingTypeDropdown == 'multiDay') || (pageContext.workOrderTaskIsAppointmentBasedTask && pageContext.workOrderTaskStatusId == 'workOrderTaskScheduled')) { return false } else { return true }}","doesAppointmentWindowHasMoreThanZeroSlots":"function(pageContext){ return !(pageContext.schedulingTypeDropdown === 'appointmentWindow' && typeof pageContext.selectedRowIds!=='undefined' && pageContext.selectedRowIds.length>0 && pageContext.appointmentWindowsData.filter(ele => ele.id === pageContext.selectedRowIds[0].id)[0].availableSlots<1);}","disableSiteDetails":"function(pageContext) { if ((pageContext.workOrderTaskStatusId == 'workOrderTaskScheduled') || (pageContext.workOrderTaskStatusId == 'workOrderTaskOpen') || (pageContext.workOrderTaskStatusId == 'workOrderTaskDraft')) { return false; } else { return true; } }","isWorkOrderTaskActionView":"function(pageContext){return pageContext.workOrderTaskAction == 'view' || pageContext.workOrderTaskStatusId=='workOrderTaskScheduled'}","isPublishDisabled":"function(pageContext) { if (typeof pageContext.scheduledDateAbsolute !== 'undefined' && pageContext.scheduledDateAbsolute !== '' && typeof pageContext.scheduledTimeAbsolute !== 'undefined' && pageContext.scheduledTimeAbsolute !== '' && (typeof pageContext.taskScheduleMultipleBreakdown === 'undefined' || pageContext.taskScheduleMultipleBreakdown == '' || pageContext.taskScheduleMultipleBreakdown == [] || pageContext.taskScheduleMultipleBreakdown.length < 2 || pageContext.workOrderTaskStatusId === 'workOrderTaskSiteChangeRequest')) { pageContext.workOrderTaskScheduledDate = new Date(pageContext.scheduledDateAbsolute + ' ' + pageContext.scheduledTimeAbsolute).toISOString().replace('T', ' ').replace('Z', ''); } if (pageContext.workOrderTaskAction == 'add' && pageContext.schedulingTypeDropdown === 'multiDay' && (typeof pageContext.scheduleStartDateAndTime !== 'undefined' && pageContext.scheduleStartDateAndTime !== '') && (typeof pageContext.scheduleEndDateAndTime !== 'undefined' && pageContext.scheduleEndDateAndTime !== '') && (typeof pageContext.workOrderTaskTaskTypeId !== 'undefined' && pageContext.workOrderTaskTaskTypeId !== '') && (typeof pageContext.bannerType === 'undefined' || pageContext.bannerType === '')) { return false; } else if ((pageContext.workOrderTaskAction == 'add') || (pageContext.workOrderTaskAction == 'edit' && pageContext.workOrderTaskStatusId == 'workOrderTaskDraft')) { if ((typeof pageContext.workOrderTaskTaskTypeId !== 'undefined' && pageContext.workOrderTaskTaskTypeId !== '') && ((pageContext.workOrderTaskAction == 'add' && pageContext.schedulingTypeDropdown !== 'multiDay') || (pageContext.workOrderTaskAction == 'edit')) && (typeof pageContext.siteId !== 'undefined' && pageContext.siteId !== '') && ((pageContext.schedulingTypeDropdown === 'exactTime' && (((typeof pageContext.scheduledDateAbsolute === 'undefined' || pageContext.scheduledDateAbsolute === '') && (typeof pageContext.scheduledTimeAbsolute === 'undefined' || pageContext.scheduledTimeAbsolute === '')) || (typeof pageContext.scheduledDateAbsolute !== 'undefined' && pageContext.scheduledDateAbsolute !== '' && typeof pageContext.scheduledTimeAbsolute !== 'undefined' && pageContext.scheduledTimeAbsolute !== ''))) || (typeof pageContext.scheduledDateAWAbsolute == 'undefined' || pageContext.scheduledDateAWAbsolute == '' && (pageContext.schedulingTypeDropdown === 'appointmentWindow')) || (typeof pageContext.scheduledDateAWAbsolute != 'undefined' && pageContext.scheduledDateAWAbsolute != '' && pageContext.schedulingTypeDropdown === 'appointmentWindow' && typeof pageContext.selectedRowIds !== 'undefined' && pageContext.selectedRowIds.length > 0)) && ((typeof pageContext.workOrderTaskEstimatedDuration !== 'undefined' && pageContext.workOrderTaskEstimatedDuration !== '' && pageContext.workOrderTaskEstimatedDuration > 0 && pageContext.workOrderTaskEstimatedDuration <= 24 && pageContext.workOrderTaskEstimatedDuration % 0.25 === 0 && (typeof pageContext.taskScheduleMultipleBreakdown === 'undefined' || pageContext.taskScheduleMultipleBreakdown === ' ' || pageContext.taskScheduleMultipleBreakdown.length <= 1) || (typeof pageContext.workOrderTaskEstimatedDuration !== 'undefined' && pageContext.workOrderTaskEstimatedDuration !== '' && pageContext.workOrderTaskEstimatedDuration > 0 && pageContext.workOrderTaskEstimatedDuration % 0.25 === 0 && (Array.isArray(pageContext.taskScheduleMultipleBreakdown) && pageContext.taskScheduleMultipleBreakdown.length > 1))))) { return !(((typeof pageContext.workOrderTaskEnableService !== 'undefined' && pageContext.workOrderTaskEnableService !== '' && pageContext.workOrderTaskEnableService.toString() === 'false' && Array.isArray(pageContext.workOrderTaskServices) && pageContext.workOrderTaskServices.length === 0) || (typeof pageContext.workOrderTaskEnableService !== 'undefined' && pageContext.workOrderTaskEnableService !== '' && pageContext.workOrderTaskEnableService.toString() === 'true' && Array.isArray(pageContext.workOrderTaskServices) && pageContext.workOrderTaskServices.length > 0))); } else if ((pageContext.schedulingTypeDropdown === 'multiDay') && (pageContext.workOrderTaskAction === 'edit') && (typeof pageContext.scheduleStartDateAndTime !== 'undefined' && pageContext.scheduleStartDateAndTime !== '') && (typeof pageContext.scheduleEndDateAndTime !== 'undefined' && pageContext.scheduleEndDateAndTime !== '') && (typeof pageContext.bannerType === 'undefined' || pageContext.bannerType === '') && ((pageContext.workOrderTaskScheduledDate !== pageContext.scheduleStartDateAndTime) || (pageContext.workOrderTaskDueDate !== pageContext.scheduleEndDateAndTime))) { return false; } else { return true; } } else { if ((pageContext.initialWorkOrderTaskTaskTypeId !== pageContext.workOrderTaskTaskTypeId || pageContext.initialSiteId !== pageContext.siteId || pageContext.initialcontactPerson !== pageContext.contactPerson || pageContext.initialcontactEmail !== pageContext.contactEmail || pageContext.initialcontactPhone !== pageContext.contactPhone || pageContext.initialWorkOrderTaskEnableService.toString() !== pageContext.workOrderTaskEnableService.toString() || pageContext.initialWorkOrderTaskNotes !== pageContext.workOrderTaskNotes || (!(_(pageContext.selectedCatalog).xorWith(pageContext.initialSelectedCatalog, _.isEqual).isEmpty())) || ((Array.isArray(pageContext.taskScheduleMultipleBreakdown) && pageContext.taskScheduleMultipleBreakdown.length > 1) && (!(_(pageContext.taskScheduleMultipleBreakdown).xorWith(pageContext.initialWorkOrderTaskScheduleBreakdown, _.isEqual).isEmpty()))) || Number(pageContext.initialWorkOrderTaskEstimatedDuration) !== Number(pageContext.workOrderTaskEstimatedDuration) || pageContext.initialWorkOrderTaskScheduledDate !== pageContext.workOrderTaskScheduledDate || (pageContext.initialSchedulingTypeDropdown === 'appointmentWindow' && pageContext.schedulingTypeDropdown == 'exactTime' && pageContext.schedulingTypeDropdown == 'multiDay' && pageContext.initialWorkOrderTaskScheduledDate === pageContext.workOrderTaskScheduledDate) || ((Array.isArray(pageContext.workOrderTaskServices) && pageContext.workOrderTaskServices.length > 0) && (!(_(pageContext.workOrderTaskServices).xorWith(pageContext.initialWorkOrderTaskServices, _.isEqual).isEmpty()))) || (pageContext.schedulingTypeDropdown === 'appointmentWindow' && typeof pageContext.selectedRowIds !== 'undefined' && pageContext.selectedRowIds.length > 0 && (pageContext.appointmentWindowId !== pageContext.selectedRowIds[0].id || pageContext.initialScheduledDateAWAbsolute !== pageContext.scheduledDateAWAbsolute))) && ((typeof pageContext.workOrderTaskTaskTypeId !== 'undefined' && pageContext.workOrderTaskTaskTypeId !== '') && (typeof pageContext.siteId !== 'undefined' && pageContext.siteId !== '') && ((typeof pageContext.workOrderTaskEstimatedDuration !== 'undefined' && pageContext.workOrderTaskEstimatedDuration !== '' && pageContext.workOrderTaskEstimatedDuration > 0 && pageContext.workOrderTaskEstimatedDuration <= 24 && pageContext.workOrderTaskEstimatedDuration % 0.25 === 0 && (typeof pageContext.taskScheduleMultipleBreakdown === 'undefined' || pageContext.taskScheduleMultipleBreakdown === ' ' || pageContext.taskScheduleMultipleBreakdown.length <= 1) || (typeof pageContext.workOrderTaskEstimatedDuration !== 'undefined' && pageContext.workOrderTaskEstimatedDuration !== '' && pageContext.workOrderTaskEstimatedDuration > 0 && pageContext.workOrderTaskEstimatedDuration % 0.25 === 0 && (Array.isArray(pageContext.taskScheduleMultipleBreakdown) && pageContext.taskScheduleMultipleBreakdown.length > 1)))) && ((pageContext.schedulingTypeDropdown === 'exactTime' && (((typeof pageContext.scheduledDateAbsolute === 'undefined' || pageContext.scheduledDateAbsolute === '') && (typeof pageContext.scheduledTimeAbsolute === 'undefined' || pageContext.scheduledTimeAbsolute === '')) || (typeof pageContext.scheduledDateAbsolute !== 'undefined' && pageContext.scheduledDateAbsolute !== '' && typeof pageContext.scheduledTimeAbsolute !== 'undefined' && pageContext.scheduledTimeAbsolute !== ''))) || (pageContext.schedulingTypeDropdown === 'appointmentWindow' && typeof pageContext.selectedRowIds !== 'undefined' && pageContext.selectedRowIds.length > 0)))) { return !(((typeof pageContext.workOrderTaskEnableService !== 'undefined' && pageContext.workOrderTaskEnableService !== '' && pageContext.workOrderTaskEnableService.toString() === 'false' && Array.isArray(pageContext.workOrderTaskServices) && pageContext.workOrderTaskServices.length === 0) || (typeof pageContext.workOrderTaskEnableService !== 'undefined' && pageContext.workOrderTaskEnableService !== '' && pageContext.workOrderTaskEnableService.toString() === 'true' && Array.isArray(pageContext.workOrderTaskServices) && pageContext.workOrderTaskServices.length > 0))); } else if ((pageContext.schedulingTypeDropdown === 'multiDay') && (pageContext.workOrderTaskAction === 'edit') && (typeof pageContext.scheduleStartDateAndTime !== 'undefined' && pageContext.scheduleStartDateAndTime !== '') && (typeof pageContext.scheduleEndDateAndTime !== 'undefined' && pageContext.scheduleEndDateAndTime !== '') && (typeof pageContext.bannerType === 'undefined' || pageContext.bannerType === '') && ((pageContext.workOrderTaskScheduledDate !== pageContext.scheduleStartDateAndTime) || (pageContext.workOrderTaskDueDate !== pageContext.scheduleEndDateAndTime) || (pageContext.workOrderTaskEnableService.toString() != pageContext.initialWorkOrderTaskEnableService.toString()) || (pageContext.workOrderTaskNotes !== pageContext.initialWorkOrderTaskNotes) || (pageContext.workOrderTaskTaskTypeId !== pageContext.initialWorkOrderTaskTaskTypeId))) { return false; } else { return true; } } }","isEnableServiceValueHidden":"function (pageContext) { return (pageContext.workOrderTaskAction === 'add' || pageContext.workOrderTaskAction === 'edit' || typeof pageContext.workOrderTaskTaskTypeId === 'undefined' || pageContext.workOrderTaskTaskTypeId === '' || pageContext.taskTypeEnableService === false) }","isResetScheduleHidden":"function(pageContext){return !(pageContext.workOrderTaskIsAppointmentBasedTask && pageContext.workOrderTaskStatusId == 'workOrderTaskScheduled');}","hideStatusDispatched":"function(pageContext){return pageContext.workOrderTaskStatusId === 'workOrderTaskDispatched' || typeof pageContext.siteId === 'undefined' || pageContext.siteId === '';}","isServicesTabHidden":"function (pageContext) { return (pageContext.taskTypeWebTask || (typeof pageContext.workOrderTaskTaskTypeId === 'undefined' || pageContext.workOrderTaskTaskTypeId === '') || !(typeof pageContext.workOrderTaskEnableService !== 'undefined' && pageContext.workOrderTaskEnableService.toString() === 'true')); }","isCustomerCommunicationTabHidden":"function(pageContext) {if (typeof pageContext.isCustomerPortalOrderDetailsModelPresent != 'undefined' && pageContext.isCustomerPortalOrderDetailsModelPresent == true && typeof pageContext.UID != 'undefined' && pageContext.UID != '' && pageContext.UID != '-') { return false; } else { return true; }}","bannerText":"function(pageContext) {if(pageContext.schedulingTypeDropdown === 'multiDay'){ return '@lang.['asatransfmdt','Auto Scheduling and Technician Recommendations are not supported for Multi day tasks']';} return '';}","hideAddAdditional":"function(pageContext){if ((typeof pageContext.taskScheduleMultipleBreakdown != 'undefined' &&  pageContext.taskScheduleMultipleBreakdown != '' &&  pageContext.taskScheduleMultipleBreakdown.length >1) || (pageContext.workOrderTaskAction == 'view') || (pageContext.workOrderTaskStatusId == 'workOrderTaskDispatched') || (pageContext.schedulingTypeDropdown === 'appointmentWindow') ){return true;}}","disableSchedule":"function(pageContext) { if (pageContext.workOrderTaskStatusId === 'workOrderTaskOpen' || pageContext.workOrderTaskStatusId === 'workOrderTaskReopened' || pageContext.workOrderTaskStatusId === 'workOrderTaskScheduled' || pageContext.workOrderTaskStatusId === 'workOrderTaskDraft') { return false; } else return true; }","workOrderTaskEnableService":"function (pageContext){ return (pageContext.workOrderTaskEnableService ? '@lang.[\"e7\",\"Enable\"]':'@lang.[\"d25\",\"Disabled\"]') }","isSiteChangeRequest":"function (pageContext) {return pageContext.workOrderTaskStatusId == 'workOrderTaskSiteChangeRequest'}"},"header":{"leftData":{"children":[{"hidden":"@jslib.isBackHidden","name":"back","icon":"@iconlib.NavigationArrowBackGrey","actionOnClick":["@actions.goBackToWorkOrderSP","@actions.clearData"],"type":"buttonIcon"}]},"children":[{"hidden":"@jslib.isWorkOrderTaskActionAdd","statusColor":"@pageContext.workOrderTaskStatusNameColor","id":"status","type":"status","value":"@pageContext.workOrderTaskStatusName"},{"buttonType":"secondary","hidden":"@jslib.isCancelTaskHidden","actionOnClick":["@actions.cancelTaskModal"],"id":"cancelTask","type":"button","title":"@lang.['ct4','Cancel Task']"},{"isRequired":true,"data":[{"buttonType":"secondary","actionOnClick":["@actions.setSubActionAndEventType","@actions.setSingleDayTaskScheduleBreakdown","@actions.setDueDate","@actions.setAWOrScheduledDateData","@actions.fireProcessEvent","@actions.goBackToWorkOrderSP","@actions.clearData"],"disabled":"@jslib.isDraftDisabled","id":"saveAsDraft1","type":"button","title":"@lang.['sad','Save as Draft']"},{"buttonType":"secondary","actionOnClick":["@actions.deleteTaskModal"],"id":"delete","type":"button","title":"@lang.['delete','Delete']"}],"hidden":"@jslib.isDeleteDraftTaskHidden","type":"actionDropdown","title":"@lang.['o4','Options']"},{"activeIcon":"@iconlib.ActionsBinPurple","hidden":"@jslib.isDeleteTaskHidden","icon":"@iconlib.ActionsBinGrey","actionOnClick":["@actions.deleteTaskModal"],"id":"deleteTask","type":"buttonIcon","title":"@lang.['dt1','Delete Task']"},{"buttonType":"secondary","hidden":"@jslib.isWorkOrderTaskActionNotAdd","actionOnClick":["@actions.setSubActionAndEventType","@actions.setAWOrScheduledDateData","@actions.fireProcessEvent","@actions.goBackToWorkOrderSP","@actions.refreshGrid"],"disabled":"@jslib.isDraftDisabled","id":"saveAsDraft2","type":"button","title":"@lang.['sad','Save as Draft']"},{"buttonType":"primary","hidden":"@jslib.isNotesDisableAndPublishHidden","actionOnClick":["@actions.setSubActionAndEventType","@actions.setWorkOrderTaskStatusIdForPublish","@actions.setSingleDayTaskScheduleBreakdown","@actions.setDueDate","@actions.setAWOrScheduledDateData","@actions.fireProcessEvent","@actions.updateSiteContactDetails","@actions.checkAppointmentWindow","@actions.goBackToWorkOrderSP","@actions.clearData","@actions.setBannerType"],"disabled":"@jslib.isPublishDisabled","id":"submit","type":"button","title":"@lang.['p3','Publish']"},{"hidden":"@jslib.hideCloseButton","icon":"@iconlib.NavigationCloseGrey","actionOnClick":["@actions.clearPageContext","@actions.closePanel"],"id":"close","type":"buttonIcon"}],"title":"@jslib.dynamicHeaderText"},"body":{"children":[{"children":[{"children":[{"alertMessage":"@lang.['ttcbeaiiciass','This task cannot be edited as it is currently in Auto Scheduling status.']","alertType":"warning","rightIconVisible":false,"hidden":"@jslib.isBannerHidden","id":"alertMessage","type":"alert"},{"alertMessage":"@lang.['ttddnmtetd','Total task duration does not match the estimated task duration.']","rightIconVisible":false,"alertType":"danger","hidden":"@jslib.showErrorMessageForEstSchDuration","id":"alertMessage","type":"alert"},{"hidden":"@jslib.isWorkOrderTaskActionAdd","children":[{"readOnly":true,"id":"taskId","label":"@lang.['taskId','Task ID']","placeholder":"","type":"input","value":"@pageContext.workOrderTaskId"}],"label":"","id":"taskId","type":"section"},{"children":[{"actionOnChange":["@actions.setSelectedTaskTypeId","@actions.getTaskTypeData","@actions.setTaskTypeData","@actions.processWorkOrderTaskEstimatedDurationMinutes","@actions.refreshServicesDataGrid"],"isMultiSelect":false,"searchByOptions":{"dataSourceId":"query/read","sourceType":"query","dataToBeSent":{"filter":"{$taskTypeName} like {@filter} AND {$workOrderTypeId}={@idFilter} AND {$workOrderTypeTaskType.workOrderTypeId}= {@idFilter} AND {$taskType.webTask} = false AND {$taskType.statusId} = 'taskTypeActive'","models":["workOrderTypeTaskType","workOrderType","taskType"],"inputs":{"idFilter":"@pageContext.workOrderWorkOrderTypeId"},"columns":{"taskTypeId":"taskType.id","workOrderTypeId":"workOrderType.id","taskTypeName":"taskType.name"},"links":{"taskType":"workOrderTypeTaskType","workOrderType":"workOrderTypeTaskType"}}},"optLabelMap":"taskTypeName","optValueMap":"taskTypeId","hidden":"@jslib.isWorkOrderTaskActionView","id":"taskTypeList","label":"@lang.['taskType','Task Type']","type":"selectDropdown","value":"@pageContext.selectedTaskType"},{"hidden":"@jslib.isWorkOrderTaskActionNotView","readOnly":true,"id":"taskTypeName","label":"@lang.['taskType','Task Type']","type":"input","value":"@pageContext.taskTypeName"},{"actionOnChange":["@actions.setSelectedServices"],"hidden":"@jslib.isEnableServiceSelectionHidden","options":[{"label":"@lang.['e9','Enabled']","value":true},{"label":"@lang.['d25','Disabled']","value":false}],"id":"enableServices","optTitleKey":"label","optValueKey":"value","title":"@lang.['navS3','Services']","type":"select","value":"@pageContext.workOrderTaskEnableService"},{"hidden":"@jslib.isEnableServiceValueHidden","readOnly":true,"id":"services","label":"@lang.['navS3','Services']","type":"input","value":"@jslib.workOrderTaskEnableService"}],"label":"@lang.['ts5','Task Settings']","id":"taskSettings","type":"section"},{"children":[{"actionOnChange":["@actions.decisionActionForSiteData","@actions.setCurrentTimeData","@actions.changeTztime"],"isMultiSelect":false,"searchByOptions":{"dataSourceId":"query/read","sourceType":"query","dataToBeSent":{"filter":"{$siteName} like {@filter} AND {$site.customerId}={@workOrderCustomerId} AND {$site.statusId}!='siteDeactivated'","models":["site"],"columns":{"siteId":"site.id","siteName":"site.name"},"inputs":{"workOrderCustomerId":"@pageContext.workOrderCustomerId"}}},"optLabelMap":"siteName","optValueMap":"siteId","hidden":"@jslib.isWorkOrderTaskActionView","id":"customerList","label":"@lang.['cs','Customer Site']","type":"selectDropdown","value":"@pageContext.selectedCustomerSite"},{"hidden":"@jslib.isWorkOrderTaskActionNotView","readOnly":true,"id":"siteName","label":"@lang.['cs','Customer Site']","type":"input","value":"@pageContext.siteName"},{"hidden":true,"readOnly":false,"id":"siteName","title":"@lang.['DuDt','Due Date']","type":"datetime","value":"@pageContext.workOrderTaskDueDate"},{"readOnly":true,"id":"siteAddress","label":"@lang.['csa1','Customer Site Address']","placeholder":"@lang.['afscs','Autofilled from selected customer site']","type":"input","value":"@pageContext.siteAddress"},{"children":[{"children":[{"buttonType":"secondary","actionOnClick":["@actions.getLocationCoordinates","@actions.openMapOverlay"],"id":"showMap","type":"button","title":"@lang.['sm2','Show Map']"}],"flex":"1","type":"column"},{"children":[{"buttonType":"secondary","actionOnClick":["@actions.getTimeZone","@actions.getWeeklyScheduleData","@actions.enableDataGridAndSetWeeklyScheduleData","@actions.serviceWindowOverlay"],"id":"serviceWindow","type":"button","title":"@lang.['vsw','View Service Window']"}],"flex":"2","id":"","type":"column"},{"flex":"3","id":"","type":"column"}],"id":"showMap","type":"row"},{"children":[{"readOnly":false,"disabled":"@jslib.disableSiteDetails","id":"contactPerson","label":"Contact Person Name","placeholder":"Enter Contact Person Name","type":"input","value":"@pageContext.contactPerson"},{"readOnly":false,"disabled":"@jslib.disableSiteDetails","id":"contactEmail","label":"Contact Email","placeholder":"Enter Contact Email","type":"input","value":"@pageContext.contactEmail"},{"readOnly":false,"disabled":"@jslib.disableSiteDetails","id":"contactPhone","label":"Contact Phone","placeholder":"Enter Contact Phone","type":"input","value":"@pageContext.contactPhone"}],"label":"Property Contact Information","id":"siteContactInformation","type":"section"}],"label":"@lang.['si2','Site Information']","id":"siteInformation","type":"section"},{"hidden":false,"children":[{"alertType":"info","id":"sectionAlert","type":"sectionAlert","message":"@jslib.bannerText","sectionBannerAlert":"@jslib.hideAlert"},{"alertType":"warning","id":"errSectionAlert","type":"sectionAlert","message":"@pageContext.bannerText","sectionBannerAlert":"@jslib.showBanner"},{"minDate":"2000-01-01 12:00","readOnly":true,"id":"deadline","title":"@lang.['wod1','Work Order Deadline']","type":"datetime","value":"@pageContext.workOrderDeadline"},{"actionOnChange":["@actions.setInitialDataAfterDropdownChange","@actions.setSelectedTaskTypeId","@actions.getTaskTypeData","@actions.setTaskTypeData","@actions.processWorkOrderTaskEstimatedDurationMinutes","@actions.refreshServicesDataGrid"],"hidden":"@jslib.isWorkOrderTaskActionView","options":[{"name":"@lang.['et4','Exact Time']","id":"exactTime"},{"name":"@lang.['navAW','Appointment Window']","id":"appointmentWindow"},{"name":"@lang.['mdt','Multiday Task']","id":"multiDay"}],"disabled":"@jslib.isWorkOrderTaskActionView","id":"dropdown","optTitleKey":"name","optValueKey":"id","type":"dropdown","value":"@pageContext.schedulingTypeDropdown"},{"actionOnChange":["@actions.changeTztime"],"minDate":"@pageContext.currentDate","disabled":"@jslib.disableSchedule","id":"localTimeOfSite","label":"@lang.['sdt2','Scheduled Date & Time']","title":"@lang.['sdt2','Scheduled Date & Time']","type":"datetime","value":"@pageContext.workOrderTaskScheduledDateSP"},{"isRequired":true,"actionOnChange":["@actions.fetchAvailableAppointmentWindows","@actions.enableDataGridAndSetAppointmentWindowData","@actions.refreshDataGrid"],"minDate":"@pageContext.currentDate","hidden":"@jslib.isAppointmentWindowNotSelected","readOnly":"@jslib.isWorkOrderTaskActionView","id":"scheduledDateAWAbsolute","label":"@lang.['sd4','Scheduled Date']","title":"@lang.['sd4','Scheduled Date']","type":"absoluteDate","value":"@pageContext.scheduledDateAWAbsolute","placeHolder":"@lang.['sd6','Select Date']"},{"hidden":"@jslib.isAppointmentWindowNotSelected","children":[{"alertMessage":"@lang.['tsawdnhaaspsaaw','The selected appointment window does not have any available slots. Please select another appointment window.']","actionOnChange":"@actions.clearBannerType","onClose":"@actions.clearBannerType","alertType":"warning","hidden":"@jslib.doesAppointmentWindowHasMoreThanZeroSlots","id":"errTxt","type":"alert"},{"hidden":"@jslib.isAppointmentWindowNotSelected","label":"","id":"appointmentWindowsDataGrid","gridRefreshId":"appointmentWindowGrid","type":"dataGrid","jsonDef":{"pageContextConfig":{"enable":true,"isPaginationReqd":false,"tableData":{"source":"@pageContext.appointmentWindowsData"}},"isScrollAble":false,"tableWidth":"35rem","searchAllowed":false,"rowActions":{},"emptyScreen":{"image":"@iconlib.ActionsSearchEmpty","contentValue":"@lang.['ylieatm','YOUR LIST IS EMPTY AT THE MOMENT']","type":"noData"},"isSync":true,"tableHeader":[{"name":"@lang.['i4','Id']","options":{"hidden":true,"showLabel":false},"key":"id","primaryKey":true},{"name":"@lang.['st7','Start Time']","options":{"type":"absoluteTime","showLabel":true},"key":"startTime"},{"name":"@lang.['endTime','End Time']","options":{"type":"absoluteTime","showLabel":true},"key":"endTime"},{"name":"@lang.['as6','Available Slots']","options":{"hidden":true,"showLabel":false},"key":"availableSlots"}],"singleSelect":true,"rowsToSelect":{"filter":"{$id}={@initialAppointmentWindowId}","models":["appointmentWindow"],"columns":{"id":"appointmentWindow.id"},"inputs":{"initialAppointmentWindowId":"@pageContext.appointmentWindowId"}},"jslib":{},"header":{"subHeaderText":"@lang.['r','Records']","headerText":"@lang.['navAW1','Appointment Windows']","children":[]},"actions":[]}}],"label":"@lang.['navAW1','Appointment Windows']","id":"appointmentWindowsSection","type":"section","transparent":true},{"hidden":"@jslib.isAppointmentWindowSelected","children":[{"children":[{"actionOnChange":[],"disabled":"@jslib.isExactTime","readOnly":true,"id":"scheduledDateAbsolute","label":"Scheduled Date & Time (Site Local Time)","title":"Scheduled Date & Time (Site Local Time)","type":"input","value":"@pageContext.siteLocalTime","placeHolder":"@lang.['sdt1','Select date & time']"}],"flex":"3","type":"column"},{"children":[{"isRequired":true,"actionOnChange":["@actions.processWorkOrderTaskEstimatedDurationMinutes"],"hidden":"@jslib.isDurationHidden","validator":"@jslib.showErrMsgForEstDuration","readOnly":"@jslib.isWorkOrderTaskActionView","label":"@lang.['dh2','Duration (In Hours)']","type":"input","errorText":"@pageContext.errTxt","inputType":"number","id":"workOrderTaskEstimatedDuration","placeholder":"@lang.['etd2','Enter task duration']","componentBannerAlert":"@jslib.showBanner","componentBannerMessage":"@pageContext.bannerText","value":"@pageContext.workOrderTaskEstimatedDuration"}],"flex":"3","type":"column"}],"id":"scheduledDateTimeRow","type":"row"},{"hidden":"@jslib.isReadOnlyAppointmentWindowHidden","children":[{"children":[{"readOnly":true,"id":"appointmentWindowStart","label":"@lang.['aws','Appointment Window Start']","title":"@lang.['aws','Appointment Window Start']","type":"datetime","value":"@pageContext.appointmentWindowStartDate"}],"flex":"3","type":"column"},{"children":[{"readOnly":true,"id":"appointmentWindowEnd","label":"@lang.['awe','Appointment Window End']","title":"@lang.['awe','Appointment Window End']","type":"datetime","value":"@pageContext.appointmentWindowEndDate"}],"flex":"3","type":"column"}],"id":"appointmentWindowRow","type":"row"},{"children":[{"children":[{"isRequired":true,"minDate":"@pageContext.currentDate","actionOnChange":["@actions.processDate","@actions.decisionActionCheckLongDurationTask"],"hidden":"@jslib.isScheduledStartEndDateTimeRowHidden","readOnly":"@jslib.isWorkOrderTaskActionView","id":"scheduledStartDate","label":"@lang.['ssdt','Scheduled Start Date & Time']","title":"@lang.['ssdt','Scheduled Start Date & Time']","type":"datetime","value":"@pageContext.scheduleStartDateAndTime","placeHolder":"@lang.['select','Select']"}],"flex":"3","type":"column"},{"children":[{"isRequired":true,"actionOnChange":["@actions.processDate","@actions.decisionActionCheckLongDurationTask"],"minDate":"@pageContext.nextDay","hidden":"@jslib.isScheduledStartEndDateTimeRowHidden","readOnly":"@jslib.isWorkOrderTaskActionView","id":"scheduledTimeAbsolute","label":"@lang.['sedt','Scheduled End Date & Time']","title":"@lang.['sedt','Scheduled End Date & Time']","type":"datetime","value":"@pageContext.scheduleEndDateAndTime","placeHolder":"@lang.['select','Select']"}],"flex":"3","type":"column"}],"id":"scheduledStartEndDateTimeRow","type":"row"},{"isRequired":true,"errorText":"@pageContext.errTxt","actionOnChange":["@actions.processWorkOrderTaskEstimatedDurationMinutes"],"hidden":"@jslib.isDuration1Hidden","validator":"@jslib.showErrMsgForEstDuration","inputType":"number","readOnly":"@jslib.isWorkOrderTaskActionView","id":"workOrderTaskEstimatedDuration","label":"@lang.['dh2','Duration (In Hours)']","placeholder":"@lang.['etd2','Enter task duration']","type":"input","value":"@pageContext.workOrderTaskEstimatedDuration"},{"hidden":"@jslib.isResetScheduleHidden","children":[{"children":[{"buttonType":"primary","actionOnClick":["@actions.setView"],"id":"reset","type":"button","title":"@lang.['rts','Reset Schedule']"}],"flex":"3","type":"column"},{"children":[],"flex":"3","type":"column"},{"children":[],"flex":"3","type":"column"}],"id":"appointmentWindowRow","type":"row"}],"label":"@lang.['s39','Scheduling (Optional)']","id":"scheduling","type":"section"},{"hidden":true,"children":[{"id":"scheduleBreakdownGrid","type":"dataGrid","jsonDef":{"pageContextConfig":{"enable":true,"isPaginationReqd":false,"tableData":{"source":"@pageContext.taskScheduleMultipleBreakdown"}},"isScrollAble":false,"searchEmptyScreen":{"image":"@iconlib.ActionsSearchError","contentValue":"@lang.['sysrcue','SORRY! YOUR SEARCH RESULTS CAME UP EMPTY ']","type":"noData"},"rowActions":{"children":[{"activeIcon":"@iconlib.ActionsBinPurple","hidden":"@jslib.hideStatusDispatched","icon":"@iconlib.ActionsBinGrey","name":"@lang.['d1','Delete']","tooltip":"@lang.['d1','Delete']","actionOnClick":["@actions.deleteTimeSlot","@actions.clearDataGridMultiple","@actions.refreshScheduleBreakdownGrid"],"id":"deleteTimeSlot","type":"buttonIcon","title":"@lang.['d1','Delete']"}]},"gridRefreshId":"scheduleBreakdownGrid","emptyScreen":{"image":"@iconlib.ActionsSearchEmpty","contentValue":"@lang.['ylieatm','YOUR LIST IS EMPTY AT THE MOMENT']","type":"noData"},"tableHeader":[{"name":"@lang.['sd4','Scheduled Date']","options":{"type":"date","showLabel":true},"key":"startDate"},{"name":"@lang.['st7','Start Time']","options":{"type":"time","showLabel":true},"key":"startDate"},{"name":"@lang.['et2','End Time']","options":{"type":"time","showLabel":true},"key":"endDate"},{"name":"@lang.['dh2','Duration (In Hours)']","options":{"showLabel":true},"key":"durationInHours"}],"actionOnLoad":[],"jslib":{"isWorkOrderTaskActionView":"function(pageContext){return pageContext.workOrderTaskAction == 'view' || pageContext.workOrderTaskStatusId=='workOrderTaskScheduled' || pageContext.schedulingTypeDropdown == 'appointmentWindow' }","hideStatusDispatched":"function(pageContext){return pageContext.workOrderTaskStatusId === 'workOrderTaskDispatched';}"},"header":{"subHeaderText":"@lang.['r','Records']","headerText":"@lang.['taskSchedule','Task Schedule']","children":[{"buttonType":"secondary","hidden":"@jslib.hideStatusDispatched","actionOnClick":["@actions.openClearAll"],"id":"clearAll","type":"button","title":"@lang.['ca2','Clear All']"},{"buttonType":"primary","hidden":"@jslib.hideStatusDispatched","actionOnClick":["@actions.openWorkOrderTaskNNSP","@actions.editSchedule","@actions.updateDataGrid"],"id":"edit","type":"button","title":"@lang.['es1','Edit Schedule']"}]},"isSelectable":false,"actions":[{"name":"deleteTimeSlot","type":"script","actionDef":"function (pageContext) { var addMinutes = function (date) { return (new Date(date.getTime() - 2 * (pageContext.timezoneOffset * 60000))).toISOString().replace('T', ' ').replace('Z', ''); }; _.remove(pageContext.taskScheduleMultipleBreakdown, function (breakdown) { if (breakdown.startDate === pageContext.startDate) { return true; } }); let totalDuration = 0; if (Array.isArray(pageContext.taskScheduleMultipleBreakdown)) { totalDuration = ((pageContext.taskScheduleMultipleBreakdown.reduce((total, element) => { return total + element.duration; }, 0)) / 60); } pageContext.workOrderTaskTotalDuration = (totalDuration % 1 === 0) ? totalDuration.toFixed(0) : totalDuration.toFixed(2); pageContext.workOrderTaskEstimatedDuration = pageContext.workOrderTaskTotalDuration; pageContext.workOrderTaskScheduledDate = pageContext.taskScheduleMultipleBreakdown[0].startDate; var dateInAbsolute = addMinutes(new Date(pageContext.workOrderTaskScheduledDate)); pageContext.scheduledDateAbsolute = dateInAbsolute.split(' ')[0]; pageContext.scheduledTimeAbsolute = dateInAbsolute.split(' ')[1]; }"},{"name":"clearDataGridMultiple","type":"script","actionDef":"function (pageContext) {if(typeof pageContext.taskScheduleMultipleBreakdown === 'undefined' || pageContext.taskScheduleMultipleBreakdown === '' || pageContext.taskScheduleMultipleBreakdown.length <= 1) { pageContext.taskScheduleMultipleBreakdown = []; } }"},{"name":"editSchedule","type":"script","actionDef":"function(pageContext){pageContext.editTaskScheduleBreakdown='edit';pageContext.workOrderTaskScheduledDate='';pageContext.workOrderTaskEstimatedDuration='';pageContext.workOrderTaskEstimatedDurationMinutes='';}"},{"name":"updateDataGrid","type":"openPanel","requiredPageContextKeys":"[\"taskScheduleMultipleBreakdown\",\"editTaskScheduleBreakdown\",\"workOrderTaskScheduledDate\",\"workOrderTaskEstimatedDurationMinutes\",\"workOrderTaskEstimatedDuration\",\"scheduledDateAbsolute\",\"scheduledTimeAbsolute\"]"},{"name":"refreshScheduleBreakdownGrid","gridId":["scheduleBreakdownGrid"],"type":"RefreshGridOnSidePanel"},{"name":"openWorkOrderTaskNNSP","type":"openPanel","pageId":"5JNK1AE1DY"},{"name":"closeModal","type":"closeModal"},{"subTitle":"@lang.['aysywtctsastswbr','Are you sure you want to clear the schedule? All scheduled time slots will be removed.']","name":"openClearAll","options":[{"buttonType":"secondary","name":"no","actionOnClick":["@actions.closeModal"],"type":"button","title":"@lang.['c2','Cancel']"},{"buttonType":"primary","name":"yes","actionOnClick":["@actions.closeModal","@actions.clearGridData","@actions.refreshScheduleBreakdownGrid"],"type":"button","title":"@lang.['y','Yes']"}],"type":"openModal","title":"@lang.['ca2','Clear All']"}],"searchKeys":[]}}],"localPageContext":true,"label":"@lang.['s39','Scheduling (Optional)']","id":"taskScheduleMultipleBreakdown","type":"section","transparent":true},{"hidden":"@jslib.isSiteChangeRequest","children":[{"disabled":"@jslib.isNotesDisableAndPublishHidden","id":"notes","type":"textarea","value":"@pageContext.workOrderTaskNotes","placeHolder":"@lang.['en3','Enter notes (Optional)']"}],"label":"@lang.['n2','Notes (Optional)']","id":"notes","type":"section"}],"label":"@lang.['ti4','Task Information']","type":"tab"},{"hidden":"@jslib.isServicesTabHidden","children":[{"alertMessage":"@lang.['prtcotsyc','Please remember to click on Publish to save your changes.']","actionOnChange":"@actions.clearBannerType","onClose":"@actions.clearBannerType","alertType":"warning","hidden":"@jslib.isWarningServicesSaveHidden","id":"errTxt","type":"alert"},{"children":[{"readOnly":true,"id":"taskType","label":"@lang.['taskType','Task Type']","type":"input","value":"@pageContext.taskTypeName"}],"label":"","id":"taskType","type":"section"},{"children":[{"name":"@lang.['s18','servicesGrid']","id":"servicesGrid","type":"dataGrid","jsonDef":{"isScrollAble":false,"searchAllowed":true,"searchEmptyScreen":{"image":"@iconlib.ActionsSearchError","contentValue":"@lang.['sysrcue','SORRY! YOUR SEARCH RESULTS CAME UP EMPTY ']","type":"noData"},"tableWidth":"50rem","emptyScreen":{"image":"@iconlib.ActionsSearchEmpty","contentValue":"@lang.['ylieatm','YOUR LIST IS EMPTY AT THE MOMENT']","type":"noData"},"tableHeader":[{"name":"@lang.['n','Name']","options":{"sortable":true,"showLabel":true},"key":"catalogName"},{"name":"@lang.['d','Description']","options":{"showLabel":true},"key":"catalogDescription"}],"dataToBeSent":{"filter":"{$catalogId} IN {@selectedServices}","models":["catalog"],"inputs":{"selectedServices":"@pageContext.selectedServices"},"columns":{"catalogName":"catalog.name","catalogRecver":"catalog.recver","catalogId":"catalog.id","catalogDescription":"catalog.description"},"orderBy":"catalogName ASC","outerJoinOnModel":"catalog","distinct":true,"outputVarMap":{}},"actionOnLoad":[],"dataSourceId":"query/read","jslib":{"isView":"function(pageContext){if((pageContext.workOrderTaskAction == 'view') || (pageContext.workOrderTaskStatusId == 'workOrderTaskDispatched')){return true}}"},"header":{"subHeaderText":"@lang.['r','Records']","headerText":"@lang.['navS3','Services']","children":[{"buttonType":"primary","hidden":"@jslib.isView","actionOnClick":["@actions.openServiceSidePanel"],"id":"edit","type":"button","title":"@lang.['e1','Edit']"}]},"isSelectable":false,"actions":[{"name":"openServiceSidePanel","type":"openPanel","pageId":"FSBZ60DRF6"}],"searchKeys":["catalogName"]}}],"label":"@lang.['navS3','Services']","id":"servicesSection","type":"section","transparent":true}],"label":"@lang.['navS3','Services']","type":"tab"},{"hidden":true,"children":[{"children":[{"id":"associatedAssetsToWorkOrderTaskId","type":"dataGrid","jsonDef":{"isScrollAble":false,"searchAllowed":true,"searchEmptyScreen":{"image":"@iconlib.ActionsSearchError","contentValue":"@lang.['sysrcue','SORRY! YOUR SEARCH RESULTS CAME UP EMPTY ']","type":"noData"},"tableWidth":"50rem","rowActions":{"children":[{"activeIcon":"@iconlib.ActionsBinPurple","hidden":"@jslib.isHiddenOnEdit","icon":"@iconlib.ActionsBinGrey","name":"@lang.['assetRemoval','Remove']","tooltip":"@lang.['assetRemoval','Remove']","actionOnClick":["@actions.openAssetModal"],"id":"removeAsset","type":"buttonIcon","title":"@lang.['assetRemoval','Remove']"}]},"gridRefreshId":"assetGridId","emptyScreen":{"image":"@iconlib.ActionsSearchEmpty","contentValue":"@lang.['ylieatm','YOUR LIST IS EMPTY AT THE MOMENT']","type":"noData"},"tableHeader":[{"name":"@lang.['ibi','Installed Base Id']","options":{"hidden":true,"showLabel":false},"key":"installedBaseId","primaryKey":true},{"name":"@lang.['m','Manufacturer']","options":{"flex":1,"sortOrder":"ASC","sortable":true,"showLabel":true},"key":"manufacturerName"},{"name":"@lang.['mn','Model Name']","options":{"flex":1,"sortable":true,"showLabel":true},"key":"catalogName"},{"name":"@lang.['mn1','Model Number']","options":{"flex":1,"sortable":true,"showLabel":true},"key":"catalogModelNumber"},{"name":"@lang.['sn','Serial Number']","options":{"flex":1,"sortable":true,"showLabel":true},"key":"installedBaseSerialNo"},{"name":"@lang.['lv','Last Visited']","options":{"flex":1,"sortable":true,"type":"dateTime","showLabel":true},"key":"installedBaseLastVisitedDate"}],"dataToBeSent":{"filter":"{$workOrderTask.id} = {@selectedWorkOrderTaskId}","models":["workOrderTaskInstalledBase","workOrderTask","catalog","manufacturer","installedBase"],"columns":{"catalogName":"catalog.name","installedBaseLastVisitedDate":"installedBase.lastVisitedDate","catalogId":"catalog.id","manufacturerName":"manufacturer.name","workOrderTaskInstalledBaseRecver":"workOrderTaskInstalledBase.recver","installedBaseSerialNo":"installedBase.serialNo","catalogModelNumber":"catalog.modelNumber","installedBaseId":"installedBase.id"},"inputs":{"selectedWorkOrderTaskId":"@pageContext.workOrderTaskId"},"links":{"installedBase":"workOrderTaskInstalledBase","catalog":"installedBase","workOrderTaskInstalledBase":"workOrderTask","manufacturer":"catalog"}},"dataSourceId":"query/read","jslib":{"isHiddenOnEdit":"function(pageContext){if(pageContext.workOrderTaskAction == 'view' ){return true}}"},"rowTextLength":40,"header":{"subHeaderText":"@lang.['r','Records']","headerText":"@lang.['assets','Assets']","children":[{"buttonType":"primary","hidden":"@jslib.isHiddenOnEdit","actionOnClick":["@actions.openworkOrderTaskAssetsNNSP"],"id":"addNewAsset","type":"button","title":"@lang.['addNew','Add New']"}]},"isSelectable":false,"dataSource":[],"actions":[{"name":"openworkOrderTaskAssetsNNSP","type":"openPanel","pageId":"workOrderTaskAssetsNNSP"},{"subTitle":"@lang.['aysywtrta','Are you sure you want to remove the asset?']","name":"openAssetModal","options":[{"buttonType":"secondary","name":"no","actionOnClick":"@actions.closeModal","type":"button","title":"@lang.['c2','Cancel']"},{"buttonType":"primary","name":"yes","actionOnClick":["@actions.setSubActionRemoveAsset","@actions.fireProcessEventToremoveAsset","@actions.closeModal","@actions.refreshAssetDataGrid"],"type":"button","title":"@lang.['assetRemoval','Remove']"}],"type":"openModal","title":"@lang.['ra1','Remove Asset']"},{"name":"refreshAssetDataGrid","gridId":["assetGridId"],"type":"RefreshGridOnSidePanel"}],"searchKeys":["manufacturerName","catalogName","catalogModelNumber","installedBaseSerialNo"],"multiSelect":false}}],"label":"@lang.['a14','Asset (Optional)']","id":"workOrderTaskAssetSection","type":"section","transparent":true}],"label":"@lang.['assets','Assets']","type":"tab"},{"hidden":"@jslib.isLogsTabHidden","children":[{"children":[{"id":"workOrderTaskLogs","type":"dataGrid","jsonDef":{"isScrollAble":false,"searchAllowed":true,"searchEmptyScreen":{"image":"@iconlib.ActionsSearchError","contentValue":"@lang.['sysrcue','SORRY! YOUR SEARCH RESULTS CAME UP EMPTY ']","type":"noData"},"tableWidth":"50rem","rowActions":{},"gridRefreshId":"logsGridId","emptyScreen":{"image":"@iconlib.ActionsSearchEmpty","contentValue":"@lang.['ylieatm','YOUR LIST IS EMPTY AT THE MOMENT']","type":"noData"},"tableHeader":[{"name":"@lang.['timeStamp','Time Stamp']","options":{"flex":1.5,"sortOrder":"DESC","sortable":true,"type":"datetime","showLabel":true},"key":"workOrderTaskLogLogDate"},{"name":"@lang.['e10','Event']","options":{"flex":1.5,"sortOrder":"DESC","sortable":true,"showLabel":true},"key":"listOptionAnswerAnswerOptionText"},{"name":"@lang.['mb1','Modified By']","options":{"flex":1.5,"sortOrder":"DESC","sortable":true,"showLabel":true},"key":"userName"},{"name":"@lang.['details','Details']","options":{"flex":2,"showLabel":true},"key":"workOrderTaskLogDetails"},{"name":"@lang.['i','id']","options":{"hidden":true,"showLabel":false},"key":"workOrderTaskLogId","primaryKey":true}],"dataToBeSent":{"filter":"{$workOrderTaskLog.workOrderTaskId} = {@selectedWorkOrderTaskId} AND {$listOptionAnswer.listOptionId}='workOrderTaskLogEvents'","models":["workOrderTaskLog","User","listOptionAnswer"],"columns":{"workOrderTaskLogLogDate":"workOrderTaskLog.logDate","workOrderTaskLogId":"workOrderTaskLog.id","workOrderTaskLogDetails":"workOrderTaskLog.details","listOptionAnswerAnswerOptionText":"listOptionAnswer.answerOptionText","userName":"User.name"},"inputs":{"selectedWorkOrderTaskId":"@pageContext.workOrderTaskId"},"orderBy":"workOrderTaskLogLogDate DESC","outerJoinOnModel":"workOrderTaskLog","links":{"listOptionAnswer":"workOrderTaskLog","workOrderTaskLog":"User"},"translate":true},"dataSourceId":"query/read","jslib":{},"rowTextLength":40,"header":{"subHeaderText":"@lang.['r','Records']","headerText":"@lang.['tl','Task Logs']","children":[]},"isSelectable":false,"dataSource":[],"actions":[],"searchKeys":["listOptionAnswerAnswerOptionText","userName"],"multiSelect":false}}],"label":"","id":"workOrderTaskLogSection","type":"section","transparent":true}],"label":"@lang.['navl','Logs']","type":"tab"},{"hidden":"@jslib.isCustomerCommunicationTabHidden","children":[{"children":[{"actionOnChange":["@actions.setDataForUpsertOrderDetails"],"id":"sendNotifications","label":"Customer notifications for this task","placeholder":"Send customer notifications for this task?","type":"switchComponent","value":"@pageContext.sendNotification"},{"id":"communicatiionLogs","type":"dataGrid","jsonDef":{"isScrollAble":false,"searchAllowed":true,"searchEmptyScreen":{"image":"@iconlib.ActionsSearchError","contentValue":"@lang.['sysrcue','SORRY! YOUR SEARCH RESULTS CAME UP EMPTY ']","type":"noData"},"tableWidth":"50rem","rowActions":{"children":[{"activeIcon":"@iconlib.ActionsBinPurple","hidden":"@jslib.isHiddenOnEdit","icon":"@iconlib.ActionsBinGrey","name":"@lang.['assetRemoval','Remove']","tooltip":"@lang.['assetRemoval','Remove']","actionOnClick":["@actions.openAssetModal"],"id":"removeAsset","type":"buttonIcon","title":"@lang.['assetRemoval','Remove']"}]},"gridRefreshId":"communicatiionLogsGridId","emptyScreen":{"image":"@iconlib.ActionsSearchEmpty","contentValue":"@lang.['ylieatm','YOUR LIST IS EMPTY AT THE MOMENT']","type":"noData"},"tableHeader":[{"name":"Time Stamp","options":{"flex":1,"sortOrder":"ASC","sortable":true,"type":"dateTime","showLabel":true},"key":"createdDate"},{"name":"Notification","options":{"flex":1,"sortable":false,"showLabel":true},"key":"notificationInfo"},{"name":"Delivery State","options":{"flex":1,"sortOrder":"ASC","sortable":true,"showLabel":true},"key":"status"},{"name":"Delivery Method","options":{"flex":1,"sortOrder":"ASC","sortable":true,"showLabel":true},"key":"deliveryMethod"}],"dataToBeSent":{"filter":"{$NotificationLog.taskId}  = {@workOrderTaskId} ","models":["NotificationLog"],"columns":{"notificationInfo":"IF({$NotificationLog.notificationInfo} IS NULL,'-',{$NotificationLog.notificationInfo})","createdDate":"NotificationLog.createdDate","deliveryMethod":"NotificationLog.deliveryMethod","status":"NotificationLog.status"},"inputs":{"workOrderTaskId":"@pageContext.workOrderTaskId"},"orderBy":"createdDate DESC"},"dataSourceId":"query/read","jslib":{},"rowTextLength":40,"header":{"subHeaderText":"@lang.['r','Records']","headerText":"Communication Logs","children":[]},"isSelectable":false,"dataSource":[],"actions":[],"searchKeys":["createdDate","status","deliveryMethod"],"multiSelect":false}}],"label":"","id":"customerCommunicationSection","type":"section","transparent":true}],"label":"Customer Communication","type":"tab"}],"label":"","type":"tab"}]},"actions":[{"name":"refreshDataGrid","type":"refreshDataGrid"},{"name":"refreshAWDataGrid","gridId":["appointmentWindowGrid"],"type":"RefreshGridOnSidePanel"},{"name":"clearPageContext","type":"clearPageContext"},{"name":"refreshScheduleBreakdownGrid","gridId":["scheduleBreakdownGrid"],"type":"RefreshGridOnSidePanel"},{"name":"refreshServicesDataGrid","gridId":["scheduleBreakdownGrid"],"type":"RefreshGridOnSidePanel"},{"name":"closePanel","type":"closePanel"},{"name":"clearBannerType","type":"script","actionDef":"function(pageContext){pageContext.bannerType ='hide';}"},{"name":"setSelectedServices","type":"script","actionDef":"function (pageContext) { if (typeof pageContext.workOrderTaskEnableService !== 'undefined' && pageContext.workOrderTaskEnableService.toString() === 'true') { pageContext.selectedServices = []; pageContext.workOrderTaskServices = Array.from(pageContext.taskTypeServices); pageContext.initialSelectedServices = Array.from(pageContext.taskTypeServices); if (Array.isArray(pageContext.workOrderTaskServices) && pageContext.workOrderTaskServices.length > 0) { pageContext.selectedServices = pageContext.workOrderTaskServices.map((element) => element.catalogId); } } else { pageContext.workOrderTaskServices = []; }}"},{"subTitle":"@lang.['aysywtctt','Are you sure you want to cancel this task?']","name":"cancelTaskModal","options":[{"buttonType":"secondary","name":"no","actionOnClick":"@actions.closeModal","type":"button","title":"@lang.['c2','Cancel']"},{"buttonType":"primary","name":"yes","actionOnClick":["@actions.closeModal","@actions.openCancelTaskNestedSidePanel"],"type":"button","title":"@lang.['yp','Yes, Proceed']"}],"type":"openModal","title":"@lang.['ct4','Cancel Task']"},{"subTitle":"@lang.['aysywtdtttcbu','Are you sure you want to delete this task? This cannot be undone.']","name":"deleteTaskModal","options":[{"buttonType":"secondary","name":"no","actionOnClick":"@actions.closeModal","type":"button","title":"@lang.['c2','Cancel']"},{"buttonType":"primary","name":"yes","actionOnClick":["@actions.setSubActionDeleteWorkOrderTask","@actions.fireProcessEvent","@actions.closeModal","@actions.clearPageContext","@actions.goBackToWorkOrderSP","@actions.setBannerTypeDelete"],"type":"button","title":"@lang.['d1','Delete']"}],"type":"openModal","title":"@lang.['dt1','Delete Task']"},{"name":"setSubActionDeleteWorkOrderTask","type":"script","actionDef":"function(pageContext){pageContext.subAction='deleteWorkOrderTask'; pageContext.eventType = 'workOrderTaskDeleted';}"},{"name":"openCancelTaskNestedSidePanel","type":"openPanel","pageId":"1RFSG2AF8J"},{"name":"openWorkOrderTaskNNSP","type":"openPanel","pageId":"5JNK1AE1DY"},{"endPoint":"event/start","name":"fetchAllQueries","outputVarMap":{"data":"@pageContext.queryData"},"type":"api","actionDef":{"data":[{"eventId":"6NDAAB9RY6","inputVar":{},"contextVar":{"workOrderTaskId":"@pageContext.workOrderTaskId"}}]}},{"name":"fetchCustomerSiteData","outputVarMap":{"data":"@pageContext.customerSitesData"},"type":"query","actionDef":{"filter":"{$siteCustomerId}={@customerId}","models":["site"],"columns":{"contactEmail":"site.contactEmail","siteName":"site.name","siteId":"site.id","contactPerson":"site.contactPerson","siteCustomerId":"site.customerId","contactPhone":"site.contactPhone"},"inputs":{"customerId":"@pageContext.workOrderCustomerId"},"batchSize":2}},{"name":"processingCustomerSitesData","type":"script","actionDef":"function(pageContext) { pageContext.selectedCustomerSite = { 'value': pageContext.customerSitesData[0].siteId, 'label': pageContext.customerSitesData[0].siteName }; pageContext.contactPerson = pageContext.customerSitesData[0].contactPerson;console.log(pageContext.contactPerson); pageContext.contactEmail = pageContext.customerSitesData[0].contactEmail; pageContext.contactPhone = pageContext.customerSitesData[0].contactPhone; pageContext.siteId = pageContext.selectedCustomerSite.value; }"},{"endPoint":"event/start","name":"fireProcessEvent","outputVarMap":{"data":"@pageContext.workFlowData"},"type":"api","actionDef":{"data":[{"eventId":"BM58GU7UNT","inputVar":{},"contextVar":{"workOrderTask":{"assignedToUserId":"@pageContext.workOrderTaskAssignedToUserId","notes":"@pageContext.workOrderTaskNotes","statusTargetModel":"@pageContext.workOrderTaskStatusTargetModel","dueDate":"@pageContext.workOrderTaskDueDate","scheduledDate":"@pageContext.workOrderTaskScheduledDate","services":"@pageContext.workOrderTaskServices","eventType":"@pageContext.eventType","estimatedDuration":"@pageContext.workOrderTaskEstimatedDurationMinutes","taskTypeId":"@pageContext.workOrderTaskTaskTypeId","assets":"@pageContext.selectedCatalog","statusId":"@pageContext.workOrderTaskStatusId","recver":"@pageContext.workOrderTaskRecver","enableServices":"@pageContext.workOrderTaskEnableService","isLongDurationTask":"@pageContext.isLongDurationTask","siteId":"@pageContext.siteId","id":"@pageContext.workOrderTaskId","workOrderId":"@pageContext.workOrderId","isAppointmentBasedTask":"@pageContext.isAppointmentBasedTask"},"taskScheduleBreakdown":"@pageContext.taskScheduleMultipleBreakdown","workOrderTaskAppointmentWindow":"@pageContext.workOrderTaskAppointmentWindow","subAction":"@pageContext.subAction","workOrderTaskAction":"@pageContext.workOrderTaskAction","operation":"@pageContext.operation","customerPortalOrderDetails":"@pageContext.customerPortalOrderDetails","subActionAW":"@pageContext.subActionAW"}}]}},{"name":"getCustomerSiteAddress","outputVarMap":{"data":"@pageContext.customerSiteData"},"type":"query","actionDef":{"filter":"{$siteId}={@filter} ","models":["site"],"columns":{"siteLatitude":"site.latitude","contactEmail":"site.contactEmail","contactPerson":"site.contactPerson","siteId":"site.id","siteAddress":"site.address","contactPhone":"site.contactPhone","siteTimeZone":"site.acTimeZone","siteLongitude":"site.longitude","siteTimezoneOffset":"site.timezoneOffset"},"inputs":{"filter":"@pageContext.siteId"}}},{"name":"clearGridData","type":"script","actionDef":"function (pageContext) { var addMinutes = function (date) { return (new Date(date.getTime() - 2 * (pageContext.timezoneOffset * 60000))).toISOString().replace('T', ' ').replace('Z', ''); }; pageContext.workOrderTaskScheduledDate = pageContext.taskScheduleMultipleBreakdown[0].startDate; var dateInAbsolute = addMinutes(new Date(pageContext.workOrderTaskScheduledDate)); pageContext.scheduledDateAbsolute = dateInAbsolute.split(' ')[0]; pageContext.scheduledTimeAbsolute = dateInAbsolute.split(' ')[1]; pageContext.workOrderTaskEstimatedDuration = pageContext.taskScheduleMultipleBreakdown[0].durationInHours; pageContext.taskScheduleMultipleBreakdown = ''; }"},{"name":"getTaskTypeData","outputVarMap":{"data":"@pageContext.taskTypeData"},"type":"query","actionDef":{"filter":"{$taskType.id} = {@taskTypeId}","models":["taskType"],"inputs":{"taskTypeId":"@pageContext.workOrderTaskTaskTypeId"},"columns":{"services":"taskType.services","estimatedDuration":"taskType.estimatedDuration","enableService":"taskType.enableServices"}}},{"name":"setTaskTypeData","type":"script","actionDef":"function (pageContext) { pageContext.workOrderTaskEnableService = pageContext.taskTypeData[0].enableService; pageContext.taskTypeEnableService = pageContext.taskTypeData[0].enableService; pageContext.workOrderTaskServices = Array.from(pageContext.taskTypeData[0].services); pageContext.taskTypeServices = Array.from(pageContext.taskTypeData[0].services); if (Array.isArray(pageContext.workOrderTaskServices) && pageContext.workOrderTaskServices.length > 0) { pageContext.selectedServices = pageContext.workOrderTaskServices.map((element) => element.catalogId); } let duration = (Number(pageContext.taskTypeData[0].estimatedDuration) / 60); pageContext.workOrderTaskEstimatedDuration = (duration % 1 == 0) ? duration.toFixed(0) : duration.toFixed(2); } "},{"name":"setSingleDayTaskScheduleBreakdown","type":"script","actionDef":"function(pageContext) { pageContext.workOrderTaskEstimatedDurationMinutes = (Number(pageContext.workOrderTaskEstimatedDuration) * 60); if (!pageContext.workOrderTaskLongDurationFlag && typeof pageContext.workOrderTaskScheduledDate !== 'undefined' && pageContext.workOrderTaskScheduledDate !== '' && pageContext.workOrderTaskEstimatedDuration !== '' && Number(pageContext.workOrderTaskEstimatedDuration) > 0 && Number(pageContext.workOrderTaskEstimatedDuration) <= 24 && (typeof pageContext.taskScheduleMultipleBreakdown === 'undefined' || pageContext.taskScheduleMultipleBreakdown === '' || pageContext.taskScheduleMultipleBreakdown.length <= 1)) { pageContext.workOrderTaskDate = toDateString(new Date(new Date(pageContext.workOrderTaskScheduledDate).getTime() + (Number(pageContext.workOrderTaskEstimatedDurationMinutes) * 60000))); pageContext.taskScheduleMultipleBreakdown = []; pageContext.taskScheduleMultipleBreakdown.push({ 'duration': pageContext.workOrderTaskEstimatedDurationMinutes, 'durationInHours': pageContext.workOrderTaskEstimatedDuration, 'endDate': pageContext.workOrderTaskDate, 'startDate': pageContext.workOrderTaskScheduledDate }); } function toDateString(date) { var dateString = ''; function pad(number) { if (number < 10) { return '0' + number; } return number; } if (date instanceof Date) { dateString = date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + ' ' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + '.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5); } return dateString; } }"},{"falseStep":[],"trueStep":["@actions.fetchTaskScheduleBreakdownData","@actions.processLongDurationTaskScheduleBreakdownData","@actions.bannerShowOrHide"],"name":"decisionActionCheckLongDurationTask","type":"decision","actionDef":"function(pageContext) { return (typeof pageContext.scheduleStartDateAndTime !== 'undefined' && pageContext.scheduleStartDateAndTime !== '' && typeof pageContext.scheduleEndDateAndTime !== 'undefined' && pageContext.scheduleEndDateAndTime !== '' && (pageContext.schedulingTypeDropdown === 'multiDay' || pageContext.workOrderTaskIsLongDurationTask)) }"},{"endPoint":"process/start","name":"fetchTaskScheduleBreakdownData","outputVarMap":{"data":"@pageContext.responseData"},"type":"api","actionDef":{"data":[{"processId":"workOrderTaskScheduleBreakdownWF","contextVar":{"scheduledEndDate":"@pageContext.scheduleEndDateAndTime","workOrderscheduleMethodId":"addTimeSlotsForLongDurationTask","taskScheduleBreakdown":"@pageContext.taskScheduleMultipleBreakdown","calendarId":"@pageContext.workOrderCalendarId","timezoneOffset":"@pageContext.timezoneOffset","scheduleOnPublicHolidays":false,"scheduleOnDaysOff":false,"scheduledStartDate":"@pageContext.scheduleStartDateAndTime"}}]}},{"name":"processLongDurationTaskScheduleBreakdownData","type":"script","actionDef":"function (pageContext) { function nullCheck(a) { try { a = eval(a); return (typeof a !== 'undefined' && a !== ''); } catch (e) { return false; } } pageContext.enable = true; pageContext.taskScheduleMultipleBreakdown = pageContext.responseData[0].outputVar.taskScheduleBreakdown; if(Array.isArray(pageContext.taskScheduleMultipleBreakdown) && pageContext.taskScheduleMultipleBreakdown !== [] && pageContext.taskScheduleMultipleBreakdown.length > 0 ) pageContext.taskScheduleMultipleBreakdown.forEach(breakEle => { breakEle.startDate = new Date(breakEle.startDate).toISOString().replace('T', ' ').replace('Z', ''); breakEle.endDate = new Date(breakEle.endDate).toISOString().replace('T', ' ').replace('Z', ''); }); pageContext.bannerType = pageContext.responseData[0].outputVar.bannerType; pageContext.workOrderTaskEstimatedDuration = nullCheck(pageContext.responseData[0].outputVar.workOrderTaskEstimatedDuration) ? pageContext.responseData[0].outputVar.workOrderTaskEstimatedDuration : ''; pageContext.workOrderTaskEstimatedDurationMinutes = nullCheck(pageContext.workOrderTaskEstimatedDuration) ? (Number(pageContext.workOrderTaskEstimatedDuration) * 60) : ''; }"},{"name":"bannerShowOrHide","type":"script","actionDef":"function(pageContext) { if (pageContext.schedulingTypeDropdown === 'multiDay' || pageContext.workOrderTaskIsLongDurationTask) { if (pageContext.bannerType === 'timeSlotsInPHandFallsOutsideSW') { bannerData('show', '@lang.[\"oomtsasoaphafootswftcs\",\"One or more time slots are scheduled on a public holiday and fall outside of the service window for this customer site.\"]'); } else if (pageContext.bannerType === 'timeSlotsInPH') { bannerData('show', '@lang.[\"oomtsasoaph\",\"One or more time slots are scheduled on a public holiday.\"]'); } else if (pageContext.bannerType === 'timeSlotsFallsOutsideSW') { bannerData('show', '@lang.[\"oomtsasotswftcs\",\"One or more time slots are scheduled outside the service window for this customer site.\"]'); } else if (pageContext.bannerType === 'startDateUnderDOOrPH') { bannerData('show', '@lang.[\"tsdycioadooph\",\"The start date you chose is on a day off or public holiday. Please adjust the start date or switch off the toggle to proceed.\"]'); } else if (pageContext.bannerType === 'startDailyAtLessThanStartTime') { bannerData('show', '@lang.[\"tstotftshappatsdottp\",\"The start time of the first time slot has already passed. Please adjust the start date or time to proceed.\"]'); } else if (pageContext.bannerType === 'timeSlotsOutsideSW') { bannerData('show', '@lang.[\"saedcbooswh\",\"Start and End Dates cannot be outside of Service Window hours.\"]'); } else { bannerData('hide', ''); } } function bannerData(banner, bannerText) { pageContext.banner = banner; pageContext.bannerText = bannerText; } }"},{"name":"hideBannerMsg","type":"script","actionDef":"function(pageContext) {pageContext.banner='hide';pageContext.bannerText='';}"},{"name":"setAWOrScheduledDateData","type":"script","actionDef":"function(pageContext) {pageContext.subActionAW = 'updateAW'; pageContext.isAppointmentBasedTask = false; pageContext.isLongDurationTask = false; if (pageContext.schedulingTypeDropdown === 'appointmentWindow') { pageContext.isAppointmentBasedTask = true; pageContext.taskScheduleMultipleBreakdown = []; if (pageContext.workOrderTaskStatusId === 'workOrderTaskScheduled') { pageContext.workOrderTaskStatusId = 'workOrderTaskOpen'; pageContext.workOrderTaskAssignedToUserId = ''; pageContext.eventType = 'workOrderTaskOpen'; } pageContext.workOrderTaskScheduledDate = ''; pageContext.workOrderTaskDueDate = ''; if (typeof pageContext.scheduledDateAWAbsolute != 'undefined' && pageContext.scheduledDateAWAbsolute != '' && typeof pageContext.selectedRowIds != 'undefined' && pageContext.selectedRowIds.length > 0) { var selectedRecord = pageContext.appointmentWindowsData.filter(ele => ele.id === pageContext.selectedRowIds[0].id); pageContext.workOrderTaskAppointmentWindow = [{ appointmentWindowId: selectedRecord[0].id, startDate: new Date(pageContext.scheduledDateAWAbsolute + ' ' + selectedRecord[0].startTime).toISOString().replace('T', ' ').replace('Z', ''), endDate: new Date(pageContext.scheduledDateAWAbsolute + ' ' + selectedRecord[0].endTime).toISOString().replace('T', ' ').replace('Z', '') }]; } } else if (pageContext.schedulingTypeDropdown === 'multiDay') { pageContext.isLongDurationTask = true; pageContext.workOrderTaskScheduledDate = pageContext.scheduleStartDateAndTime; pageContext.workOrderTaskDueDate = pageContext.scheduleEndDateAndTime; pageContext.workOrderTaskEstimatedDurationMinutes = (Number(pageContext.workOrderTaskEstimatedDuration) * 60); }}"},{"name":"setInitialDataAfterDropdownChange","type":"script","actionDef":"function(pageContext) { var addMinutes = function(date) { return (new Date(date.getTime() - 2 * (pageContext.timezoneOffset * 60000))).toISOString().replace('T', ' ').replace('Z', ''); }; if (pageContext.schedulingTypeDropdown === 'appointmentWindow') { if (typeof pageContext.initialWorkOrderTaskScheduledDate !== 'undefined' && pageContext.initialWorkOrderTaskScheduledDate !== '') { var dateInAbsolute = addMinutes(new Date(pageContext.initialWorkOrderTaskScheduledDate)); pageContext.scheduledDateAbsolute = dateInAbsolute.split(' ')[0]; pageContext.scheduledTimeAbsolute = dateInAbsolute.split(' ')[1]; pageContext.workOrderTaskScheduledDate = pageContext.initialWorkOrderTaskScheduledDate; } else { pageContext.scheduledDateAbsolute = ''; pageContext.scheduledTimeAbsolute = ''; pageContext.workOrderTaskScheduledDate = ''; } } else if (pageContext.schedulingTypeDropdown === 'exactTime') { if (typeof pageContext.appointmentWindowStartDate !== 'undefined' && pageContext.appointmentWindowStartDate !== '') { pageContext.scheduledDateAWAbsolute = addMinutes(new Date(pageContext.appointmentWindowStartDate)).split(' ')[0]; } else { pageContext.scheduledDateAWAbsolute = ''; } } else if (pageContext.schedulingTypeDropdown === 'multiDay') { pageContext.scheduledDateAbsolute = ''; pageContext.scheduledTimeAbsolute = ''; pageContext.workOrderTaskScheduledDate = ''; pageContext.scheduleStartDateAndTime = ''; pageContext.scheduleEndDateAndTime = ''; pageContext.workOrderTaskEstimatedDuration = ''; } pageContext.banner = ''; }"},{"async":true,"name":"processWorkOrderTaskEstimatedDurationMinutes","type":"script","actionDef":"function (pageContext) { pageContext.workOrderTaskEstimatedDurationMinutes = (Number(pageContext.workOrderTaskEstimatedDuration) * 60); }"},{"name":"processDate","type":"script","actionDef":"function (pageContext) { function toDateString(date) { var dateString = ''; function pad(number) { if (number < 10) { return '0' + number; } return number; } if (date instanceof Date) { dateString = date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + ' ' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + '.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5); } return dateString; }; function nullCheck(a) { return (typeof a === 'undefined' || a === '' || a === null) } if (!nullCheck(pageContext.scheduleStartDateAndTime)) { pageContext.nextDay = new Date(pageContext.scheduleStartDateAndTime); pageContext.nextDay.setDate(pageContext.nextDay.getDate() + 1); pageContext.nextDay = toDateString(new Date(pageContext.nextDay)); } if (!nullCheck(pageContext.scheduleStartDateAndTime) && !nullCheck(pageContext.scheduleEndDateAndTime)) { if ((new Date(pageContext.scheduleEndDateAndTime) - new Date(pageContext.scheduleStartDateAndTime)) < 86400000) { pageContext.scheduleEndDateAndTime = ''; } } }"},{"parentPanelRefreshRequired":true,"name":"goBackToWorkOrderSP","type":"backPanel"},{"name":"clearData","type":"script","actionDef":"function(pageContext) { if ((typeof pageContext.workOrderTaskScheduledDate !== 'undefined' || pageContext.workOrderTaskScheduledDate !== '')) { pageContext.workOrderTaskScheduledDate = ''; pageContext.siteLocalTime = ''; pageContext.workOrderTaskScheduledDateSP = ''; pageContext.workOrderTaskEstimatedDuration = ''; } }"},{"name":"setInitialData","type":"script","actionDef":"function(pageContext) { pageContext.timezoneOffset = new Date().getTimezoneOffset(); var addMinutes = function(date) { return (new Date(date.getTime() - 2 * (pageContext.timezoneOffset * 60000))).toISOString().replace('T', ' ').replace('Z', ''); }; if (typeof pageContext.workOrderTaskIsAppointmentBasedTask !== 'undefined' && pageContext.workOrderTaskIsAppointmentBasedTask === true) { pageContext.schedulingTypeDropdown = 'appointmentWindow'; if (pageContext.workOrderTaskStatusId == 'workOrderTaskScheduled') { pageContext.scheduleStartDateAndTime = pageContext.workOrderTaskScheduledDate; pageContext.scheduleEndDateAndTime = pageContext.workOrderTaskDueDate; } } else if (typeof pageContext.workOrderTaskIsLongDurationTask !== 'undefined' && pageContext.workOrderTaskIsLongDurationTask === true) { pageContext.schedulingTypeDropdown = 'multiDay'; pageContext.scheduleStartDateAndTime = pageContext.workOrderTaskScheduledDate; pageContext.scheduleEndDateAndTime = pageContext.workOrderTaskDueDate; } else { pageContext.schedulingTypeDropdown = 'exactTime'; } if (pageContext.workOrderTaskAction == 'add') { pageContext.schedulingTypeDropdown = 'exactTime'; pageContext.workOrderTaskStatusId = 'workOrderTaskDraft'; pageContext.workOrderTaskId = ''; pageContext.workOrderTaskTaskTypeId = ''; pageContext.workOrderTaskSiteId = '';  pageContext.workOrderTaskTaskTypeId = ''; pageContext.workOrderTaskScheduledDate = ''; pageContext.workOrderTaskEstimatedDuration = ''; pageContext.workOrderTaskNotes = ''; pageContext.selectedCatalog = []; pageContext.workOrderTaskEnableService = true; pageContext.workOrderTaskServices = []; if (typeof pageContext.selectedCustomerSite === 'undefined' || pageContext.selectedCustomerSite === '') { pageContext.siteLatitude = ''; pageContext.siteLongitude = ''; pageContext.siteAddress = ''; pageContext.contactPerson = ''; pageContext.contactEmail = ''; pageContext.contactPhone = ''; } } else { if (typeof pageContext.appointmentWindowStartDate !== 'undefined' && pageContext.appointmentWindowStartDate !== '') { pageContext.scheduledDateAWAbsolute = addMinutes(new Date(pageContext.appointmentWindowStartDate)).split(' ')[0]; } } if (typeof pageContext.workOrderDeadline === 'undefined' || pageContext.workOrderDeadline === '') { pageContext.workOrderDeadline = '-'; } pageContext.workOrderTaskStatusTargetModel = 'workOrderTask'; pageContext.currentDate = new Date().toISOString().replace('T', ' ').replace('Z', ''); pageContext.nextDay = ''; if (pageContext.workOrderTaskAction == 'view') { pageContext.currentDate = pageContext.workOrderTaskScheduledDate; } if (typeof pageContext.workOrderTaskEstimatedDuration !== 'undefined' && pageContext.workOrderTaskEstimatedDuration !== '') { pageContext.workOrderTaskEstimatedDurationMinutes = (Number(pageContext.workOrderTaskEstimatedDuration) * 60); } pageContext.initialSchedulingTypeDropdown = pageContext.schedulingTypeDropdown; pageContext.initialScheduledDateAWAbsolute = pageContext.scheduledDateAWAbsolute; pageContext.initialWorkOrderTaskTaskTypeId = pageContext.workOrderTaskTaskTypeId; pageContext.initialWorkOrderTaskEstimatedDuration = pageContext.workOrderTaskEstimatedDuration; pageContext.initialSiteId = pageContext.siteId; pageContext.initialcontactPerson = pageContext.contactPerson; pageContext.initialcontactEmail = pageContext.contactEmail; pageContext.initialcontactPhone = pageContext.contactPhone; pageContext.initialWorkOrderTaskNotes = pageContext.workOrderTaskNotes; pageContext.initialSelectedCatalog = pageContext.selectedCatalog; pageContext.initialWorkOrderTaskScheduledDate = pageContext.workOrderTaskScheduledDate; pageContext.initialWorkOrderTaskEnableService = pageContext.workOrderTaskEnableService; pageContext.initialWorkOrderTaskServices = Array.from(pageContext.workOrderTaskServices); if (Array.isArray(pageContext.workOrderTaskScheduleBreakdown)) { pageContext.initialWorkOrderTaskScheduleBreakdown = Array.from(pageContext.workOrderTaskScheduleBreakdown); } if (pageContext.workOrderTaskAction == 'edit' && Array.isArray(pageContext.workOrderTaskScheduleBreakdown)) { pageContext.taskScheduleMultipleBreakdown = Array.from(pageContext.workOrderTaskScheduleBreakdown); } let totalDuration = 0; if (Array.isArray(pageContext.taskScheduleMultipleBreakdown)) { totalDuration = ((pageContext.taskScheduleMultipleBreakdown.reduce((total, element) => { return total + element.duration; }, 0)) / 60); } pageContext.workOrderTaskTotalDuration = (totalDuration % 1 === 0) ? totalDuration.toFixed(0) : totalDuration.toFixed(2); }"},{"async":true,"name":"processTaskScheduleBreakdownData","type":"script","actionDef":"function (pageContext) { if (Array.isArray(pageContext.taskScheduleBreakdown) && pageContext.taskScheduleBreakdown.length > 0) { if (Array.isArray(pageContext.taskScheduleBreakdown[0].data) && pageContext.taskScheduleBreakdown[0].data.length > 0) { pageContext.workOrderTaskScheduleBreakdown = pageContext.taskScheduleBreakdown[0].data[0].taskScheduleBreakdown; } }"},{"name":"setView","type":"script","actionDef":"function (pageContext) {pageContext.workOrderTaskStatusId = 'workOrderTaskOpen';}"},{"falseStep":["@actions.fetchCustomerSiteData","@actions.decisionActionForCustomerSite"],"trueStep":["@actions.fetchAllQueries","@actions.processTaskData","@actions.processTaskScheduleBreakdownData"],"name":"decisionAction","type":"decision","actionDef":"function(pageContext){if(pageContext.workOrderTaskAction !== 'add'){return true;}}"},{"falseStep":[],"trueStep":["@actions.fetchAvailableAppointmentWindows","@actions.enableDataGridAndSetAppointmentWindowData","@actions.refreshDataGrid"],"name":"decisionActionForAppointmentWindow","type":"decision","actionDef":"function(pageContext){return(pageContext.schedulingTypeDropdown === 'appointmentWindow');}"},{"name":"setDataForUpsertOrderDetails","type":"script","actionDef":"function (pageContext) {if (typeof pageContext.UID != 'undefined' && pageContext.UID != '' && pageContext.UID != '-'  && typeof pageContext.sendNotification != 'undefined' && pageContext.initialSendNotification != pageContext.sendNotification){ pageContext.customerPortalOrderDetails =[]; pageContext.customerPortalOrderDetails.push({ 'UID':pageContext.UID, 'sendCustomerNotifications':pageContext.sendNotification }); pageContext.operation = 'upsert'; }}"},{"endPoint":"process/start","name":"checkIfCustomerPortalInstalled","outputVarMap":{"data":"@pageContext.isCustomerPortalOrderDetailsModelPresent"},"type":"api","actionDef":{"data":[{"processId":"checkIfCustomerPortalOrderDetailsModelPresentWF","contextVar":{"checkIfCustomerPortalOrderDetailsModelPresentWF":"checkIfCustomerPortalOrderDetailsModelPresentWF"}}]}},{"endPoint":"event/start","name":"fireOrderDetailsProcessEvent","outputVarMap":{"data":"@pageContext.customerPortalOrderDetailsData"},"type":"api","continueOnError":true,"actionDef":{"data":[{"eventId":"fireOrderDetailsProcessEvent","contextVar":{"jobList":"@pageContext.jobList"}}]}},{"name":"setDataForEvent","type":"script","actionDef":"function(pageContext) {pageContext.jobList = [];pageContext.jobList.push(pageContext.workOrderTaskId);}"},{"name":"setResponseData","type":"script","actionDef":"function(pageContext) {if(Array.isArray(pageContext.customerPortalOrderDetailsData[0].data[0].customerPortalOrderDetailsData) && pageContext.customerPortalOrderDetailsData[0].data[0].customerPortalOrderDetailsData.length){ pageContext.UID = pageContext.customerPortalOrderDetailsData[0].data[0].customerPortalOrderDetailsData[0].UID; pageContext.sendNotification = pageContext.customerPortalOrderDetailsData[0].data[0].customerPortalOrderDetailsData[0].sendCustomerNotifications; pageContext.initialSendNotification = pageContext.sendNotification; }}"},{"name":"setData","type":"script","actionDef":"function(pageContext){pageContext.isCustomerPortalOrderDetailsModelPresent = pageContext.isCustomerPortalOrderDetailsModelPresent[0].outputVar.isCustomerPortalOrderDetailsModelPresent;}"},{"falseStep":[],"trueStep":["@actions.setDataForEvent","@actions.fireOrderDetailsProcessEvent","@actions.setResponseData"],"name":"decisionActionForCustomerPortal","type":"decision","actionDef":"function (pageContext) {return (typeof pageContext.isCustomerPortalOrderDetailsModelPresent != 'undefined' && pageContext.isCustomerPortalOrderDetailsModelPresent)}"},{"falseStep":[],"trueStep":["@actions.processingCustomerSitesData","@actions.getCustomerSiteAddress","@actions.setCustomerSiteAddress"],"name":"decisionActionForCustomerSite","type":"decision","actionDef":"function(pageContext){return(typeof pageContext.customerSitesData !== 'undefined' && pageContext.customerSitesData !== '' && pageContext.customerSitesData.length === 1)}"},{"name":"closeModal","type":"closeModal"},{"name":"setBannerType","type":"script","actionDef":"function(pageContext){pageContext.bannerType = 'showBanner';}"},{"name":"setCustomerSiteAddress","type":"script","actionDef":"function(pageContext) { console.log('fire');if (pageContext.customerSiteData.length > 0) { pageContext.siteAddress = pageContext.customerSiteData[0].siteAddress; pageContext.contactPerson = pageContext.customerSiteData[0].contactPerson;console.log(pageContext.contactPerson); pageContext.contactEmail = pageContext.customerSiteData[0].contactEmail; pageContext.contactPhone = pageContext.customerSiteData[0].contactPhone; pageContext.siteLatitude = pageContext.customerSiteData[0].siteLatitude; pageContext.siteLongitude = pageContext.customerSiteData[0].siteLongitude; pageContext.siteTimezoneOffset = pageContext.customerSiteData[0].siteTimezoneOffset; pageContext.siteTimeZone = pageContext.customerSiteData[0].siteTimeZone; } }"},{"name":"setSelectedCustomerSiteId","type":"script","actionDef":"function (pageContext) { if (typeof pageContext.selectedCustomerSite !== 'undefined' && pageContext.selectedCustomerSite !== '' && pageContext.selectedCustomerSite.length > 0 && pageContext.selectedCustomerSite[0] !== null) { pageContext.selectedCatalog = []; pageContext.siteId = pageContext.selectedCustomerSite[0].value; } else { pageContext.siteId = ''; pageContext.siteAddress = '-'; pageContext.siteLatitude = 0; pageContext.siteLongitude = 0; } }"},{"searchDropdownId":["selectedCatalog"],"name":"refreshSearchComponent","type":"refreshSearchDropdown"},{"name":"editSchedule","type":"script","actionDef":"function(pageContext){pageContext.editTaskScheduleBreakdown='edit';pageContext.workOrderTaskScheduledDate='';pageContext.workOrderTaskEstimatedDuration='';pageContext.workOrderTaskEstimatedDurationMinutes='';}"},{"name":"updateDataGrid","type":"openPanel","requiredPageContextKeys":"[\"taskScheduleMultipleBreakdown\",\"editTaskScheduleBreakdown\",\"workOrderTaskScheduledDate\",\"workOrderTaskEstimatedDurationMinutes\",\"workOrderTaskEstimatedDuration\",\"scheduledDateAbsolute\",\"scheduledTimeAbsolute\"]"},{"falseStep":["@actions.clearAssetData"],"trueStep":["@actions.setSelectedCustomerSiteId","@actions.getCustomerSiteAddress","@actions.setCustomerSiteAddress","@actions.refreshSearchComponent"],"name":"decisionActionForSiteData","type":"decision","actionDef":"function(pageContext){if(typeof pageContext.selectedCustomerSite !=='undefined' && pageContext.selectedCustomerSite !=='' && pageContext.selectedCustomerSite[0] !== null) {return true;} return false;}"},{"name":"clearAssetData","type":"script","actionDef":"function(pageContext){pageContext.selectedCatalog = [];pageContext.siteId = '';pageContext.siteAddress = '-'; pageContext.siteLatitude = 0; pageContext.siteLongitude = 0; pageContext.siteTimezoneOffset='';}"},{"name":"setSelectedTaskTypeId","type":"script","actionDef":"function (pageContext) { if (pageContext.selectedTaskType[0] !== null) { pageContext.workOrderTaskTaskTypeId = pageContext.selectedTaskType[0].value; pageContext.taskTypeName = pageContext.selectedTaskType[0].label; } else { pageContext.workOrderTaskTaskTypeId = ''; pageContext.workOrderTaskEnableService = false; pageContext.workOrderTaskServices = []; pageContext.workOrderTaskEstimatedDuration = '';} }"},{"name":"processTaskData","type":"script","actionDef":"function(pageContext) { for (let key in pageContext.queryData[0].data[0]) { if (key === '__status' || key === 'contextType') continue; pageContext[key] = pageContext.queryData[0].data[0][key]; } let props = ['taskData', 'taskTypeData', 'customerSiteData']; for (let key of props) { if (typeof pageContext[key] !== 'undefined' && pageContext[key] !== '') { for (let element in pageContext[key][0]) { pageContext[element] = pageContext[key][0][element]; } } } if (pageContext.workOrderTaskEstimatedDuration) { let duration = (Number(pageContext.workOrderTaskEstimatedDuration) / 60); pageContext.workOrderTaskEstimatedDuration = (duration % 1 == 0) ? duration.toFixed(0) : duration.toFixed(2); } if (typeof pageContext.taskScheduleBreakdown !== 'undefined' && pageContext.taskScheduleBreakdown.length > 0) { pageContext.workOrderTaskScheduleBreakdown = pageContext.taskScheduleBreakdown; } pageContext.selectedServices = []; if (Array.isArray(pageContext.workOrderTaskServices) && pageContext.workOrderTaskServices.length > 0) { pageContext.selectedServices = pageContext.workOrderTaskServices.map((element) => element.catalogId); } if (typeof pageContext.taskTypeId !== 'undefined' && pageContext.taskTypeId !== '' && typeof pageContext.taskTypeName !== 'undefined' && pageContext.taskTypeName !== '') { pageContext.selectedTaskType = { 'value': pageContext.taskTypeId, 'label': pageContext.taskTypeName }; } if (typeof pageContext.siteId !== 'undefined' && pageContext.siteId !== '' && typeof pageContext.siteName !== 'undefined' && pageContext.siteName !== '') { pageContext.contactPerson = pageContext.contactPerson;console.log(pageContext.contactPerson); pageContext.contactEmail = pageContext.contactEmail; pageContext.contactPhone = pageContext.contactPhone; pageContext.selectedCustomerSite = { 'value': pageContext.siteId, 'label': pageContext.siteName }; } pageContext.selectedCatalog = []; if (typeof pageContext.assets !== 'undefined' && pageContext.assets !== '' && pageContext.assets.length > 0) { pageContext.selectedCatalog = pageContext.assets; } }"},{"name":"setBannerTypeDelete","type":"script","actionDef":"function(pageContext) {pageContext.bannerType ='taskDeleteBanner';}"},{"name":"setSubActionAndEventType","type":"script","actionDef":"function (pageContext) { pageContext.subAction = 'upsertWorkOrderTask'; if (pageContext.workOrderTaskAction == 'add') { pageContext.eventType = 'workOrderTaskDraft'; } else if (pageContext.workOrderTaskAction == 'edit') { pageContext.eventType = 'workOrderTaskUpdated'; } }"},{"name":"clearbannerType","type":"script","actionDef":"function(pageContext){pageContext.bannerType='';}"},{"name":"setBannerType","type":"script","actionDef":"function (pageContext) { if (typeof pageContext.workOrderTaskScheduledDate !== 'undefined' && pageContext.workOrderTaskScheduledDate !== '' && pageContext.taskScheduleBreakdown[0].startDate !== pageContext.workOrderTaskScheduledDate) { pageContext.bannerType = 'showBanner'; } }"},{"name":"setDueDate","type":"script","actionDef":"function (pageContext) { if (typeof pageContext.taskScheduleMultipleBreakdown !== 'undefined') {  pageContext.workOrderTaskDueDate = pageContext.taskScheduleMultipleBreakdown[pageContext.taskScheduleMultipleBreakdown.length - 1].endDate; } if (pageContext.schedulingTypeDropdown == 'multiDay') { pageContext.workOrderTaskDueDate = pageContext.scheduleEndDateAndTime;}}"},{"name":"setWorkOrderTaskStatusIdForPublish","type":"script","actionDef":"function (pageContext) { if (pageContext.workOrderTaskStatusId === 'workOrderTaskDraft') { pageContext.workOrderTaskStatusId = 'workOrderTaskOpen'; pageContext.eventType = 'workOrderTaskOpen'; } else { pageContext.eventType = 'workOrderTaskUpdated'; } } "},{"name":"openMapOverlay","type":"openOverlayView","title":"Customer Site Map Location","pageDef":[{"mapElementStyle":{"width":"100%","height":"20rem"},"defaultZoom":17,"preserveViewport":true,"location":[{"coordinates":"@pageContext.coordinates","icon":"https://cdn.zeplin.io/5be3ee39a464fd7e89ffaaa0/assets/57BF1B12-69E2-4E77-881C-A53900EB4260.svg","type":"Point"}],"id":"mapForShowStatic","type":"map","renderType":"location","mapElementHeight":"100%","mapJson":{}}]},{"name":"getTimeZone","type":"script","actionDef":"function(pageContext) {pageContext.timezoneOffset=new Date().getTimezoneOffset();}"},{"endPoint":"process/start","name":"getWeeklyScheduleData","outputVarMap":{"data":"@pageContext.weeklyScheduleData"},"type":"api","actionDef":{"data":[{"processId":"settingsGeneralCalendarWeeklyScheduleFetchDataWF","contextVar":{"timezoneOffset":"@pageContext.timezoneOffset","id":"@pageContext.workOrderCalendarId"}}]}},{"name":"enableDataGridAndSetWeeklyScheduleData","type":"script","actionDef":"function(pageContext){pageContext.enable=true;pageContext.calendarData=pageContext.weeklyScheduleData[0].outputVar.calendarData;}"},{"endPoint":"process/start","name":"fetchAvailableAppointmentWindows","outputVarMap":{"data":"@pageContext.appointmentWindowsRawData"},"type":"api","actionDef":{"data":[{"processId":"acWorkOrderTaskFetchAvailableAppointmentWindowsWF","contextVar":{"timezoneOffset":"@pageContext.timezoneOffset","scheduledDate":"@pageContext.scheduledDateAWAbsolute","siteTimeZone":"@pageContext.siteTimeZone"}}]}},{"name":"enableDataGridAndSetAppointmentWindowData","type":"script","actionDef":"function(pageContext){pageContext.enable=true;pageContext.appointmentWindowsData=pageContext.appointmentWindowsRawData[0].outputVar.appointmentWindowsData;}"},{"name":"getLocationCoordinates","type":"script","actionDef":"function (pageContext) { if (typeof pageContext.siteLatitude != 'undefined' &&  pageContext.siteLatitude != '' && typeof pageContext.siteLongitude != 'undefined' && pageContext.siteLongitude != '') { pageContext.coordinates = [pageContext.siteLatitude, pageContext.siteLongitude]; return pageContext.coordinates; } else { pageContext.siteAddress = '-'; return pageContext.coordinates = [0, 0]; } }"},{"name":"serviceWindowOverlay","type":"openOverlayView","title":"@lang.['navSW','Service Window']","pageDef":[{"id":"weeklyScheduleDatagrid","type":"dataGrid","jsonDef":{"pageContextConfig":{"enable":true,"isPaginationReqd":false,"tableData":{"source":"@pageContext.calendarData"}},"rowTextLength":40,"isSelectable":false,"tableHeader":[{"name":"@lang.['d12','Day']","options":{"sortable":true,"showLabel":true},"key":"weeklyScheduleDay"},{"name":"@lang.['s','Status']","options":{"showLabel":true},"key":"serviceWindowWeeklyScheduleIsOpen"},{"name":"@lang.['t11','Timings']","options":{"flex":2,"dateRangeType":"absoluteTime","sortable":true,"type":"dateRange","showLabel":true},"key":"weeklyScheduleTimings"},{"name":"@lang.['h','Hours']","options":{"sortable":true,"showLabel":true},"key":"weeklyScheduleTotalHours"}]}}]},{"name":"setSubActionRemoveAsset","type":"script","actionDef":"function(pageContext){pageContext.subActionAssets='removeWorkOrderTaskInstalledBase';}"},{"endPoint":"process/start","name":"fireProcessEventToremoveAsset","outputVarMap":{"data":"@pageContext.workOrderTaskInstalledBaseList"},"type":"api","actionDef":{"data":[{"processId":"workOrderTaskInstalledBaseWF","contextVar":{"subAction":"@pageContext.subActionAssets","workOrderTaskInstalledBase":[{"recver":"@pageContext.workOrderTaskInstalledBaseRecver","workOrderTaskId":"@pageContext.workOrderTaskId","installedBaseId":"@pageContext.installedBaseId"}]}}]}},{"name":"refreshAssetDataGrid","gridId":["assetGridId"],"type":"RefreshGridOnSidePanel"},{"endPoint":"process/start","name":"updateSiteContactDetails","outputVarMap":{"data":"@pageContext.updateSiteContactDetails"},"type":"api","actionDef":{"data":[{"inputVar":{"contactEmail":"@pageContext.contactEmail","siteId":"@pageContext.siteId","contactPerson":"@pageContext.contactPerson","contactPhone":"@pageContext.contactPhone"},"processId":"saveSiteContactDetails","contextVar":{"contactEmail":"@pageContext.contactEmail","siteId":"@pageContext.siteId","contactPerson":"@pageContext.contactPerson","contactPhone":"@pageContext.contactPhone"}}]}},{"name":"changeTztime","type":"script","actionDef":"function(pageContext) { function formatDate(date) { if (date) { var d = new Date(new Date(date).getTime() - pageContext.siteTimezoneOffset * 60 * 1000); return (d.getDate() < 10 ? '0' + d.getDate() : d.getDate()) + '-' + (parseInt(d.getMonth() + 1) < 10 ? '0' + parseInt(d.getMonth() + 1) : parseInt(d.getMonth() + 1)) + '-' + d.getFullYear() + ' ' + (d.getHours() < 10 ? '0' + d.getHours() : d.getHours()) + ':' + (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes()) + ':00.000'; d = new Date(new Date(d + ' UTC').toLocaleString('en-us', { timeZone: pageContext.siteTimeZone })), month = '' + (d.getMonth() + 1), day = '' + d.getDate(), year = d.getFullYear(); var hours = d.getHours().toString(); var minutes = d.getMinutes().toString(); var seconds = d.getSeconds().toString(); var timeZone = new Date().toString().split(' ')[5]; if (minutes.length < 2) minutes = '0' + minutes; if (hours.length < 2) hours = '0' + hours; if (seconds.length < 2) seconds = '0' + seconds; time = hours + ':' + minutes + ':' + seconds; if (month.length < 2) month = '0' + month; if (day.length < 2) day = '0' + day; date = ([day, month, year].join('-') + ' ' + time); } else { return '-'; } } pageContext.siteLocalTime = formatDate(pageContext.workOrderTaskScheduledDateSP); }"},{"name":"setCurrentTimeData1","type":"script","actionDef":"function(pageContext) { pageContext.workOrderTaskScheduledDateSP = pageContext.fetchTimeZoneData[0].outputVar.currentSiteTime; var mmaindte = pageContext.fetchTimeZoneData[0].outputVar.currentSiteTime; var tz = pageContext.fetchTimeZoneData[0].outputVar.timeZone; var a = mmaindte.slice(0, 11); var t = a.concat(tz.slice(1, 5)); var timeStart = new Date(mmaindte); var timeEnd = new Date(t); var difference = timeStart.getTime() - timeEnd.getTime(); var diff_result = new Date(difference); var c = JSON.stringify(diff_result); c.replace('T', ' ').replace('Z', ''); pageContext.currentSiteTime = (a.concat(c.slice(12, 24))); }{ pageContext.workOrderTaskScheduledDateSP=new Date(pageContext.workOrderTaskScheduledDate.getTime() - pageContext.siteTimezoneOffset*60*1000);return pageContext.workOrderTaskScheduledDateSP;}"},{"name":"setCurrentTimeData","type":"script","actionDef":"function(pageContext) { var d = new Date(new Date(pageContext.currentDate).getTime() - pageContext.siteTimezoneOffset * 60 * 1000); var dem = d.getFullYear() + '-' + (parseInt(d.getMonth() + 1) < 10 ? '0' + parseInt(d.getMonth() + 1) : parseInt(d.getMonth() + 1)) + '-' + (d.getDate() < 10 ? '0' + d.getDate() : d.getDate()) + ' ' + (d.getHours() < 10 ? '0' + d.getHours() : d.getHours()) + ':' + (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes()) + ':00.000'; var dem1 = new Date(dem).toISOString().replace('Z', '').replace('T', ' '); pageContext.dem1 = dem1; pageContext.workOrderTaskScheduledDateSP = pageContext.currentDate; }"},{"name":"setDueDateTz","type":"script","actionDef":"function(pageContext) { var mmaindte = pageContext.fetchTZDueDate[0].outputVar.currentSiteTime; var tz = pageContext.fetchTZDueDate[0].outputVar.timeZone; var a = mmaindte.slice(0, 11); var t = a.concat(tz.slice(1, 5)); var timeStart = new Date(mmaindte); var timeEnd = new Date(t); var difference = timeStart.getTime() - timeEnd.getTime(); var diff_result = new Date(difference); var c = JSON.stringify(diff_result); c.replace('T', ' ').replace('Z', ''); pageContext.workOrderTaskDueDate = (a.concat(c.slice(12, 24))); }"},{"name":"setTimeStampDueDate","type":"script","actionDef":"function(pageContext) { if (typeof pageContext.initialWorkOrderDeadline !== 'undefined' && pageContext.initialWorkOrderDeadline !== '') { pageContext.dueDateTimestamp = parseInt((new Date(pageContext.initialWorkOrderDeadline).getTime() / 1000).toFixed(0)); } }"},{"name":"setLatLongData","type":"script","actionDef":"function(pageContext) { if (typeof pageContext.siteLatitude !== 'undefined' && pageContext.siteLatitude !== '' && typeof pageContext.siteLongitude !== 'undefined' && pageContext.siteLongitude !== '') { console.log('isnide'); pageContext.location = pageContext.siteLatitude + ' ' + pageContext.siteLongitude; pageContext.timestamp = +Math.floor(Date.now() / 1000); } }"},{"endPoint":"process/start","name":"fetchTimeZoneData","outputVarMap":{"data":"@pageContext.fetchTimeZoneData"},"type":"api","actionDef":{"data":[{"inputVar":{"latitude":"@pageContext.siteLatitude","location":"@pageContext.location","timestamp":"@pageContext.timestamp","longitude":"@pageContext.siteLongitude"},"processId":"Q1OXR54SMG","contextVar":{"latitude":"@pageContext.siteLatitude","location":"@pageContext.location","timestamp":"@pageContext.timestamp","longitude":"@pageContext.siteLongitude"}}]}},{"endPoint":"process/start","name":"fetchTZDueDate","outputVarMap":{"data":"@pageContext.fetchTZDueDate"},"type":"api","actionDef":{"data":[{"inputVar":{"latitude":"@pageContext.siteLatitude","location":"@pageContext.location","timestamp":"@pageContext.dueDateTimestamp","longitude":"@pageContext.siteLongitude"},"processId":"Q1OXR54SMG","contextVar":{"latitude":"@pageContext.siteLatitude","location":"@pageContext.location","timestamp":"@pageContext.dueDateTimestamp","longitude":"@pageContext.siteLongitude"}}]}},{"falseStep":[],"trueStep":["@actions.fetchCustomerOrderDetail","@actions.setOrderData","@actions.updateOrderData"],"name":"checkAppointmentWindow","type":"decision","actionDef":"function(pageContext){if(typeof pageContext.workOrderTaskAppointmentWindow !=='undefined' && pageContext.workOrderTaskAppointmentWindow !=='') {return true;} return false;}"},{"name":"fetchCustomerOrderDetail","outputVarMap":{"data":"@pageContext.orderDetail"},"type":"query","actionDef":{"filter":"{$jobId} = {@workOrderTaskId}","models":["customerPortalOrderDetails"],"inputs":{"workOrderTaskId":"@pageContext.workOrderTaskId"},"columns":{"jobId":"customerPortalOrderDetails.jobId","UID":"customerPortalOrderDetails.UID","statusId":"customerPortalOrderDetails.statusId","statusTargetModel":"customerPortalOrderDetails.statusTargetModel","recver":"recver","sendCustomerNotifications":"customerPortalOrderDetails.sendCustomerNotifications"}}},{"name":"setOrderData","type":"script","actionDef":"function (pageContext) {console.log('a');if (pageContext.orderDetail.length > 0) {console.log('b'); pageContext.orderStatus = pageContext.orderDetail[0].statusId;pageContext.orderRecver = pageContext.orderDetail[0].recver; pageContext.UID = pageContext.orderDetail[0].UID; if(pageContext.orderStatus == 'fscx2_0_bookingCreated' ){console.log('c'); pageContext.orderStatus = 'fscx2_0_additionalInformationNotSubmitted'; } }console.log(pageContext.orderStatus);}"},{"endPoint":"model/update","alertMessage":true,"name":"updateOrderData","outputVarMap":{"data":"@pageContext.orderData"},"type":"api","actionDef":{"data":[{"modelName":"customerPortalOrderDetails","UID":"@pageContext.UID","statusId":"@pageContext.orderStatus","recver":"@pageContext.orderRecver"}],"columns":[]}}]}