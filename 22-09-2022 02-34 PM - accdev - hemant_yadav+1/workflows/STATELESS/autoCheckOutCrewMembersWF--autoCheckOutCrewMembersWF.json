{"createDynamicFilterToFetchCrewAttendanceData":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchCrewAttendanceData"}],"contextChangePermitted":true,"name":"createDynamicFilterToFetchCrewAttendanceData","description":"createDynamicFilterToFetchCrewAttendanceData","processRule":"{ contextVar.filterToFetchCrewAttendanceData = ''; if (typeof contextVar.workOrderTaskId != 'undefined' && contextVar.workOrderTaskId != '') { contextVar.workOrderTaskId = contextVar.workOrderTaskId; contextVar.filterToFetchCrewAttendanceData = '{$workOrderTaskId}={@workOrderTaskId}'; } if (typeof contextVar.userId != 'undefined' && contextVar.userId != '') { contextVar.workforceUserId = contextVar.userId.includes('@') ? contextVar.assignedToUserId : contextVar.userId; if (contextVar.filterToFetchCrewAttendanceData != '') { contextVar.filterToFetchCrewAttendanceData=contextVar.filterToFetchCrewAttendanceData + ' AND '; } contextVar.filterToFetchCrewAttendanceData = contextVar.filterToFetchCrewAttendanceData + '{$workforceUserId}={@workforceUserId} AND {$workOrderTask.statusId} NOT IN {@taskStatusesForFiltering} '; } }","nodeType":"PROCESS","jsEngine":"es6"},"workflowContext":{"taskStatusesForFiltering":["workOrderTaskCompleted","workOrderTaskCancelled","workOrderTaskDiscontinued","workOrderTaskRejected"]},"processDataToUpdateCrewAttendance":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkIfUpdateRequired"}],"contextChangePermitted":true,"name":"processDataToUpdateCrewAttendance","description":"createDynamicFilterToFetchCrewAttendanceData","processRule":"function dateCompare(d1, d2) { return (new Date(d1).getTime() > new Date(d2).getTime()); } contextVar.crewAttendanceData = []; contextVar.checkOutTime = contextVar.checkOutTime ? contextVar.checkOutTime : new Date().toISOString().replace('T', ' ').replace('Z', ''); if (Array.isArray(contextVar.existingCrewAttendanceData)) { contextVar.existingCrewAttendanceData.forEach(function (element) { if (typeof element.attendance != 'undefined' && element.attendance.length > 0) { element.attendance.forEach(function (ele) { var checkOutTimeUpdated = false; if (ele.checkInTime && ele.checkOutTime) { if (dateCompare(ele.checkInTime, ele.checkOutTime)) { ele.checkOutTime = contextVar.checkOutTime; checkOutTimeUpdated = true; } } else { if (ele.checkInTime) { ele.checkOutTime = contextVar.checkOutTime; checkOutTimeUpdated = true; } } if (checkOutTimeUpdated){ contextVar.crewAttendanceData.push(element); } }); } }); }","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"createDynamicFilterToFetchCrewAttendanceData"}],"name":"start","description":"Start","nodeType":"START"},"end":{"name":"end","description":"End","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"updateCrewAttendance":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"AJE55L9RXN","name":"updateCrewAttendance","description":"updateCrewAttendance","inputVarMap":{"crewAttendanceData":"data"},"nodeType":"WORKFLOW"},"workflowNodes":["start","createDynamicFilterToFetchCrewAttendanceData","fetchCrewAttendanceData","processDataToUpdateCrewAttendance","checkIfUpdateRequired","updateCrewAttendance","end"],"checkIfUpdateRequired":{"connectors":[{"exitPortType":"TrueStep","nodeId":"updateCrewAttendance"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"checkIfUpdateRequired","description":"check if update required for crew attendance","processRule":"(typeof contextVar.crewAttendanceData !== 'undefined' && contextVar.crewAttendanceData.length > 0)","nodeType":"DECISION"},"fetchCrewAttendanceData":{"filter":"filter","models":["crewAttendance","workOrderTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"processDataToUpdateCrewAttendance"}],"columns":{"processInstanceId":"crewAttendance.processInstanceId","workOrderTaskId":"crewAttendance.workOrderTaskId","workforceUserId":"crewAttendance.workforceUserId","attendance":"crewAttendance.attendance"},"name":"fetchCrewAttendanceData","description":"fetchCrewAttendanceData","links":{"crewAttendance":"workOrderTask"},"inputVarMap":{"workOrderTaskId":"workOrderTaskId","taskStatusesForFiltering":"taskStatusesForFiltering","workforceUserId":"workforceUserId","filterToFetchCrewAttendanceData":"filter"},"outputVarMap":{"data":"existingCrewAttendanceData"},"nodeType":"QUERY","getCount":true}}