{"fetchTaskDetails":{"filter":"{$workOrderTaskId}={@workOrderTaskId} ","models":["workOrderTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"processCheckResult"}],"columns":{"result":"workOrderTask.result","workOrderTaskId":"workOrderTask.id"},"name":"fetchTaskDetails","description":"fetch task details","inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"id":"fetchTaskDetails","outputVarMap":{"data":"taskDetailBackwardCompatibility"},"nodeType":"QUERY"},"processData":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processData","description":"Process data","processRule":"if(contextVar.taskDetailBackwardCompatibility[0].result) { contextVar.initialEvidenceDataGridArray = []; if(contextVar.taskDetailBackwardCompatibility[0].result[0].beforeCaptureEvidence) { var initialEvidenceObj ={}; initialEvidenceObj['initialEvidenceNotes'] = contextVar.taskDetailBackwardCompatibility[0].result[0].beforeCaptureEvidence.comment; initialEvidenceObj['initialEvidence']  = contextVar.taskDetailBackwardCompatibility[0].result[0].beforeCaptureEvidence.media; contextVar.initialEvidenceDataGridArray.push(initialEvidenceObj); } if(contextVar.taskDetailBackwardCompatibility[0].result[0].beforeCaptureEvidenceOptionalFirst) { var initialEvidenceObj ={}; initialEvidenceObj['initialEvidenceNotes'] = contextVar.taskDetailBackwardCompatibility[0].result[0].beforeCaptureEvidenceOptionalFirst.comment; initialEvidenceObj['initialEvidence']  = contextVar.taskDetailBackwardCompatibility[0].result[0].beforeCaptureEvidenceOptionalFirst.media; contextVar.initialEvidenceDataGridArray.push(initialEvidenceObj); } if(contextVar.taskDetailBackwardCompatibility[0].result[0].beforeCaptureEvidenceOptionalSecond) { var initialEvidenceObj ={}; initialEvidenceObj['initialEvidenceNotes'] = contextVar.taskDetailBackwardCompatibility[0].result[0].beforeCaptureEvidenceOptionalSecond.comment; initialEvidenceObj['initialEvidence']  = contextVar.taskDetailBackwardCompatibility[0].result[0].beforeCaptureEvidenceOptionalSecond.media; contextVar.initialEvidenceDataGridArray.push(initialEvidenceObj); } if(contextVar.taskDetailBackwardCompatibility[0].result[0].beforeComments) { contextVar.initialCommentsSection = contextVar.taskDetailBackwardCompatibility[0].result[0].beforeComments; } if(contextVar.taskDetailBackwardCompatibility[0].result[0].afterComments) { contextVar.finalCommentsSection = contextVar.taskDetailBackwardCompatibility[0].result[0].afterComments; } contextVar.finalEvidenceDataGridArray = []; if(contextVar.taskDetailBackwardCompatibility[0].result[0].afterCaptureEvidence) { var finalEvidenceObj ={}; finalEvidenceObj['finalEvidenceNotes'] = contextVar.taskDetailBackwardCompatibility[0].result[0].afterCaptureEvidence.comment; finalEvidenceObj['finalEvidence']  = contextVar.taskDetailBackwardCompatibility[0].result[0].afterCaptureEvidence.media; contextVar.finalEvidenceDataGridArray.push(finalEvidenceObj); } if(contextVar.taskDetailBackwardCompatibility[0].result[0].afterCaptureEvidenceOptionalFirst) { var finalEvidenceObj ={}; finalEvidenceObj['finalEvidenceNotes'] = contextVar.taskDetailBackwardCompatibility[0].result[0].afterCaptureEvidenceOptionalFirst.comment; finalEvidenceObj['finalEvidence']  = contextVar.taskDetailBackwardCompatibility[0].result[0].afterCaptureEvidenceOptionalFirst.media; contextVar.finalEvidenceDataGridArray.push(finalEvidenceObj); } if(contextVar.taskDetailBackwardCompatibility[0].result[0].afterCaptureEvidenceOptionalSecond) { var finalEvidenceObj ={}; finalEvidenceObj['finalEvidenceNotes'] = contextVar.taskDetailBackwardCompatibility[0].result[0].afterCaptureEvidenceOptionalSecond.comment; finalEvidenceObj['finalEvidence']  = contextVar.taskDetailBackwardCompatibility[0].result[0].afterCaptureEvidenceOptionalSecond.media; contextVar.finalEvidenceDataGridArray.push(finalEvidenceObj); } if(contextVar.taskDetailBackwardCompatibility[0].result[0].activityDataGrid) { contextVar.serviceArray =[]; contextVar.serviceArrayObj ={}; if(contextVar.taskDetailBackwardCompatibility[0].result[0].activityDataGrid[0].taskActivity) { contextVar.serviceArrayObj['selectedService'] = contextVar.taskDetailBackwardCompatibility[0].result[0].activityDataGrid[0].taskActivity; } if(contextVar.taskDetailBackwardCompatibility[0].result[0].activityDataGrid[0].photo1) { contextVar.serviceArrayObj['servicePhotos'] = contextVar.taskDetailBackwardCompatibility[0].result[0].activityDataGrid[0].photo1; } if(contextVar.taskDetailBackwardCompatibility[0].result[0].activityDataGrid[0].assets) { contextVar.serviceArrayObj['assets'] = contextVar.taskDetailBackwardCompatibility[0].result[0].activityDataGrid[0].assets; } if(contextVar.taskDetailBackwardCompatibility[0].result[0].activityDataGrid[0].barcode) { contextVar.serviceArrayObj['barcode'] = contextVar.taskDetailBackwardCompatibility[0].result[0].activityDataGrid[0].barcode; } contextVar.serviceArray.push(contextVar.serviceArrayObj); } contextVar.initialEvidenceDataGrid = contextVar.initialEvidenceDataGridArray; contextVar.initialComments = contextVar.initialCommentsSection; if(contextVar.finalEvidenceDataGridArray) { contextVar.finalEvidenceDataGrid = contextVar.finalEvidenceDataGridArray; } if(contextVar.finalCommentsSection) { contextVar.finalComments = contextVar.finalCommentsSection; } contextVar.servicesDataGrid = contextVar.serviceArray; contextVar.submitType = 'endTask'; }","id":"processData","nodeType":"PROCESS"},"isResultAvailableForOldTask":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isResultAvailableForOldTask","description":"isResultAvailableForOldTask","processRule":"(contextVar.resultFlag)","nodeType":"DECISION"},"workflowContext":{},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTaskDetails"}],"name":"start","description":" Start","id":"start","nodeType":"START"},"end":{"name":"End","description":"end","inputVarMap":{},"outputVarMap":{},"id":"end","nodeType":"END"},"processCheckResult":{"connectors":[{"exitPortType":"NextStep","nodeId":"isResultAvailableForOldTask"}],"contextChangePermitted":true,"name":"processCheckResult","description":"processCheckResult","processRule":"contextVar.resultFlag = ''; if (contextVar.taskDetailBackwardCompatibility[0].result) { contextVar.taskDetailBackwardCompatibility[0].result.forEach(function (element) { if (typeof element.beforeCaptureEvidence != 'undefined') { contextVar.resultFlag =true; } else { contextVar.resultFlag =false; } }); } else { contextVar.resultFlag= false; }","id":"processCheckResult","nodeType":"PROCESS"},"workflowNodes":["start","fetchTaskDetails","processCheckResult","isResultAvailableForOldTask","processData","end"]}