{"appendTasks":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreBatchesPresent"}],"contextChangePermitted":true,"name":"appendTasks","description":"appendTasks","processRule":"{ if (Array.isArray(contextVar.moreWorkOrderTaskData)) { contextVar.workOrderTaskData = contextVar.workOrderTaskData.concat(contextVar.moreWorkOrderTaskData); } contextVar.tasksBatchNumber++; }","nodeType":"PROCESS"},"findNumberOfBatches":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreBatchesPresent"}],"contextChangePermitted":true,"name":"findNumberOfBatches","description":"findNumberOfBatches","processRule":"{ contextVar.noOfTasksBatches = Math.ceil(contextVar.tasksCount/contextVar.customBatchSize); contextVar.tasksBatchNumber++; }","nodeType":"PROCESS"},"processBookingDataData":{"connectors":[{"exitPortType":"NextStep","nodeId":"notifyNodeBookingRemainderSMS"}],"contextChangePermitted":true,"name":"processBookingDataData","description":"processBookingDataData","processRule":"{ contextVar.startDate = contextVar.loopThroughBookingData_currentElement.startDate;contextVar.customerName = contextVar.loopThroughBookingData_currentElement.customerName; contextVar.appointmentWindow = contextVar.loopThroughBookingData_currentElement.appointmentWindow; contextVar.contactPhone = contextVar.loopThroughBookingData_currentElement.contactPhone; }","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchEntityConfig"}],"name":"start","description":"start","nodeType":"START"},"fetchTaskData":{"filter":"{@filter}","models":["workOrderTask","workOrderTaskAppointmentWindow","site","customer"],"connectors":[{"exitPortType":"NextStep","nodeId":"areTasksPresent"}],"columns":{"workOrderTaskAppointmentWindowStartDate":"workOrderTaskAppointmentWindow.startDate","contactTitle":"site.contactTitle","contactEmail":"site.contactEmail","timezoneOffset":"site.timezoneOffset","workOrderTaskId":"workOrderTask.id","contactPerson":"site.contactPerson","contactPhone":"site.contactPhone","customerName":"customer.companyName","workOrderTaskAppointmentWindowEndDate":"workOrderTaskAppointmentWindow.endDate"},"name":"fetchTaskData","description":"fetchTaskData","links":{"workOrderTask":"site","site":"customer","workOrderTaskAppointmentWindow":"workOrderTask"},"inputVarMap":{"customBatchSize":"batchSize","endDate":"endDate","appointmentFilter":"filter","taskStatus":"taskStatus","startDate":"startDate"},"outputVarMap":{"data":"workOrderTaskData","count":"tasksCount","batchNumber":"tasksBatchNumber"},"batchSize":"batchSize","nodeType":"QUERY","getCount":true},"isBookingDataPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"loopThroughBookingData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"isBookingDataPresent","description":"isBookingDataPresent","processRule":"{contextVar.bookingData != undefined && contextVar.bookingData.length>0}","nodeType":"DECISION"},"areTasksPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"findNumberOfBatches"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"areTasksPresent","description":"areTasksPresent","processRule":"(typeof contextVar.workOrderTaskData !== 'undefined' &&  contextVar.workOrderTaskData !=='')","nodeType":"DECISION"},"workflowNodes":["start","fetchEntityConfig","processFilterData","fetchTaskData","areTasksPresent","findNumberOfBatches","areMoreBatchesPresent","getMoreTasksData","appendTasks","processWorkOrderTaskData","isBookingDataPresent","loopThroughBookingData","processBookingDataData","notifyNodeBookingRemainderSMS","end"],"processFilterData":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTaskData"}],"contextChangePermitted":true,"name":"processFilterData","description":"processFilterData","processRule":"{ function toDateString(date) { var dateString = ''; function pad(number) { if (number < 10) { return '0' + number; } return number; } if (date instanceof Date) { dateString = date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + ' ' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + '.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5); } return dateString; } contextVar.startDate = new Date(); contextVar.startDate.setDate(contextVar.startDate.getDate() + 1); contextVar.startDate = toDateString(contextVar.startDate); contextVar.endDate = new Date(); contextVar.endDate.setDate(contextVar.endDate.getDate() + 2); contextVar.endDate = toDateString(contextVar.endDate); contextVar.appointmentFilter = '{$workOrderTask.statusId} IN {@taskStatus} AND (({$workOrderTaskAppointmentWindow.startDate} >= {@startDate} AND {$workOrderTaskAppointmentWindow.startDate} <= {@endDate}) || ({$workOrderTaskAppointmentWindow.endDate} >= {@startDate} AND {$workOrderTaskAppointmentWindow.endDate} <= {@endDate}))'; if (Array.isArray(contextVar.entityConfigData)) { for (let value of contextVar.entityConfigData) { if (value.configKey === 'configurations') { value.configValue = JSON.parse(value.configValue); for (let key in value.configValue) { contextVar[key] = value.configValue[key]; } } } } }","nodeType":"PROCESS","jsEngine":"es6"},"areMoreBatchesPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"getMoreTasksData"},{"exitPortType":"FalseStep","nodeId":"processWorkOrderTaskData"}],"name":"areMoreBatchesPresent","description":"areMoreBatchesPresent","processRule":"(contextVar.noOfTasksBatches >= 2 && contextVar.noOfTasksBatches >= contextVar.tasksBatchNumber)","nodeType":"DECISION"},"loopThroughBookingData":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processBookingDataData"},{"exitPortType":"FalseStep","nodeId":"end"}],"data":"bookingData","name":"loopThroughBookingData","description":"loopThroughBookingData","inputVarMap":{},"outputVarMap":{},"nodeType":"FOREACHLOOP"},"getMoreTasksData":{"models":["workOrderTask","workOrderTaskAppointmentWindow","site","customer"],"connectors":[{"exitPortType":"NextStep","nodeId":"appendTasks"}],"columns":{"workOrderTaskAppointmentWindowStartDate":"workOrderTaskAppointmentWindow.startDate","contactTitle":"site.contactTitle","contactEmail":"site.contactEmail","timezoneOffset":"site.timezoneOffset","workOrderTaskId":"workOrderTask.id","contactPerson":"site.contactPerson","contactPhone":"site.contactPhone","customerName":"customer.companyName","workOrderTaskAppointmentWindowEndDate":"workOrderTaskAppointmentWindow.endDate"},"description":"getMoreTasksData","inputVarMap":{"customBatchSize":"batchSize","tasksBatchNumber":"batchNumber","endDate":"endDate","appointmentFilter":"filter","currentDate":"currentDate","taskStatus":"taskStatus","startDate":"startDate"},"nodeType":"QUERY","filter":"{@filter}","name":"getMoreTasksData","links":{"workOrderTask":"site","site":"customer","workOrderTaskAppointmentWindow":"workOrderTask"},"outputVarMap":{"data":"moreWorkOrderTaskData"},"batchSize":"batchSize","getCount":true,"batchNumber":"batchNumber"},"workflowContext":{"customBatchSize":1000,"configScopeArray":["customerPortal"],"taskStatus":["workOrderTaskDispatched"]},"processWorkOrderTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"isBookingDataPresent"}],"contextChangePermitted":true,"name":"processWorkOrderTaskData","description":"processWorkOrderTaskData","processRule":"{ function toDateString(date) { var dateString = ''; function pad(number) { if (number < 10) { return '0' + number; } return number; } if (date instanceof Date) { dateString = date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) + ' ' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) + '.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5); } return dateString; } contextVar.bookingData = []; if (Array.isArray(contextVar.workOrderTaskData)) { for (let value of contextVar.workOrderTaskData) { contextVar.contactPhone = value.contactPhone; contextVar.contactEmail = value.contactEmail; let startDate = ''; let startTime = ''; let endtime = ''; let appointmentWindow = ''; startDate = toDateString(new Date(new Date(value.workOrderTaskAppointmentWindowStartDate).getTime() - (value.timezoneOffset * 60000))); startTime = startDate.split(' ')[1]; startDate = contextVar.startDate.split(' ')[0]; endtime = toDateString(new Date(new Date(value.workOrderTaskAppointmentWindowEndDate).getTime() - (value.timezoneOffset * 60000))); endtime = endtime.split(' ')[1]; appointmentWindow = startTime + ' - ' + endtime; contextVar.bookingData.push({ 'customerName': value.customerName, 'contactPhone': value.contactPhone, 'contactEmail': value.contactEmail, 'startDate': startDate, 'endtime': endtime, 'appointmentWindow': appointmentWindow }); } } }","nodeType":"PROCESS","jsEngine":"es6"},"notifyNodeBookingRemainderSMS":{"connectors":[{"exitPortType":"NextStep","nodeId":"loopThroughBookingData"}],"name":"notifyNodeBookingRemainderSMS","description":"notifyNodeBookingRemainderSMS","inputVarMap":{"preferredNotification":"preferredNotification","appointmentWindow":"appointmentWindow","contactPhone":"phoneNumber","customerName":"customerName","startDate":"scheduledDate"},"targetType":"USER","outputVarMap":{},"notificationType":"SMS","templateId":"fscx2_0_bookingRemainder","nodeType":"NOTIFY"},"end":{"name":"end","description":"end","inputVarMap":{"workOrderTaskData":"workOrderTaskData"},"outputVarMap":{"workOrderTaskData":"workOrderTaskData"},"nodeType":"END"},"fetchEntityConfig":{"filter":"{$configScope} IN {@configScopeArray}","models":["EntityConfig"],"connectors":[{"exitPortType":"NextStep","nodeId":"processFilterData"}],"columns":{"configKey":"EntityConfig.configKey","valueType":"EntityConfig.valueType","configScope":"EntityConfig.configScope","configValue":"EntityConfig.configValue"},"name":"fetchEntityConfig","description":"fetchEntityConfig","inputVarMap":{"configScopeArray":"configScopeArray"},"outputVarMap":{"data":"entityConfigData"},"nodeType":"QUERY"}}