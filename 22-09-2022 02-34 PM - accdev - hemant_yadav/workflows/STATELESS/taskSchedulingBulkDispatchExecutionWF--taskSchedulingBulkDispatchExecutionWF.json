{"areMoreTasksPresent":{"connectors":[{"exitPortType":"TrueStep","nodeId":"findCurrentTaskId"},{"exitPortType":"FalseStep","nodeId":"checkSuccessList"}],"name":"areMoreTasksPresent","description":"areMoreTasksPresent","processRule":"{ typeof contextVar.tasksDispatchData != 'undefined' && contextVar.tasksDispatchData.length > 0}","nodeType":"DECISION"},"processDataToBeUpserted":{"connectors":[{"exitPortType":"NextStep","nodeId":"upsertDispatchTaskStatus"}],"contextChangePermitted":true,"name":"processDataToBeUpserted","description":"processDataToBeUpserted","processRule":"{contextVar.jsonUpsertObj = []; for (let index in contextVar.successTasksList) { contextVar.jsonUpsertObj.push({ 'id': contextVar.successTasksList[index].workOrderTaskId, 'statusId': 'workOrderTaskDispatched', 'eventType': 'workOrderTaskDispatched' }); }}","nodeType":"PROCESS","jsEngine":"es6"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"findCurrentTaskId"}],"name":"start","description":"start","nodeType":"START"},"findCurrentTaskId":{"connectors":[{"exitPortType":"NextStep","nodeId":"constraintsCheckBeforeDispatching"}],"contextChangePermitted":true,"name":"findCurrentTaskId","description":"findCurrentTaskId","processRule":"{if(typeof contextVar.tasksDispatchData != 'undefined' && contextVar.tasksDispatchData.length > 0){contextVar.workOrderTaskId= contextVar.tasksDispatchData.pop(); }}","nodeType":"PROCESS"},"constraintsCheckBeforeDispatching":{"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskListData"}],"processId":"taskSchedulingDispatchValidationCheckWF","name":"constraintsCheckBeforeDispatching","description":"constraintsCheckBeforeDispatching","inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"inventoryQtyIssue":"inventoryQtyIssue"},"nodeType":"WORKFLOW"},"upsertDispatchTaskStatus":{"modelName":"workOrderTask","connectors":[{"exitPortType":"NextStep","nodeId":"processDispatcherLogData"}],"multirecord":true,"name":"upsertDispatchTaskStatus","description":"upsertDispatchTaskStatus","inputVarMap":{"jsonUpsertObj":"data"},"nodeType":"MODEL","operation":4},"workflowNodes":["start","findCurrentTaskId","constraintsCheckBeforeDispatching","processTaskListData","areMoreTasksPresent","checkSuccessList","processDataToBeUpserted","upsertDispatchTaskStatus","processDispatcherLogData","insertingDispatchLog","end"],"processTaskListData":{"connectors":[{"exitPortType":"NextStep","nodeId":"areMoreTasksPresent"}],"contextChangePermitted":true,"name":"processTaskListData","description":"processTaskListData ","processRule":"{ if ((contextVar.crewIssue) || (contextVar.dependencyIssue) || (contextVar.inventoryQtyIssue)) { contextVar.workOrderTaskData[0]['crewIssue'] = contextVar.crewIssue; contextVar.workOrderTaskData[0]['dependencyIssue'] = contextVar.dependencyIssue;contextVar.workOrderTaskData[0]['inventoryQtyIssue'] = contextVar.inventoryQtyIssue; contextVar.failedTasksList.push(contextVar.workOrderTaskData[0]); } else { contextVar.successTasksList.push(contextVar.workOrderTaskData[0]); } }","nodeType":"PROCESS"},"workflowContext":{"dependentTaskStatusId":"workOrderTaskDispatched","successTasksList":[],"failedTasksList":[]},"insertingDispatchLog":{"modelName":"dispatchLog","connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"multirecord":true,"name":"insertingDispatchLog","description":"insertingDispatchLog","inputVarMap":{"jsonInsertObj":"data"},"nodeType":"MODEL","operation":4},"processDispatcherLogData":{"connectors":[{"exitPortType":"NextStep","nodeId":"insertingDispatchLog"}],"contextChangePermitted":true,"name":"processDispatcherLogData","description":"processDispatcherLogData","processRule":"{ contextVar.jsonInsertObj = []; if (typeof contextVar.userList != 'undefined' && Array.isArray(contextVar.userList) && contextVar.userList.length > 0) { contextVar.jsonInsertObj.push({ 'initiatedUserId': contextVar.userList[0], 'successTaskList': contextVar.successTasksList, 'failureTaskList': contextVar.failedTasksList }); } else { contextVar.jsonInsertObj.push({ 'initiatedUserId': 'automation', 'successTaskList': contextVar.successTasksList, 'failureTaskList': contextVar.failedTasksList }); } }","nodeType":"PROCESS"},"end":{"name":"end","description":"end","inputVarMap":{"successTasksList":"successTasksList","failedTasksList":"failedTasksList"},"outputVarMap":{"successTasksList":"successTasksList","failedTasksList":"failedTasksList"},"nodeType":"END"},"checkSuccessList":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processDataToBeUpserted"},{"exitPortType":"FalseStep","nodeId":"processDispatcherLogData"}],"name":"checkSuccessList","description":"checkSuccessList","processRule":"(typeof contextVar.successTasksList != 'undefined' && Array.isArray(contextVar.successTasksList) && contextVar.successTasksList.length>0)","nodeType":"DECISION"}}