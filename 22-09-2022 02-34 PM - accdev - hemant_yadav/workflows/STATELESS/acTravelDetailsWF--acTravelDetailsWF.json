{"googleDistanceAPI":{"connectors":[{"exitPortType":"NextStep","nodeId":"processDistance"}],"name":"googleDistanceAPI","description":"googleDistanceAPI","networkId":"googleDistanceMatrixAPI","inputVarMap":{"destinations":"destinations","origins":"origins","travelMode":"travelMode"},"outputVarMap":{"data":"distanceData"},"nodeType":"NETWORK"},"fetchTaskDetails":{"filter":"{$workOrderTaskId}={@workOrderTaskId}","models":["workOrderTask","site"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskData"}],"columns":{"workOrderTaskStartDate":"workOrderTask.startTravelDate","workOrderTaskActualStartTime":"workOrderTask.actualStartTime","destinations":"CONCAT({$site.latitude},',',{$site.longitude},'|')","workOrderTaskId":"workOrderTask.id","workOrderTaskTravelDetails":"workOrderTask.travelDetails","siteName":"site.name","workOrderTaskEndDate":"workOrderTask.endTravelDate"},"name":"fetchTaskDetails","description":"fetchWorkOrderTaskData","inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"taskData"},"nodeType":"QUERY","translate":true},"processDistance":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processDistance","description":"processDistance","processRule":"{ if(contextVar.taskData && contextVar.taskData[0].workOrderTaskStartDate) { contextVar.taskData[0].workOrderTaskStartDate = contextVar.taskData[0].workOrderTaskStartDate.split('.')[0]; } if (typeof contextVar.distanceData[0].rows[0].elements[0].duration != 'undefined' && typeof contextVar.distanceData[0].rows[0].elements[0].duration.value != 'undefined' && contextVar.distanceData[0].rows[0].elements[0].duration.value != '') { contextVar.timeStampForArrival = contextVar.distanceData[0].rows[0].elements[0].duration.value; contextVar.startTime = new Date(contextVar.taskData[0].workOrderTaskStartDate); contextVar.duration = new Date(contextVar.startTime.setSeconds(contextVar.startTime.getSeconds() + contextVar.timeStampForArrival)).toISOString().replace('T', ' ').replace('Z', ''); if(contextVar.duration) { contextVar.duration = contextVar.duration.split('.')[0]; } } if (contextVar.distanceData[0].destination_addresses != undefined && contextVar.distanceData[0].destination_addresses != '') { contextVar.destinationAddress = contextVar.distanceData[0].destination_addresses; } if (contextVar.distanceData[0].origin_addresses != undefined && contextVar.distanceData[0].origin_addresses != '') { contextVar.originAddress = contextVar.distanceData[0].origin_addresses; } }","nodeType":"PROCESS"},"checkTaskStatus":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchTaskDetails"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"checkTaskStatus","description":"checkTaskStatus","processRule":"(typeof contextVar.statusId != 'undefined' && contextVar.viewTravelStatus == true && contextVar.statuses.indexOf(contextVar.statusId) !== -1)","nodeType":"DECISION","jsEngine":"es6"},"workflowContext":{"origins":"","statuses":["workOrderTaskDelayed","workOrderTaskIncident","workOrderTaskInTransit","workOrderTaskInProgress","workOrderTaskPendingReview","workOrderTaskCancelled","workOrderTaskCompleted","workOrderTaskDiscontinued"]},"processTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"googleDistanceAPI"}],"contextChangePermitted":true,"name":"processTaskData","description":"processTaskData","processRule":"{if(contextVar.taskData[0].workOrderTaskTravelDetails != undefined && contextVar.taskData[0].workOrderTaskTravelDetails[0].startTravelLocation != undefined && contextVar.taskData[0].workOrderTaskTravelDetails[0].startTravelLocation != '') { contextVar.origins = contextVar.taskData[0].workOrderTaskTravelDetails[0].startTravelLocation + '|'; } contextVar.destinations = contextVar.taskData[0].destinations; if(contextVar.taskData[0].workOrderTaskTravelDetails != undefined &&contextVar.taskData[0].workOrderTaskTravelDetails[0].transportMode != undefined && contextVar.taskData[0].workOrderTaskTravelDetails[0].transportMode != '') { contextVar.travelMode = contextVar.taskData[0].workOrderTaskTravelDetails[0].transportMode.toLowerCase(); }}","nodeType":"PROCESS"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"checkTaskStatus"}],"name":"start","description":"start","nodeType":"START"},"end":{"name":"End","description":"end","processRule":"","inputVarMap":{"duration":"duration","destinationAddress":"destinationAddress","originAddress":"originAddress","taskData":"taskData"},"outputVarMap":{"duration":"duration","destinationAddress":"destinationAddress","originAddress":"originAddress","taskData":"taskData"},"nodeType":"END"},"workflowNodes":["start","checkTaskStatus","fetchTaskDetails","processTaskData","googleDistanceAPI","processDistance","end"]}