{"fetchTechniciansTask":{"models":["workOrderTask","site","taskScheduleBreakdown","taskType","workOrder"],"connectors":[{"exitPortType":"NextStep","nodeId":"decisionNode"}],"havingClause":"taskScheduleBreakdownCount < 2","columns":{"workOrderTaskTypeId":"workOrderTask.taskTypeId","slaDeadline":"workOrder.deadline","taskScheduleBreakdownCount":"COUNT({$taskScheduleBreakdown.id})","workOrderTaskId":"workOrderTask.id","workOrderTaskRegionId":"site.regionId","workOrderTaskCustomerId":"workOrder.customerId","workOrderTaskWorkOrderTypeId":"workOrder.workOrderTypeId"},"outerJoinOnModel":"workOrderTask","description":"fetchTechniciansTask","inputVarMap":{"initialDueDate":"initialDueDate","dueDate":"dueDate","assignee":"assignee","taskId":"taskId"},"groupBy":"workOrderTaskId","nodeType":"QUERY","filter":"{$workOrderTask.assignedToUserId} = {@assignee} AND {$workOrderTask.id} != {@taskId} AND {$taskType.webTask} = false AND {$taskType.crewTask} = false AND ({$workOrderTask.isLongDurationTask} = false OR {$workOrderTask.isLongDurationTask} IS NULL) AND {$workOrderTask.statusId} = 'workOrderTaskScheduled' AND ({$workOrderTask.scheduledDate} BETWEEN {@initialDueDate}  AND {@dueDate})","name":"fetchTechniciansTask","links":{"workOrder":"workOrderTask","workOrderTask":"site","taskType":"workOrderTask","taskScheduleBreakdown":"workOrderTask"},"outputVarMap":{"data":"workOrderTaskDataToAutoSchedule"}},"callSchedulerLogModelWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"processId":"schedulerLogModelWF","name":"callSchedulerLogModelWF","description":"callSchedulerLogModelWF","inputVarMap":{"schedulerLog":"schedulerLog"},"outputVarMap":{},"nodeType":"WORKFLOW"},"callWorkOrderTaskRecommendationModelWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"callWorkOrderTaskModelWF"}],"processId":"workOrderTaskRecommendationModelWF","name":"callWorkOrderTaskRecommendationModelWF","description":"callWorkOrderTaskRecommendationModelWF","inputVarMap":{"workOrderTaskRecommendation":"workOrderTaskRecommendation"},"outputVarMap":{},"nodeType":"WORKFLOW"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"processWorkOrderTaskData"}],"name":"start","description":"start","nodeType":"START"},"processTechniciansTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"callSchedulerLogModelWF"}],"contextChangePermitted":true,"name":"processTechniciansTaskData","description":"processTechniciansTaskData","processRule":"@S8LLK1O3B5","nodeType":"PROCESS","jsEngine":"es6"},"workflowNodes":["start","processWorkOrderTaskData","fetchWorkOrderTaskRecommendation","callWorkOrderTaskRecommendationModelWF","callWorkOrderTaskModelWF","callBreakdownWF","fetchTechniciansTask","decisionNode","processTechniciansTaskData","callSchedulerLogModelWF","end"],"fetchWorkOrderTaskRecommendation":{"filter":"{$workOrderTaskRecommendation.workOrderTaskId} = {@workOrderTaskId} AND {$workOrderTaskRecommendation.sendFurtherRecommendation} = false AND {$workOrderTaskRecommendation.recommendationType} = 'longRunningTask'","models":["workOrderTaskRecommendation"],"connectors":[{"exitPortType":"NextStep","nodeId":"callWorkOrderTaskRecommendationModelWF"}],"columns":{"id":"workOrderTaskRecommendation.id","sendFurtherRecommendation":"IF({$workOrderTaskRecommendation.sendFurtherRecommendation} = false, 'true', 'true')"},"name":"fetchWorkOrderTaskRecommendation","description":"fetchWorkOrderTaskRecommendation","inputVarMap":{"taskId":"workOrderTaskId"},"links":{},"outputVarMap":{"data":"workOrderTaskRecommendation"},"batchSize":1,"nodeType":"QUERY","getCount":true},"workflowContext":{"filter":"","modelName":"BatchScheduler","statusTargetModel":"schedulerLog","noOfDaysSchedulerWillSearch":10,"schedulerId":"XBX010O9UN","schedulerType":"longRunningTask","schedulerLog":[],"status":"schedulerLogQueued"},"decisionNode":{"connectors":[{"exitPortType":"TrueStep","nodeId":"processTechniciansTaskData"},{"exitPortType":"FalseStep","nodeId":"end"}],"name":"decisionNode","description":"decisionNode","processRule":"(Array.isArray(contextVar.workOrderTaskDataToAutoSchedule) && contextVar.workOrderTaskDataToAutoSchedule.length > 0)","nodeType":"DECISION"},"processWorkOrderTaskData":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchWorkOrderTaskRecommendation"}],"contextChangePermitted":true,"name":"processWorkOrderTaskData","description":"processWorkOrderTaskData","processRule":"{contextVar.workOrderTaskJsonObj = []; contextVar.taskScheduleBreakdownJsonObj = []; var estimatedDuration = contextVar.workOrderTask.duration + 60; contextVar.scheduledDate = contextVar.workOrderTask.scheduledDate; contextVar.assignee = contextVar.workOrderTask.assignee; contextVar.taskId = contextVar.workOrderTask.taskId; contextVar.initialDueDate = contextVar.workOrderTask.dueDate; var dueDate = new Date(contextVar.scheduledDate); dueDate.setMinutes(dueDate.getMinutes() + estimatedDuration); contextVar.dueDate = dueDate.toISOString().replace('T', ' ').replace('Z', ''); contextVar.workOrderTaskJsonObj.push({ 'dueDate': contextVar.dueDate, 'estimatedDuration': estimatedDuration, 'id': contextVar.taskId }); contextVar.taskScheduleBreakdownJsonObj.push({ 'startDate': contextVar.scheduledDate, 'endDate': contextVar.dueDate, 'workOrderTaskId': contextVar.workOrderTask.taskId, 'duration': estimatedDuration });}","nodeType":"PROCESS"},"callBreakdownWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchTechniciansTask"}],"processId":"taskScheduleBreakdownModelWF","name":"callBreakdownWF","description":"callBreakdownWF","inputVarMap":{"taskScheduleBreakdownJsonObj":"taskScheduleBreakdown","taskId":"workOrderTaskId"},"outputVarMap":{},"nodeType":"WORKFLOW"},"end":{"name":"end","description":"end","inputVarMap":{},"outputVarMap":{},"nodeType":"END"},"callWorkOrderTaskModelWF":{"connectors":[{"exitPortType":"NextStep","nodeId":"callBreakdownWF"}],"processId":"workOrderTaskModelWF","name":"callWorkOrderTaskModelWF","description":"callWorkOrderTaskModelWF","inputVarMap":{"workOrderTaskJsonObj":"workOrderTask"},"outputVarMap":{},"nodeType":"WORKFLOW"}}