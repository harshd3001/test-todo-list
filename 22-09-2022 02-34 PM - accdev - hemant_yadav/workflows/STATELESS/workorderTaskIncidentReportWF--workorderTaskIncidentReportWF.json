{"processTaskIncidentData":{"connectors":[{"exitPortType":"NextStep","nodeId":"hasNonTranslatedArray"}],"contextChangePermitted":true,"name":"processTaskIncidentData","description":"processTaskIncidentData","processRule":"contextVar.incidentReportsData = []; contextVar.count = 0; if (contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails != undefined && contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails != '') { for (var i = 0; i < contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails.length; i++) { var obj = {}; contextVar.nonTranlatedArray = []; contextVar.listOptionsData.forEach(function(element) { if (element.listOptionName.indexOf('{%') != -1) { contextVar.nonTranlatedArray.push(element.listOptionName.replace(/^{%/mg, '').replace(/}$/mg,'')); } if (element.listOptionId == contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].incidentReason) { obj['travelIncidentReason'] = element.listOptionName.replace(/^{%/mg, '').replace(/}$/mg,'');; } if (element.listOptionId == contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].incidentTypeValue) { obj['incidentType'] = element.listOptionName.replace(/^{%/mg, '').replace(/}$/mg,''); } if (element.listOptionId == contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssueType) { obj['reportIssueType'] = element.listOptionName.replace(/^{%/mg, '').replace(/}$/mg,''); } }); obj['reportIssueCapturedTime'] = contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssueCapturedTime; if (contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].delay) { obj['taskDelay'] = contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].delay; } else { obj['taskDelay'] = '-'; } obj['reportIssuePhotoFirstMedia'] = contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssuePhotoFirst.media; obj['reportIssuePhotoFirstComment'] = contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssuePhotoFirst.comment; if (contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssuePhotoSecond != undefined && contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssuePhotoSecond != '') { obj['reportIssuePhotoSecondMedia'] = contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssuePhotoSecond.media; obj['reportIssuePhotoSecondComment'] = contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssuePhotoSecond.comment; } obj['reportIssueTechnician'] = contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssueTechnician; obj['reportIssueDescription'] = contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssueDescription; contextVar.incidentReportsData.push(obj); contextVar.count += 1; } contextVar.incidentReportsData.sort(function(a, b) { return new Date(b.reportIssueCapturedTime) - new Date(a.reportIssueCapturedTime) }) }","nodeType":"PROCESS"},"fetchWorkOrderTaskIncidentData":{"filter":"{$workOrderTaskId} = {@workOrderTaskId}","models":["workOrderTask"],"connectors":[{"exitPortType":"NextStep","nodeId":"processListOptionArrayData"}],"columns":{"workOrderTaskIncidentDetails":"workOrderTask.incidentDetails","workOrderTaskStatusId":"workOrderTask.statusId","workOrderTaskId":"workOrderTask.id"},"name":"fetchWorkOrderTaskIncidentData","description":"fetchWorkOrderTaskIncidentData","inputVarMap":{"workOrderTaskId":"workOrderTaskId"},"outputVarMap":{"data":"fetchTaskIncidentData"},"nodeType":"QUERY","getCount":true},"hasNonTranslatedArray":{"connectors":[{"exitPortType":"TrueStep","nodeId":"fetchResources"},{"exitPortType":"FalseStep","nodeId":"processIncidentDataForDiscontinuedTask"}],"name":"hasNonTranslatedArray","description":"hasNonTranslatedArray","processRule":"contextVar.nonTranlatedArray.length != 0","nodeType":"DECISION"},"start":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchWorkOrderTaskIncidentData"}],"name":"Start","description":"Start","nodeType":"START"},"end":{"name":"end","description":"End","inputVarMap":{"incidentReportsData":"incidentReportsData","count":"count","discontinuedTaskData":"discontinuedTaskData"},"outputVarMap":{"incidentReportsData":"incidentReportsData","count":"count","discontinuedTaskData":"discontinuedTaskData"},"nodeType":"END"},"fetchListOptionsName":{"filter":"{$listOptionId} IN {@listOptionArray}","models":["listOptionAnswer"],"connectors":[{"exitPortType":"NextStep","nodeId":"processTaskIncidentData"}],"columns":{"listOptionName":"CONCAT(\"@lang.['\",SUBSTRING({$listOptionAnswer.answerOptionText},3,LENGTH({$listOptionAnswer.answerOptionText}) - 3), \"','\",{$listOptionAnswer.answerOptionText},\"']\")","listOptionId":"listOptionAnswer.id"},"name":"fetchListOptionsName","description":"fetchListOptionsName","inputVarMap":{"listOptionArray":"listOptionArray"},"outputVarMap":{"data":"listOptionsData"},"nodeType":"QUERY","translate":true},"processIncidentDataForDiscontinuedTask":{"connectors":[{"exitPortType":"NextStep","nodeId":"end"}],"contextChangePermitted":true,"name":"processIncidentDataForDiscontinuedTask","description":"processIncidentDataForDiscontinuedTask","processRule":"if (contextVar.fetchTaskIncidentData[0].workOrderTaskStatusId === 'workOrderTaskDiscontinued') { contextVar.discontinuedTaskData = contextVar.incidentReportsData[0]; } for(var i =0; i< contextVar.incidentReportsData.length;i++) { if(contextVar.resourcesData) { for(var j =0; j< contextVar.resourcesData.length;j++) { if(contextVar.incidentReportsData[i].incidentType == contextVar.resourcesData[j].id ) { contextVar.incidentReportsData[i].incidentType = contextVar.resourcesData[j].resource ? contextVar.resourcesData[j].resource : ''; } if(contextVar.incidentReportsData[i].travelIncidentReason == contextVar.resourcesData[j].id) { contextVar.incidentReportsData[i].travelIncidentReason = contextVar.resourcesData[j].resource ? contextVar.resourcesData[j].resource : ''; } if(contextVar.incidentReportsData[i].reportIssueType == contextVar.resourcesData[j].id) { contextVar.incidentReportsData[i].reportIssueType = contextVar.resourcesData[j].resource ? contextVar.resourcesData[j].resource : ''; } } } }","nodeType":"PROCESS"},"workflowNodes":["start","fetchWorkOrderTaskIncidentData","processListOptionArrayData","fetchListOptionsName","processTaskIncidentData","hasNonTranslatedArray","fetchResources","processIncidentDataForDiscontinuedTask","end"],"processListOptionArrayData":{"connectors":[{"exitPortType":"NextStep","nodeId":"fetchListOptionsName"}],"contextChangePermitted":true,"name":"processListOptionArrayData","description":"processListOptionArrayData","processRule":"if (typeof contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails != 'undefined' && contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails != '') { contextVar.listOptionArray = []; for (var i = 0; i < contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails.length; i++) { if (contextVar.listOptionArray.indexOf(contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].incidentTypeValue)) { contextVar.listOptionArray.push(contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].incidentTypeValue); } if (contextVar.listOptionArray.indexOf(contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].incidentReason)) { contextVar.listOptionArray.push(contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].incidentReason); } if (contextVar.listOptionArray.indexOf(contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssueType)) { contextVar.listOptionArray.push(contextVar.fetchTaskIncidentData[0].workOrderTaskIncidentDetails[i].reportIssueType); } } }","nodeType":"PROCESS"},"fetchResources":{"models":["Resource"],"connectors":[{"exitPortType":"NextStep","nodeId":"processIncidentDataForDiscontinuedTask"}],"columns":{"resource":"Resource.resource","id":"Resource.id","locale":"Resource.locale","title":"Resource.title"},"description":"fetchResources","inputVarMap":{"nonTranlatedArray":"nonTranlatedArray"},"nodeType":"QUERY","translate":true,"filter":"{$locale} = 'en-us' AND {$id} in {@nonTranlatedArray}","name":"fetchResources","outputVarMap":{"data":"resourcesData"},"batchSize":50,"getCount":true,"batchNumber":1}}